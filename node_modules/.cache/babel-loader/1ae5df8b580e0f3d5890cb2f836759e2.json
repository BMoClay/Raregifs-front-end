{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Card } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentForm({\n  cUId,\n  eachUserID,\n  onAddComment\n}) {\n  _s();\n\n  const [content, setContent] = useState(\"\");\n\n  function handleSubmitNewComment(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        content: content,\n        commentee_id: eachUserID,\n        commenter_id: cUId\n      })\n    }).then(res => res.json()).then(newComment => {\n      onAddComment(newComment);\n    });\n  }\n\n  return (\n    /*#__PURE__*/\n    // <Card>\n    _jsxDEV(Form, {\n      onSubmit: handleSubmitNewComment // width='130px'\n      ,\n      style: {\n        // display: 'flex',\n        width: '270px',\n        height: '200px',\n        padding: '10px' // alignItems: 'center',\n        // justifyContent:'center',\n\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.TextArea, {\n        style: {\n          // display: 'flex',\n          justifyContent: 'center',\n          width: '250px',\n          height: '100px',\n          padding: '10px',\n          alignItems: 'flex-start' // justifyContent:'space-around',\n\n        } // width='100px' \n        // label='write a note' \n        ,\n        placeholder: \"your note...\",\n        value: content,\n        type: \"text\",\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) // </Card> \n\n  );\n}\n\n_s(CommentForm, \"KPwtwb4lt1NZxOwnjhyyIoKb9lQ=\");\n\n_c = CommentForm;\nexport default CommentForm; // <div>\n// {tCollection.length > 0 ? ( \n//     <>  \n//     <br></br>\n//     <h2>The {eachUser.name} Collection</h2>\n//         {uAcquisitions}\n//     <CommentForm  \n//         // width='50%'\n//         eachUserID={eachUser.id} \n//         cUId={cUId} \n//         onAddComment={onAddComment}\n//     />\n//     <br></br>\n//     </>\n// ) : (\n//     <>\n//     </>\n// )}\n// <div>\n//     {tComments.length > 0 ? (\n//         <>\n//         <h3>Comments on {eachUser.name}'s collection</h3>    \n//             {uComments}\n//         </>\n//     ) : (\n//         <>\n//         </>\n//     )}\n// </div>\n// </div>\n// <div className=\"comment-form\">\n// <form onSubmit={handleSubmitNewComment}>\n//     <input \n//         type=\"text\"\n//         title=\"comment\"\n//         placeholder=\"add comment\"\n//         value={content}\n//         onChange={(e) => setContent(e.target.value)}\n//     />\n//     <button type=\"submit\">submit</button>\n// </form>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/CommentForm.js"],"names":["React","useState","Form","Card","CommentForm","cUId","eachUserID","onAddComment","content","setContent","handleSubmitNewComment","e","preventDefault","fetch","method","headers","body","JSON","stringify","commentee_id","commenter_id","then","res","json","newComment","width","height","padding","justifyContent","alignItems","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAArB,EAAwD;AAAA;;AAEpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASS,sBAAT,CAAgCC,CAAhC,EAAmC;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF2B;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBV,QAAAA,OAAO,EAAEA,OADQ;AAEjBW,QAAAA,YAAY,EAAEb,UAFG;AAGjBc,QAAAA,YAAY,EAAEf;AAHG,OAAf;AAL8B,KAAnC,CAAL,CAWKgB,IAXL,CAWWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXnB,EAYKF,IAZL,CAYWG,UAAD,IAAgB;AAClBjB,MAAAA,YAAY,CAACiB,UAAD,CAAZ;AACH,KAdL;AAeH;;AAED;AAAA;AACI;AACA,YAAC,IAAD;AACI,MAAA,QAAQ,EAAEd,sBADd,CAEI;AAFJ;AAGI,MAAA,KAAK,EAAE;AACH;AACAe,QAAAA,KAAK,EAAE,OAFJ;AAGHC,QAAAA,MAAM,EAAE,OAHL;AAIHC,QAAAA,OAAO,EAAE,MAJN,CAKH;AACA;;AANG,OAHX;AAAA,8BAYI,QAAC,IAAD,CAAM,QAAN;AACI,QAAA,KAAK,EAAE;AACH;AACAC,UAAAA,cAAc,EAAC,QAFZ;AAGHH,UAAAA,KAAK,EAAE,OAHJ;AAIHC,UAAAA,MAAM,EAAE,OAJL;AAKHC,UAAAA,OAAO,EAAE,MALN;AAMHE,UAAAA,UAAU,EAAE,YANT,CAOH;;AAPG,SADX,CAUI;AACA;AAXJ;AAYI,QAAA,WAAW,EAAC,cAZhB;AAaI,QAAA,KAAK,EAAErB,OAbX;AAcI,QAAA,IAAI,EAAC,MAdT;AAeI,QAAA,QAAQ,EAAGG,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACmB,MAAF,CAASC,KAAV;AAf/B;AAAA;AAAA;AAAA;AAAA,cAZJ,eA6BI,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CAiCI;;AAjCJ;AAmCH;;GA1DQ3B,W;;KAAAA,W;AA4DT,eAAeA,WAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Card } from 'semantic-ui-react'\n\nfunction CommentForm({ cUId, eachUserID, onAddComment }){\n\n    const [content, setContent] = useState(\"\")\n\n    function handleSubmitNewComment(e) {\n        e.preventDefault();\n        fetch(\"http://localhost:3000/comments\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                content: content,\n                commentee_id: eachUserID,\n                commenter_id: cUId,\n            }),\n        })\n            .then((res) => res.json())\n            .then((newComment) => {\n                onAddComment(newComment)\n            })\n    }\n\n    return(\n        // <Card>\n        <Form \n            onSubmit={handleSubmitNewComment} \n            // width='130px'\n            style={{\n                // display: 'flex',\n                width: '270px',\n                height: '200px',\n                padding: '10px',\n                // alignItems: 'center',\n                // justifyContent:'center',\n            }}\n            >\n            <Form.TextArea\n                style={{\n                    // display: 'flex',\n                    justifyContent:'center',\n                    width: '250px',\n                    height: '100px',\n                    padding: '10px',\n                    alignItems: 'flex-start',\n                    // justifyContent:'space-around',\n                }}\n                // width='100px' \n                // label='write a note' \n                placeholder='your note...'\n                value={content}\n                type='text'\n                onChange={(e) => setContent(e.target.value)}\n                />\n            <Form.Button>post</Form.Button>\n        </Form>\n        // </Card> \n    );\n}\n\nexport default CommentForm\n\n\n\n\n// <div>\n// {tCollection.length > 0 ? ( \n//     <>  \n//     <br></br>\n//     <h2>The {eachUser.name} Collection</h2>\n//         {uAcquisitions}\n//     <CommentForm  \n//         // width='50%'\n//         eachUserID={eachUser.id} \n//         cUId={cUId} \n//         onAddComment={onAddComment}\n//     />\n//     <br></br>\n//     </>\n// ) : (\n//     <>\n//     </>\n// )}\n// <div>\n//     {tComments.length > 0 ? (\n//         <>\n//         <h3>Comments on {eachUser.name}'s collection</h3>    \n//             {uComments}\n//         </>\n//     ) : (\n//         <>\n//         </>\n//     )}\n// </div>\n// </div>\n\n\n\n\n\n\n\n\n\n\n\n\n    // <div className=\"comment-form\">\n    // <form onSubmit={handleSubmitNewComment}>\n    //     <input \n    //         type=\"text\"\n    //         title=\"comment\"\n    //         placeholder=\"add comment\"\n    //         value={content}\n    //         onChange={(e) => setContent(e.target.value)}\n    //     />\n    //     <button type=\"submit\">submit</button>\n    // </form>\n    // </div>"]},"metadata":{},"sourceType":"module"}