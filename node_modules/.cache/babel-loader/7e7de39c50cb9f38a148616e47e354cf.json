{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/ArtCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ArtCard({\n  artwork,\n  user,\n  onDeleteArtwork,\n  setAcquisitions,\n  onDeleteAcquisition,\n  onUpdateArtwork\n}) {\n  _s();\n\n  // const [acquisition, setAcquisition] = useState(acquisition)\n  const {\n    title,\n    image,\n    id\n  } = artwork;\n  const [updatedTitle, setUpdatedTitle] = useState(title);\n\n  function handleAcquireArtworkClick(e) {\n    const acquisition = {\n      user_id: user.id,\n      artwork_id: artwork.id\n    };\n    fetch('http://localhose:3000/acquisitions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(acquisition)\n    }).then(r => r.json()).then(newAcquisition => {\n      setAcquisitions(newAcquisition);\n    });\n  }\n\n  function handleDeleteClick() {\n    fetch(`http://localhost:3000/artworks/${id}`, {\n      method: \"DELETE\"\n    });\n    onDeleteArtwork(id);\n  } // function handleDeleteAcquisitionClick() {\n  //     fetch(`http://localhost:3000/acquisitions/${id}`, {\n  //         method: \"DELETE\",\n  //     });\n  //     onDeleteAcquisition(id);\n  // } \n\n\n  function handleUpdateArtworkSubmit(e) {\n    e.preventDefault();\n    fetch(`http://localhost:3000/artworks/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: updatedTitle\n      })\n    }).then(r => r.json()).then(updatedArtwork => {\n      onUpdateArtwork(updatedArtwork);\n    });\n  }\n\n  console.log(artwork.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"art-card\",\n    children: [user && user.id === artwork.user.id, \"(\", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdateArtworkSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          autoComplete: \"off\",\n          value: updatedTitle,\n          onChange: e => setUpdatedTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"update title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: artwork.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"delete image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true), \") : (\", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: artwork.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAcquireArtworkClick,\n        children: \"acquire image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ArtCard, \"Z+CrCNL/uP15T6exGgFGhimumI4=\");\n\n_c = ArtCard;\nexport default ArtCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtCard\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/ArtCard.js"],"names":["React","useState","ArtCard","artwork","user","onDeleteArtwork","setAcquisitions","onDeleteAcquisition","onUpdateArtwork","title","image","id","updatedTitle","setUpdatedTitle","handleAcquireArtworkClick","e","acquisition","user_id","artwork_id","fetch","method","headers","body","JSON","stringify","then","r","json","newAcquisition","handleDeleteClick","handleUpdateArtworkSubmit","preventDefault","updatedArtwork","console","log","target","value","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nfunction ArtCard({ artwork, user, onDeleteArtwork, setAcquisitions, onDeleteAcquisition, onUpdateArtwork }) {\n    // const [acquisition, setAcquisition] = useState(acquisition)\n    const { title, image, id } = artwork\n    const [updatedTitle, setUpdatedTitle] = useState(title)\n\n    function handleAcquireArtworkClick(e) {\n        const acquisition = {\n          user_id: user.id,\n          artwork_id: artwork.id,\n        }\n    \n        fetch('http://localhose:3000/acquisitions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(acquisition),\n        })\n        .then(r => r.json())\n        .then(newAcquisition => {\n          setAcquisitions(newAcquisition)\n        })\n      }\n\n    function handleDeleteClick() {\n        fetch(`http://localhost:3000/artworks/${id}`, {\n          method: \"DELETE\",\n        });\n        onDeleteArtwork(id);\n      }    \n\n    // function handleDeleteAcquisitionClick() {\n    //     fetch(`http://localhost:3000/acquisitions/${id}`, {\n    //         method: \"DELETE\",\n    //     });\n    //     onDeleteAcquisition(id);\n    // } \n\n    function handleUpdateArtworkSubmit(e) {\n        e.preventDefault();\n        fetch(`http://localhost:3000/artworks/${id}`, {\n            method: \"PATCH\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ title: updatedTitle }),\n        })\n            .then((r) => r.json())\n            .then((updatedArtwork) => {\n            onUpdateArtwork(updatedArtwork);\n            });\n    }\n\n    console.log(artwork.user)\n\n    return (\n        <div className=\"art-card\">\n            {/* { user.id === artwork.user.id ? ( */}\n                { user && (user.id === artwork.user.id) }(\n                        <>\n                            <img src={image} alt={title} />\n                            <form onSubmit={handleUpdateArtworkSubmit}>\n                                <input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    autoComplete=\"off\"\n                                    value={updatedTitle}\n                                    onChange={(e) => setUpdatedTitle(e.target.value)}\n                                /><input type=\"submit\" value=\"update title\"/>\n                                <h3>{artwork.user.name}</h3>\n                            </form>\n                            <button onClick={handleDeleteClick}>delete image</button>\n                        </>\n                    ) : (\n                        <>\n                            <img src={image} alt={title} />\n                            <h3>{title}</h3>\n                            <h3>{artwork.user.name}</h3>\n                            <button onClick={handleAcquireArtworkClick}>acquire image</button>\n                        </>\n                    )\n        </div>\n    );\n}\n\nexport default ArtCard;"]},"metadata":{},"sourceType":"module"}