{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js\";\nimport React from 'react';\nimport UserAcquisitionCard from './UserAcquisitionCard';\nimport CommentForm from './CommentForm';\nimport CommentCard from './CommentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserList({\n  eachUser,\n  cUId,\n  onAcquireArtwork,\n  acquisitions,\n  comments,\n  onAddComment,\n  onDeleteComment\n}) {\n  // eachUser.comments_received\n  // const [comments, setComments] = useState([])\n  // function handleAddComment(newComment) {\n  //     const updatedCommentsArray = [newComment, ...comments];\n  //     setComments(updatedCommentsArray)\n  // } \n  // function handleDeleteComment(id) {\n  //     const updatedCommentsArray = comments.filter((comment) => comment.id !== id);\n  //     setComments(updatedCommentsArray);\n  // } \n  const collectionComments = comments.filter(comment => comment.commentee_id === eachUser.id);\n  const thisCollection = acquisitions.filter(acquisition => acquisition.user.id === eachUser.id);\n  console.log(thisCollection);\n  console.log(collectionComments);\n  const uAcquisitions = thisCollection.map(acquisition => {\n    return /*#__PURE__*/_jsxDEV(UserAcquisitionCard, {\n      aArtwork: acquisition.artwork,\n      cUId: cUId,\n      onAcquireArtwork: onAcquireArtwork\n    }, acquisition.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this);\n  });\n  const uComments = collectionComments.map(rComment => {\n    return /*#__PURE__*/_jsxDEV(CommentCard, {\n      cUId: cUId,\n      commentID: rComment.id,\n      content: rComment.content,\n      author: rComment.author,\n      commenter_id: rComment.commenter_id,\n      onDeleteComment: onDeleteComment\n    }, rComment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"The \", eachUser.name, \" Collection\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), uAcquisitions, /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Comments on \", eachUser.name, \"'s collection\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), uComments, /*#__PURE__*/_jsxDEV(CommentForm, {\n      eachUserID: eachUser.id,\n      cUId: cUId,\n      onAddComment: onAddComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_c = UserList;\nexport default UserList; // const [comments, setComments] = useState([])\n// function handleAddComment(newComment) {\n//     const updatedCommentsArray = [newComment, ...comments];\n//     setComments(updatedCommentsArray)\n// } \n// function handleDeleteComment(id) {\n//     const updatedCommentsArray = comments.filter((comment) => comment.id !== id);\n//     setComments(updatedCommentsArray);\n// } \n// const uAcquisitions =\n//     eachUser.acquisitions ? (eachUser.acquisitions.map((acquisition) => {\n//         return <UserAcquisitionCard\n//                     key={acquisition.id}\n//                     aArtwork={acquisition.artwork}\n//                     cUId={cUId}\n//                     onAcquireArtwork={onAcquireArtwork}\n//                 />\n//     }\n//     )) : (null)\n// const uComments =\n//     eachUser.comments_received ? (eachUser.comments_received.map((rComment) => {\n//             return <CommentCard\n//                         key={rComment.id}\n//                         cUId={cUId}\n//                         commentID={rComment.id}\n//                         content={rComment.content}\n//                         author={rComment.author}\n//                         commenter_id={rComment.commenter_id}\n//                         onDeleteComment={handleDeleteComment}\n//                     />\n//         }\n//     )) : (null)\n// return(\n//     <div>\n//         <h2>The {eachUser.name} Collection</h2>\n//             {uAcquisitions}\n//         <h3>Comments on {eachUser.name}'s collection</h3>    \n//             {uComments}\n//             <CommentForm \n//                 eachUserID={eachUser.id} \n//                 cUId={cUId}\n//                 onAddComment={handleAddComment}\n//                 />\n//             <br></br>\n//     </div>\n// );\n// }\n// const userAcquisitions =\n// users.map((user) => {\n//         return <AcquisitionCard\n//         // acquisition={acquisition}\n//         key={user.id}\n//         userCollection={user.acquisitions}\n//         user={user}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         // userAcquisition={userAcquisition}\n//         />\n//         user.acquisitions.map((userAcquisition) => {\n//             return console.log(userAcquisition)\n//         })\n// })\n// let userCard =\n// users.map((user) => {\n//     return (\n//         <div>\n//             <h4>{user.name}</h4>\n//             <AcquisitionCard\n//         key={user.id}\n//         user={user}\n//         userAcquisition={user.acquisitions.map((acquisition) => \n//             acquisition={acquisition}\n//             )}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         />\n//         </div>\n//     )\n// }) \n// const [eachUser, setEachUser] = useState([])\n// const [users, setUsers] = useState([])\n// // need to run a loop on users to get each user\n// // need to run a loop on each user to get each acquisition\n// useEffect(() => {\n//     fetch('http://localhost:3000/users')\n//         .then(r => r.json())\n//         .then(usersArray => {\n//             setUsers(usersArray);\n//         })\n//   }, [])\n// const userAcquisitionCard =\n//     users.map((userAcquisition) => {\n//     return <AcquisitionCard\n//         key={eachUser.id}\n//         userAcquisition={userAcquisition}\n//         eachUser={eachUser}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         />\n// })\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js"],"names":["React","UserAcquisitionCard","CommentForm","CommentCard","UserList","eachUser","cUId","onAcquireArtwork","acquisitions","comments","onAddComment","onDeleteComment","collectionComments","filter","comment","commentee_id","id","thisCollection","acquisition","user","console","log","uAcquisitions","map","artwork","uComments","rComment","content","author","commenter_id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,QAAT,CAAkB;AACNC,EAAAA,QADM;AAENC,EAAAA,IAFM;AAGNC,EAAAA,gBAHM;AAINC,EAAAA,YAJM;AAKNC,EAAAA,QALM;AAMNC,EAAAA,YANM;AAONC,EAAAA;AAPM,CAAlB,EAQU;AAEN;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAMC,kBAAkB,GAAGH,QAAQ,CAACI,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,YAAR,KAAyBV,QAAQ,CAACW,EAA/D,CAA3B;AACA,QAAMC,cAAc,GAAGT,YAAY,CAACK,MAAb,CAAqBK,WAAD,IAAiBA,WAAW,CAACC,IAAZ,CAAiBH,EAAjB,KAAwBX,QAAQ,CAACW,EAAtE,CAAvB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,kBAAZ;AAEA,QAAMU,aAAa,GACfL,cAAc,CAACM,GAAf,CAAoBL,WAAD,IAAiB;AAChC,wBAAO,QAAC,mBAAD;AAEC,MAAA,QAAQ,EAAEA,WAAW,CAACM,OAFvB;AAGC,MAAA,IAAI,EAAElB,IAHP;AAIC,MAAA,gBAAgB,EAAEC;AAJnB,OACMW,WAAW,CAACF,EADlB;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAPD,CADJ;AAUA,QAAMS,SAAS,GACXb,kBAAkB,CAACW,GAAnB,CAAwBG,QAAD,IAAc;AACjC,wBAAO,QAAC,WAAD;AAEC,MAAA,IAAI,EAAEpB,IAFP;AAGC,MAAA,SAAS,EAAEoB,QAAQ,CAACV,EAHrB;AAIC,MAAA,OAAO,EAAEU,QAAQ,CAACC,OAJnB;AAKC,MAAA,MAAM,EAAED,QAAQ,CAACE,MALlB;AAMC,MAAA,YAAY,EAAEF,QAAQ,CAACG,YANxB;AAOC,MAAA,eAAe,EAAElB;AAPlB,OACMe,QAAQ,CAACV,EADf;AAAA;AAAA;AAAA;AAAA,YAAP;AASH,GAVD,CADJ;AAaA,sBACI;AAAA,4BACI;AAAA,yBAASX,QAAQ,CAACyB,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAESR,aAFT,eAGI;AAAA,iCAAiBjB,QAAQ,CAACyB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAISL,SAJT,eAKQ,QAAC,WAAD;AACI,MAAA,UAAU,EAAEpB,QAAQ,CAACW,EADzB;AAEI,MAAA,IAAI,EAAEV,IAFV;AAGI,MAAA,YAAY,EAAEI;AAHlB;AAAA;AAAA;AAAA;AAAA,YALR,eAUQ;AAAA;AAAA;AAAA;AAAA,YAVR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;KAlEQN,Q;AAoET,eAAeA,QAAf,C,CAQA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUC;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport UserAcquisitionCard from './UserAcquisitionCard'\nimport CommentForm from './CommentForm'\nimport CommentCard from './CommentCard'\n\nfunction UserList({ \n            eachUser, \n            cUId, \n            onAcquireArtwork, \n            acquisitions,\n            comments,\n            onAddComment,\n            onDeleteComment, \n        }){\n\n    // eachUser.comments_received\n    // const [comments, setComments] = useState([])\n\n    // function handleAddComment(newComment) {\n    //     const updatedCommentsArray = [newComment, ...comments];\n    //     setComments(updatedCommentsArray)\n    // } \n\n    // function handleDeleteComment(id) {\n    //     const updatedCommentsArray = comments.filter((comment) => comment.id !== id);\n    //     setComments(updatedCommentsArray);\n    // } \n   \n    const collectionComments = comments.filter((comment) => comment.commentee_id === eachUser.id)\n    const thisCollection = acquisitions.filter((acquisition) => acquisition.user.id === eachUser.id)\n    \n    console.log(thisCollection)\n    console.log(collectionComments)\n\n    const uAcquisitions =    \n        thisCollection.map((acquisition) => {\n            return <UserAcquisitionCard\n                    key={acquisition.id}\n                    aArtwork={acquisition.artwork}\n                    cUId={cUId}\n                    onAcquireArtwork={onAcquireArtwork}\n                    />\n        })\n    \n    const uComments =\n        collectionComments.map((rComment) => {\n            return <CommentCard\n                    key={rComment.id}\n                    cUId={cUId}\n                    commentID={rComment.id}\n                    content={rComment.content}\n                    author={rComment.author}\n                    commenter_id={rComment.commenter_id}\n                    onDeleteComment={onDeleteComment}\n                    />\n        })\n\n    return(\n        <div>\n            <h2>The {eachUser.name} Collection</h2>\n                {uAcquisitions}\n            <h3>Comments on {eachUser.name}'s collection</h3>    \n                {uComments}\n                <CommentForm \n                    eachUserID={eachUser.id} \n                    cUId={cUId}\n                    onAddComment={onAddComment}\n                    />\n                <br></br>\n        </div>\n    );\n}\n\nexport default UserList;\n\n\n\n\n\n\n\n// const [comments, setComments] = useState([])\n\n// function handleAddComment(newComment) {\n//     const updatedCommentsArray = [newComment, ...comments];\n//     setComments(updatedCommentsArray)\n// } \n\n// function handleDeleteComment(id) {\n//     const updatedCommentsArray = comments.filter((comment) => comment.id !== id);\n//     setComments(updatedCommentsArray);\n// } \n\n// const uAcquisitions =\n//     eachUser.acquisitions ? (eachUser.acquisitions.map((acquisition) => {\n//         return <UserAcquisitionCard\n//                     key={acquisition.id}\n//                     aArtwork={acquisition.artwork}\n//                     cUId={cUId}\n//                     onAcquireArtwork={onAcquireArtwork}\n//                 />\n//     }\n//     )) : (null)\n\n\n// const uComments =\n//     eachUser.comments_received ? (eachUser.comments_received.map((rComment) => {\n//             return <CommentCard\n//                         key={rComment.id}\n//                         cUId={cUId}\n//                         commentID={rComment.id}\n//                         content={rComment.content}\n//                         author={rComment.author}\n//                         commenter_id={rComment.commenter_id}\n//                         onDeleteComment={handleDeleteComment}\n//                     />\n//         }\n//     )) : (null)\n\n// return(\n//     <div>\n//         <h2>The {eachUser.name} Collection</h2>\n//             {uAcquisitions}\n//         <h3>Comments on {eachUser.name}'s collection</h3>    \n//             {uComments}\n//             <CommentForm \n//                 eachUserID={eachUser.id} \n//                 cUId={cUId}\n//                 onAddComment={handleAddComment}\n//                 />\n//             <br></br>\n//     </div>\n// );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const userAcquisitions =\n// users.map((user) => {\n//         return <AcquisitionCard\n//         // acquisition={acquisition}\n//         key={user.id}\n//         userCollection={user.acquisitions}\n//         user={user}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         // userAcquisition={userAcquisition}\n//         />\n//         user.acquisitions.map((userAcquisition) => {\n//             return console.log(userAcquisition)\n//         })\n// })\n\n\n// let userCard =\n// users.map((user) => {\n//     return (\n//         <div>\n//             <h4>{user.name}</h4>\n//             <AcquisitionCard\n//         key={user.id}\n//         user={user}\n//         userAcquisition={user.acquisitions.map((acquisition) => \n//             acquisition={acquisition}\n//             )}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         />\n//         </div>\n//     )\n// }) \n\n\n\n\n\n\n\n\n\n // const [eachUser, setEachUser] = useState([])\n    // const [users, setUsers] = useState([])\n    // // need to run a loop on users to get each user\n    // // need to run a loop on each user to get each acquisition\n    // useEffect(() => {\n    //     fetch('http://localhost:3000/users')\n    //         .then(r => r.json())\n    //         .then(usersArray => {\n    //             setUsers(usersArray);\n    //         })\n    //   }, [])\n\n    // const userAcquisitionCard =\n   \n    //     users.map((userAcquisition) => {\n    //     return <AcquisitionCard\n    //         key={eachUser.id}\n    //         userAcquisition={userAcquisition}\n    //         eachUser={eachUser}\n    //         currentUser={currentUser} \n    //         onAcquireArtwork={onAcquireArtwork}\n    //         />\n    // })"]},"metadata":{},"sourceType":"module"}