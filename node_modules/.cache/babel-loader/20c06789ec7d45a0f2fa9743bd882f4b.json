{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport UserAcquisitionCard from './UserAcquisitionCard'; // import CommentsContainer from './CommentsContainer'\n\nimport CommentForm from './CommentForm';\nimport CommentCard from './CommentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserList({\n  commentsReceived,\n  userCollection,\n  eachUser,\n  currentUser,\n  onAcquireArtwork\n}) {\n  _s();\n\n  const [comments, setComments] = useState([commentsReceived]);\n\n  function handleAddComment(newComment) {\n    const updatedCommentsArray = [newComment, ...comments];\n    setComments(updatedCommentsArray);\n  }\n\n  let userCard = userCollection.map(acquisition => {\n    return /*#__PURE__*/_jsxDEV(UserAcquisitionCard, {\n      acquisition: acquisition,\n      currentUser: currentUser,\n      onAcquireArtwork: onAcquireArtwork\n    }, acquisition.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  });\n  let userComments = commentsReceived.map(comment => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentCard, {\n        content: comment.content,\n        author: comment.author,\n        commenter_id: comment.commenter_id\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), currentUser.id === comment.commenter_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"delete comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"The \", eachUser.name, \" Collection\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), userCard, /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Comments on \", eachUser.name, \"'s collection\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), userComments, /*#__PURE__*/_jsxDEV(CommentForm, {\n      eachUser: eachUser,\n      currentUser: currentUser,\n      onAddComment: handleAddComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserList, \"ax8/iiGy1bzH45iDL+lwhDjSrak=\");\n\n_c = UserList;\nexport default UserList; // const userAcquisitions =\n// users.map((user) => {\n//         return <AcquisitionCard\n//         // acquisition={acquisition}\n//         key={user.id}\n//         userCollection={user.acquisitions}\n//         user={user}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         // userAcquisition={userAcquisition}\n//         />\n//         user.acquisitions.map((userAcquisition) => {\n//             return console.log(userAcquisition)\n//         })\n// })\n// let userCard =\n// users.map((user) => {\n//     return (\n//         <div>\n//             <h4>{user.name}</h4>\n//             <AcquisitionCard\n//         key={user.id}\n//         user={user}\n//         userAcquisition={user.acquisitions.map((acquisition) => \n//             acquisition={acquisition}\n//             )}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         />\n//         </div>\n//     )\n// }) \n// const [eachUser, setEachUser] = useState([])\n// const [users, setUsers] = useState([])\n// // need to run a loop on users to get each user\n// // need to run a loop on each user to get each acquisition\n// useEffect(() => {\n//     fetch('http://localhost:3000/users')\n//         .then(r => r.json())\n//         .then(usersArray => {\n//             setUsers(usersArray);\n//         })\n//   }, [])\n// const userAcquisitionCard =\n//     users.map((userAcquisition) => {\n//     return <AcquisitionCard\n//         key={eachUser.id}\n//         userAcquisition={userAcquisition}\n//         eachUser={eachUser}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         />\n// })\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js"],"names":["React","useState","UserAcquisitionCard","CommentForm","CommentCard","UserList","commentsReceived","userCollection","eachUser","currentUser","onAcquireArtwork","comments","setComments","handleAddComment","newComment","updatedCommentsArray","userCard","map","acquisition","id","userComments","comment","content","author","commenter_id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA,cAApB;AAAoCC,EAAAA,QAApC;AAA8CC,EAAAA,WAA9C;AAA2DC,EAAAA;AAA3D,CAAlB,EAAgG;AAAA;;AAE5F,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAACK,gBAAD,CAAD,CAAxC;;AAEA,WAASO,gBAAT,CAA0BC,UAA1B,EAAsC;AAClC,UAAMC,oBAAoB,GAAG,CAACD,UAAD,EAAa,GAAGH,QAAhB,CAA7B;AACAC,IAAAA,WAAW,CAACG,oBAAD,CAAX;AACH;;AACF,MAAIC,QAAQ,GACPT,cAAc,CAACU,GAAf,CAAoBC,WAAD,IAAiB;AACpC,wBAAO,QAAC,mBAAD;AAEK,MAAA,WAAW,EAAEA,WAFlB;AAGK,MAAA,WAAW,EAAET,WAHlB;AAIK,MAAA,gBAAgB,EAAEC;AAJvB,OACUQ,WAAW,CAACC,EADtB;AAAA;AAAA;AAAA;AAAA,YAAP;AAMC,GAPD,CADL;AAUC,MAAIC,YAAY,GACZd,gBAAgB,CAACW,GAAjB,CAAsBI,OAAD,IAAa;AAC9B,wBACI;AAAA,8BACI,QAAC,WAAD;AAEI,QAAA,OAAO,EAAEA,OAAO,CAACC,OAFrB;AAGI,QAAA,MAAM,EAAED,OAAO,CAACE,MAHpB;AAII,QAAA,YAAY,EAAEF,OAAO,CAACG;AAJ1B,SACSH,OAAO,CAACF,EADjB;AAAA;AAAA;AAAA;AAAA,cADJ,EAOKV,WAAW,CAACU,EAAZ,KAAmBE,OAAO,CAACG,YAA3B,gBACG;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,uBADH,gBAKG,qCAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH,GAnBD,CADJ;AAsBA,sBACI;AAAA,4BACI;AAAA,yBAAShB,QAAQ,CAACiB,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEST,QAFT,eAGI;AAAA,iCAAiBR,QAAQ,CAACiB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAISL,YAJT,eAKQ,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEZ,QAAvB;AAAiC,MAAA,WAAW,EAAEC,WAA9C;AAA2D,MAAA,YAAY,EAAEI;AAAzE;AAAA;AAAA;AAAA;AAAA,YALR,eAMQ;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAlDQR,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUC;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react'\nimport UserAcquisitionCard from './UserAcquisitionCard'\n// import CommentsContainer from './CommentsContainer'\nimport CommentForm from './CommentForm'\nimport CommentCard from './CommentCard'\n\nfunction UserList({ commentsReceived, userCollection, eachUser, currentUser, onAcquireArtwork }){\n \n    const [comments, setComments] = useState([commentsReceived])\n\n    function handleAddComment(newComment) {\n        const updatedCommentsArray = [newComment, ...comments];\n        setComments(updatedCommentsArray)\n    } \n   let userCard =\n        userCollection.map((acquisition) => {\n        return <UserAcquisitionCard\n                    key={acquisition.id}\n                    acquisition={acquisition}\n                    currentUser={currentUser} \n                    onAcquireArtwork={onAcquireArtwork}\n                />\n        })\n\n    let userComments =\n        commentsReceived.map((comment) => {\n            return( \n                <div>\n                    <CommentCard\n                        key={comment.id}\n                        content={comment.content}\n                        author={comment.author}\n                        commenter_id={comment.commenter_id}\n                    />\n                    {currentUser.id === comment.commenter_id ? (\n                        <>\n                            <button>delete comment</button>\n                        </>\n                    ) : (\n                        <>\n                        </>\n                    )}\n                </div>\n            )\n        })\n\n    return(\n        <div>\n            <h4>The {eachUser.name} Collection</h4>\n                {userCard}\n            <h4>Comments on {eachUser.name}'s collection</h4>    \n                {userComments}\n                <CommentForm eachUser={eachUser} currentUser={currentUser} onAddComment={handleAddComment}/>\n                <br></br>\n        </div>\n    );\n}\n\nexport default UserList;\n\n\n\n// const userAcquisitions =\n// users.map((user) => {\n//         return <AcquisitionCard\n//         // acquisition={acquisition}\n//         key={user.id}\n//         userCollection={user.acquisitions}\n//         user={user}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         // userAcquisition={userAcquisition}\n//         />\n//         user.acquisitions.map((userAcquisition) => {\n//             return console.log(userAcquisition)\n//         })\n// })\n\n\n// let userCard =\n// users.map((user) => {\n//     return (\n//         <div>\n//             <h4>{user.name}</h4>\n//             <AcquisitionCard\n//         key={user.id}\n//         user={user}\n//         userAcquisition={user.acquisitions.map((acquisition) => \n//             acquisition={acquisition}\n//             )}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         />\n//         </div>\n//     )\n// }) \n\n\n\n\n\n\n\n\n\n // const [eachUser, setEachUser] = useState([])\n    // const [users, setUsers] = useState([])\n    // // need to run a loop on users to get each user\n    // // need to run a loop on each user to get each acquisition\n    // useEffect(() => {\n    //     fetch('http://localhost:3000/users')\n    //         .then(r => r.json())\n    //         .then(usersArray => {\n    //             setUsers(usersArray);\n    //         })\n    //   }, [])\n\n    // const userAcquisitionCard =\n   \n    //     users.map((userAcquisition) => {\n    //     return <AcquisitionCard\n    //         key={eachUser.id}\n    //         userAcquisition={userAcquisition}\n    //         eachUser={eachUser}\n    //         currentUser={currentUser} \n    //         onAcquireArtwork={onAcquireArtwork}\n    //         />\n    // })"]},"metadata":{},"sourceType":"module"}