{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UploadArtForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { Image } from \"cloudinary-react\";\nimport styles from \"./styles/Home.module.css\";\nimport { Form, Embed, Container } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadArtForm({\n  currentUser,\n  onCreateArtwork\n}) {\n  _s();\n\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const onDrop = useCallback(acceptedFiles => {\n    const url = `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}/upload`;\n    acceptedFiles.forEach(async acceptedFile => {\n      const {\n        signature,\n        timestamp\n      } = await getSignature();\n      const formData = new FormData();\n      formData.append(\"file\", acceptedFile); // formData.append(\"upload_preset\", process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET)\n\n      formData.append(\"signature\", signature);\n      formData.append(\"timestamp\", timestamp);\n      formData.append(\"api_key\", process.env.REACT_APP_CLOUDINARY_KEY);\n      const response = await fetch(url, {\n        method: \"post\",\n        body: formData\n      });\n      const data = await response.json();\n      setUploadedFiles(old => [...old, data]);\n    });\n  }, []); // const { getRootProps, getInputProps, isDragActive } = useDropzone({\n  //     onDrop,\n  //     accepts: \"image/*\",\n  //     multiple: false,\n  // })\n\n  function handleSubmitNewArtwork(e) {\n    e.preventDefault();\n    axios.post(\"/artworks\", {\n      title: title,\n      image: image,\n      user_id: currentUser.id\n    }).then(response => {\n      onCreateArtwork(response.data);\n      history.push(\"/\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DropzoneArea, {\n        onChange: onDrop,\n        acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            cloudName: process.env.REACT_APP_CLOUDINARY_CLOUD_NAME,\n            publicId: file.public_id,\n            width: \"300\",\n            crop: \"scale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, file.public_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmitNewArtwork,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"title\",\n          value: title,\n          placeholder: \"title\",\n          type: \"text\",\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"image-url\",\n          value: image,\n          placeholder: \"image-url\",\n          type: \"text\",\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Embed, {\n      icon: \"paint brush\",\n      url: \"https://kleki.com/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Embed, {\n      icon: \"file pdf\",\n      url: \"https://docs.google.com/presentation/d/1MXF9c1oGW3kR93imVzaFhlsm_-HYOzQZlsfwPv67BGs/edit#slide=id.p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Embed, {\n      style: {\n        height: 2800\n      },\n      icon: \"stack exchange\",\n      url: \"https://ezgif.com/pdf-to-gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadArtForm, \"vdVSyTaZPJl664PvBaMiCCLNDjI=\", false, function () {\n  return [useHistory];\n});\n\n_c = UploadArtForm;\nexport default UploadArtForm;\n\nasync function getSignature() {\n  const response = await fetch(\"/api/sign\"); // const response = await axios.post('/api/sign');\n\n  console.log(response); // const data = await response.json();\n\n  const data = await response;\n  return data; // const { signature, timestamp } = data;\n  // return { signature, timestamp };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadArtForm\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UploadArtForm.js"],"names":["React","useState","useCallback","axios","DropzoneArea","Image","styles","Form","Embed","Container","useHistory","UploadArtForm","currentUser","onCreateArtwork","uploadedFiles","setUploadedFiles","history","title","setTitle","image","setImage","onDrop","acceptedFiles","url","process","env","REACT_APP_CLOUDINARY_CLOUD_NAME","forEach","acceptedFile","signature","timestamp","getSignature","formData","FormData","append","REACT_APP_CLOUDINARY_KEY","response","fetch","method","body","data","json","old","handleSubmitNewArtwork","e","preventDefault","post","user_id","id","then","push","map","file","public_id","target","value","height","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { Image } from \"cloudinary-react\";\nimport styles from \"./styles/Home.module.css\";\nimport { Form, Embed, Container } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction UploadArtForm({ currentUser, onCreateArtwork }) {\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  const onDrop = useCallback((acceptedFiles) => {\n    const url = `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}/upload`;\n\n    acceptedFiles.forEach(async (acceptedFile) => {\n      const { signature, timestamp } = await getSignature();\n\n      const formData = new FormData();\n      formData.append(\"file\", acceptedFile);\n      // formData.append(\"upload_preset\", process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET)\n      formData.append(\"signature\", signature);\n      formData.append(\"timestamp\", timestamp);\n      formData.append(\"api_key\", process.env.REACT_APP_CLOUDINARY_KEY);\n\n      const response = await fetch(url, {\n        method: \"post\",\n        body: formData,\n      });\n      const data = await response.json();\n      setUploadedFiles((old) => [...old, data]);\n    });\n  }, []);\n\n  // const { getRootProps, getInputProps, isDragActive } = useDropzone({\n  //     onDrop,\n  //     accepts: \"image/*\",\n  //     multiple: false,\n  // })\n\n  function handleSubmitNewArtwork(e) {\n    e.preventDefault();\n    axios\n      .post(\"/artworks\", {\n        title: title,\n        image: image,\n        user_id: currentUser.id,\n      })\n      .then((response) => {\n        onCreateArtwork(response.data);\n        history.push(\"/\");\n      });\n  }\n\n  return (\n    <Container>\n      <>\n        {/* <div {...getRootProps()} className={`${styles.dropzone} ${isDragActive ? styles.active : null}`}>\n                <input {...getInputProps()}/>    \n                Drop Zone\n            </div> */}\n\n        <DropzoneArea onChange={onDrop}  acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']} />\n\n        <ul>\n          {uploadedFiles.map((file) => (\n            <li key={file.public_id}>\n              <Image\n                cloudName={process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}\n                publicId={file.public_id}\n                width=\"300\"\n                crop=\"scale\"\n              />\n            </li>\n          ))}\n        </ul>\n      </>\n      <br></br>\n      <Form onSubmit={handleSubmitNewArtwork}>\n        <br></br>\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            label=\"title\"\n            value={title}\n            placeholder=\"title\"\n            type=\"text\"\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <Form.Input\n            label=\"image-url\"\n            value={image}\n            placeholder=\"image-url\"\n            type=\"text\"\n            onChange={(e) => setImage(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Button>submit</Form.Button>\n      </Form>\n      <br></br>\n      <Embed icon=\"paint brush\" url=\"https://kleki.com/\" />\n      <br></br>\n      <Embed\n        icon=\"file pdf\"\n        url=\"https://docs.google.com/presentation/d/1MXF9c1oGW3kR93imVzaFhlsm_-HYOzQZlsfwPv67BGs/edit#slide=id.p\"\n      />\n      <br></br>\n      <Embed\n        style={{ height: 2800 }}\n        icon=\"stack exchange\"\n        url=\"https://ezgif.com/pdf-to-gif\"\n      />\n      <br></br>\n    </Container>\n  );\n}\n\nexport default UploadArtForm;\n\nasync function getSignature() {\n  const response = await fetch(\"/api/sign\");\n  // const response = await axios.post('/api/sign');\n  console.log(response);\n  // const data = await response.json();\n  const data = await response;\n\n  return data;\n  // const { signature, timestamp } = data;\n  // return { signature, timestamp };\n}\n"]},"metadata":{},"sourceType":"module"}