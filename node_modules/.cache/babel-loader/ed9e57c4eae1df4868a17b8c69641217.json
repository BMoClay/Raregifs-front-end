{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StorageCardArt.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, Image, Button, Header, Modal, Form } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction StorageCardArt({\n  artwork,\n  onDeleteArtwork,\n  onUpdateArtwork\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const aUsers = artwork.acquiring_users.map(user => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user.name\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  });\n  const {\n    id,\n    title,\n    image\n  } = artwork;\n  const [updatedTitle, setUpdatedTitle] = useState(title);\n\n  function handleDeleteClick() {\n    fetch(`http://localhost:3000/artworks/${id}`, {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(deletedArtwork => {\n      onDeleteArtwork(deletedArtwork);\n    });\n  }\n\n  function handleUpdateArtworkSubmit(e) {\n    e.preventDefault();\n    fetch(`http://localhost:3000/artworks/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: updatedTitle\n      })\n    }).then(r => r.json()).then(updatedArtwork => {\n      onUpdateArtwork(updatedArtwork);\n    });\n  }\n\n  function onAUpdateClick(e) {\n    e.preventDefault();\n    handleAcquireArtworkClick(e);\n    setOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    stackable: true,\n    centered: true,\n    style: {\n      margin: 10,\n      padding: 40\n    },\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      trigger: /*#__PURE__*/_jsxDEV(Image, {\n        size: \"large\",\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 26\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          wrapped: true,\n          size: \"huge\",\n          src: image,\n          alt: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), artwork.acquiring_users.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"collected by:\", aUsers]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleUpdateArtworkSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            label: \"update title\",\n            type: \"text\",\n            name: \"title\",\n            autoComplete: \"off\",\n            value: updatedTitle,\n            onChange: e => setUpdatedTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"delete\",\n          labelPosition: \"right\",\n          icon: \"trash\",\n          onClick: handleDeleteClick,\n          negative: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StorageCardArt, \"Ye5XebjPZaGuXjfun4Y39YEOkZQ=\");\n\n_c = StorageCardArt;\nexport default StorageCardArt; // <div className=\"storage-card\" >\n// {/* <Card> */}\n//     <img src={artwork.image} alt={artwork.title} />\n//     <h3>{artwork.title}</h3>\n//     <h4>{artwork.user_name}</h4>\n//     <Button \n//         onClick={handleDeleteAcquisitionClick}\n//         // justify-content='center'\n//         >\n//             remove from collection\n//     </Button>\n// {/* </Card> */}\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"StorageCardArt\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StorageCardArt.js"],"names":["React","useState","Grid","Image","Button","Header","Modal","Form","StorageCardArt","artwork","onDeleteArtwork","onUpdateArtwork","open","setOpen","aUsers","acquiring_users","map","user","name","id","title","image","updatedTitle","setUpdatedTitle","handleDeleteClick","fetch","method","then","res","json","deletedArtwork","handleUpdateArtworkSubmit","e","preventDefault","headers","body","JSON","stringify","r","updatedArtwork","onAUpdateClick","handleAcquireArtworkClick","margin","padding","length","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,IADJ,EAEIC,KAFJ,EAGIC,MAHJ,EAIIC,MAJJ,EAKIC,KALJ,EAMIC,IANJ,QAOS,mBAPT;;;;AASA,SAASC,cAAT,CAAwB;AACRC,EAAAA,OADQ;AAERC,EAAAA,eAFQ;AAGRC,EAAAA;AAHQ,CAAxB,EAIgB;AAAA;;AAEZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMa,MAAM,GAAGL,OAAO,CAACM,eAAR,CAAwBC,GAAxB,CAA6BC,IAAD,IAAU;AACjD,wBACI;AAAA,gBAAoBA,IAAI,CAACC;AAAzB,OAAUD,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJc,CAAf;AAMA,QAAM;AAAEA,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,MAAuBZ,OAA7B;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAACmB,KAAD,CAAhD;;AAEA,WAASI,iBAAT,GAA6B;AACzBC,IAAAA,KAAK,CAAE,kCAAiCN,EAAG,EAAtC,EAAyC;AAC1CO,MAAAA,MAAM,EAAE;AADkC,KAAzC,CAAL,CAGKC,IAHL,CAGUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHjB,EAIKF,IAJL,CAIUG,cAAc,IAAI;AACpBpB,MAAAA,eAAe,CAACoB,cAAD,CAAf;AACH,KANL;AAOC;;AAEL,WAASC,yBAAT,CAAmCC,CAAnC,EAAsC;AAClCA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,KAAK,CAAE,kCAAiCN,EAAG,EAAtC,EAAyC;AAC1CO,MAAAA,MAAM,EAAE,OADkC;AAE1CQ,MAAAA,OAAO,EAAE;AACT,wBAAgB;AADP,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEjB,QAAAA,KAAK,EAAEE;AAAT,OAAf;AALoC,KAAzC,CAAL,CAOKK,IAPL,CAOWW,CAAD,IAAOA,CAAC,CAACT,IAAF,EAPjB,EAQKF,IARL,CAQWY,cAAD,IAAoB;AACtB5B,MAAAA,eAAe,CAAC4B,cAAD,CAAf;AACH,KAVL;AAWH;;AAED,WAASC,cAAT,CAAwBR,CAAxB,EAA2B;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAQ,IAAAA,yBAAyB,CAACT,CAAD,CAAzB;AACAnB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAEH,sBACI,QAAC,IAAD;AACE,IAAA,SAAS,MADX;AACY,IAAA,QAAQ,MADpB;AAEE,IAAA,KAAK,EAAE;AACL6B,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAFT;AAAA,2BAOM,QAAC,KAAD;AACE,MAAA,OAAO,EAAE,MAAM9B,OAAO,CAAC,KAAD,CADxB;AAEE,MAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CAFvB;AAGE,MAAA,IAAI,EAAED,IAHR;AAIE,MAAA,OAAO,eAAE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,GAAG,EAAES;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJX;AAAA,8BAMG,QAAC,KAAD,CAAO,OAAP;AAAe,QAAA,KAAK,MAApB;AAAA,gCACC,QAAC,KAAD;AAAO,UAAA,OAAO,MAAd;AAAe,UAAA,IAAI,EAAC,MAApB;AAA2B,UAAA,GAAG,EAAEA,KAAhC;AAAuC,UAAA,GAAG,EAAED;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD,CAAO,WAAP;AAAA,kCACE,QAAC,MAAD;AAAA,sBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGX,OAAO,CAACM,eAAR,CAAwB6B,MAAxB,GAAiC,CAAjC,gBACG;AAAA,mCACI;AAAA,0CAAkB9B,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,2BADH,gBAKG,qCAPN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cANH,eAoBE,QAAC,KAAD,CAAO,OAAP;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEiB,yBAAhB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,KAAK,MADT;AAEI,YAAA,KAAK,EAAC,cAFV;AAGI,YAAA,IAAI,EAAC,MAHT;AAII,YAAA,IAAI,EAAC,OAJT;AAKI,YAAA,YAAY,EAAC,KALjB;AAMI,YAAA,KAAK,EAAET,YANX;AAOI,YAAA,QAAQ,EAAGU,CAAD,IAAOT,eAAe,CAACS,CAAC,CAACa,MAAF,CAASC,KAAV;AAPpC;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,QADV;AAEE,UAAA,aAAa,EAAC,OAFhB;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,OAAO,EAAEtB,iBAJX;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH;;GAnGQhB,c;;KAAAA,c;AAqGT,eAAeA,cAAf,C,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react'\nimport { \n    Grid,\n    Image,\n    Button,\n    Header,\n    Modal,\n    Form,\n  } from 'semantic-ui-react'\n\nfunction StorageCardArt({ \n                artwork, \n                onDeleteArtwork, \n                onUpdateArtwork,\n             }) {\n\n    const [open, setOpen] = React.useState(false)\n    const aUsers = artwork.acquiring_users.map((user) => {\n        return (\n            <div key={user.id}>{user.name}</div>\n        )\n    })\n    \n    const { id, title, image } = artwork\n    const [updatedTitle, setUpdatedTitle] = useState(title)\n\n    function handleDeleteClick() {\n        fetch(`http://localhost:3000/artworks/${id}`, {\n            method: \"DELETE\"\n        })\n            .then(res => res.json())\n            .then(deletedArtwork => {\n                onDeleteArtwork(deletedArtwork)\n            })\n        }\n\n    function handleUpdateArtworkSubmit(e) {\n        e.preventDefault();\n        fetch(`http://localhost:3000/artworks/${id}`, {\n            method: \"PATCH\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ title: updatedTitle }),\n        })\n            .then((r) => r.json())\n            .then((updatedArtwork) => {\n                onUpdateArtwork(updatedArtwork)\n            })\n    }\n\n    function onAUpdateClick(e) {\n        e.preventDefault();\n        handleAcquireArtworkClick(e)\n        setOpen(false)\n      }\n\n    return (\n        <Grid \n          stackable centered \n          style={{ \n            margin: 10,\n            padding: 40,\n          }}\n          >\n              <Modal\n                onClose={() => setOpen(false)}\n                onOpen={() => setOpen(true)}\n                open={open}\n                trigger={<Image size=\"large\" src={image} />}\n            >\n                 <Modal.Content image >\n                  <Image wrapped size=\"huge\" src={image} alt={title}/>\n                  <Modal.Description>\n                    <Header>{title}</Header>\n                    {artwork.acquiring_users.length > 0? (\n                        <>\n                            <h4>collected by:{aUsers}</h4>\n                        </>\n                    ) : (\n                        <>\n                        </>\n                    )}\n                  </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Form onSubmit={handleUpdateArtworkSubmit}>\n                    <Form.Input \n                        fluid \n                        label='update title'\n                        type='text'\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={updatedTitle}\n                        onChange={(e) => setUpdatedTitle(e.target.value)}\n                    />\n                    <Form.Button>submit</Form.Button>\n                  </Form>\n                  <Button\n                    content=\"delete\"\n                    labelPosition='right'\n                    icon='trash'\n                    onClick={handleDeleteClick}\n                    negative\n                  />\n                </Modal.Actions>\n            </Modal>\n        </Grid>\n    )\n}\n\nexport default StorageCardArt;    \n\n    // <div className=\"storage-card\" >\n    // {/* <Card> */}\n    //     <img src={artwork.image} alt={artwork.title} />\n    //     <h3>{artwork.title}</h3>\n    //     <h4>{artwork.user_name}</h4>\n    //     <Button \n    //         onClick={handleDeleteAcquisitionClick}\n    //         // justify-content='center'\n    //         >\n    //             remove from collection\n    //     </Button>\n    // {/* </Card> */}\n    // </div>\n"]},"metadata":{},"sourceType":"module"}