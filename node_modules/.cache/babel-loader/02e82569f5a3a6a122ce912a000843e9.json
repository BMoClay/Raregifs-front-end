{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/CommentContainer.js\";\nimport React from 'react';\nimport CommentCard from './CommentCard';\nimport { Container, Header } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentContainer({\n  cUId,\n  commenter_id,\n  content,\n  author,\n  commentID,\n  onDeleteComment,\n  name\n}) {\n  const tComments = eachUser.comments_received ? comments.filter(comment => comment.commentee_id === eachUser.id) : null;\n  const uComments = eachUser.comments_received ? tComments.map(comment => {\n    // return <CommentCard\n    return /*#__PURE__*/_jsxDEV(CommentContainer, {\n      name: eachUser.name,\n      cUId: cUId,\n      commentID: comment.id,\n      content: comment.content,\n      author: comment.author,\n      commenter_id: comment.commenter_id,\n      onDeleteComment: onDeleteComment\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(CommentCard // key={comment.id}\n    , {\n      cUId: cUId,\n      commentID: commentID,\n      content: content,\n      author: author,\n      commenter_id: commenter_id,\n      onDeleteComment: onDeleteComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CommentContainer;\nexport default CommentContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentContainer\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/CommentContainer.js"],"names":["React","CommentCard","Container","Header","CommentContainer","cUId","commenter_id","content","author","commentID","onDeleteComment","name","tComments","eachUser","comments_received","comments","filter","comment","commentee_id","id","uComments","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;;;AAEA,SAASC,gBAAT,CAA0B;AACtBC,EAAAA,IADsB;AAEtBC,EAAAA,YAFsB;AAGtBC,EAAAA,OAHsB;AAItBC,EAAAA,MAJsB;AAKtBC,EAAAA,SALsB;AAMtBC,EAAAA,eANsB;AAOtBC,EAAAA;AAPsB,CAA1B,EAQE;AAEE,QAAMC,SAAS,GACfC,QAAQ,CAACC,iBAAT,GAA8BC,QAAQ,CAACC,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,YAAR,KAAyBL,QAAQ,CAACM,EAA/D,CAA9B,GACK,IAFL;AAIA,QAAMC,SAAS,GACfP,QAAQ,CAACC,iBAAT,GAA8BF,SAAS,CAACS,GAAV,CAAeJ,OAAD,IAAa;AACjD;AACA,wBAAO,QAAC,gBAAD;AAEC,MAAA,IAAI,EAAEJ,QAAQ,CAACF,IAFhB;AAGC,MAAA,IAAI,EAAEN,IAHP;AAIC,MAAA,SAAS,EAAEY,OAAO,CAACE,EAJpB;AAKC,MAAA,OAAO,EAAEF,OAAO,CAACV,OALlB;AAMC,MAAA,MAAM,EAAEU,OAAO,CAACT,MANjB;AAOC,MAAA,YAAY,EAAES,OAAO,CAACX,YAPvB;AAQC,MAAA,eAAe,EAAEI;AARlB,OACMO,OAAO,CAACE,EADd;AAAA;AAAA;AAAA;AAAA,YAAP;AAUH,GAZyB,CAA9B,GAaK,IAdL;AAgBA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,WAAD,CACI;AADJ;AAEI,MAAA,IAAI,EAAEd,IAFV;AAGI,MAAA,SAAS,EAAEI,SAHf;AAII,MAAA,OAAO,EAAEF,OAJb;AAKI,MAAA,MAAM,EAAEC,MALZ;AAMI,MAAA,YAAY,EAAEF,YANlB;AAOI,MAAA,eAAe,EAAEI;AAPrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;KA5CQN,gB;AA+CT,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport CommentCard from './CommentCard';\nimport { Container, Header } from 'semantic-ui-react';\n\nfunction CommentContainer({\n    cUId, \n    commenter_id, \n    content, \n    author, \n    commentID, \n    onDeleteComment,\n    name \n}){\n\n    const tComments = \n    eachUser.comments_received ? (comments.filter((comment) => comment.commentee_id === eachUser.id)\n    ) : (null)\n\n    const uComments =\n    eachUser.comments_received ? (tComments.map((comment) => {\n            // return <CommentCard\n            return <CommentContainer\n                    key={comment.id}\n                    name={eachUser.name}\n                    cUId={cUId}\n                    commentID={comment.id}\n                    content={comment.content}\n                    author={comment.author}\n                    commenter_id={comment.commenter_id}\n                    onDeleteComment={onDeleteComment}\n                    />\n        })\n    ) : (null)\n\n    return( \n        <Container>\n            <CommentCard\n                // key={comment.id}\n                cUId={cUId}\n                commentID={commentID}\n                content={content}\n                author={author}\n                commenter_id={commenter_id}\n                onDeleteComment={onDeleteComment}\n            />\n        </Container>\n    )\n    \n}\n\n\nexport default CommentContainer"]},"metadata":{},"sourceType":"module"}