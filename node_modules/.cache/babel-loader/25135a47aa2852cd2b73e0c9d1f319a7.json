{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/ArtStorageCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ArtStorageCard({\n  userArtwork // currentUser, \n\n}) {\n  _s();\n\n  const [updatedTitle, setUpdatedTitle] = useState(\"\"); // const [userArtworks, setUserArtworks] = useState([])\n  // const [updatedTitle, setUpdatedTitle] = useState(title)\n  // const [userArtworks, setUserArtworks] = useState(userArtworks)\n  // const { title } = userArtwork\n\n  function handleDeleteClick() {\n    fetch(`http://localhost:3000/artworks/${userArtwork.id}`, {\n      method: \"DELETE\"\n    });\n    const updatedArtworksArray = userArtworks.filter(artwork => artwork.id !== userArtwork.id); // const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n\n    setUserArtworks(updatedArtworksArray); // onDeleteArtwork(id);\n  }\n\n  function handleUpdateArtworkSubmit(e) {\n    e.preventDefault();\n    fetch(`http://localhost:3000/artworks/${userArtwork.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: updatedTitle\n      })\n    }).then(r => r.json()).then(updatedArtwork => {\n      const updatedUserArtworksArray = userArtworks.map(artwork => {\n        if (artwork.id === updatedArtwork.id) {\n          return updatedArtwork;\n        } else {\n          return artwork;\n        }\n      });\n      setUserArtworks(updatedUserArtworksArray); // onUpdateArtwork(updatedArtwork);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userArtwork.image,\n        alt: userArtwork.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: userArtwork.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdateArtworkSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          autoComplete: \"off\",\n          value: updatedTitle,\n          onChange: e => setUpdatedTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"update title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ArtStorageCard, \"GQycKCHSNOKW+BwbAvId2jmehZs=\");\n\n_c = ArtStorageCard;\nexport default ArtStorageCard; // function handleDeleteArtwork(id) {\n//     const updatedArtworksArray = artworks.filter((artwork) => artwork.id !== id);\n//     setArtworks(updatedArtworksArray);\n// }  \n// function handleUpdateArtwork(updatedArtwork) {\n//     const updatedArtworksArray = artworks.map((artwork) => {\n//     if (artwork.id === updatedArtwork.id) {\n//         return updatedArtwork;\n//     } else {\n//         return artwork;\n//     }\n//     })\n//     setUserArtworks(updatedArtworksArray);\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtStorageCard\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/ArtStorageCard.js"],"names":["React","useState","ArtStorageCard","userArtwork","updatedTitle","setUpdatedTitle","handleDeleteClick","fetch","id","method","updatedArtworksArray","userArtworks","filter","artwork","setUserArtworks","handleUpdateArtworkSubmit","e","preventDefault","headers","body","JSON","stringify","title","then","r","json","updatedArtwork","updatedUserArtworksArray","map","image","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,SAASC,cAAT,CAAwB;AACpBC,EAAAA,WADoB,CAEpB;;AAFoB,CAAxB,EAGG;AAAA;;AAEC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD,CAFD,CAGC;AAEA;AACA;AAEA;;AAGA,WAASK,iBAAT,GAA6B;AACzBC,IAAAA,KAAK,CAAE,kCAAiCJ,WAAW,CAACK,EAAG,EAAlD,EAAqD;AACxDC,MAAAA,MAAM,EAAE;AADgD,KAArD,CAAL;AAGA,UAAMC,oBAAoB,GAAGC,YAAY,CAACC,MAAb,CAAqBC,OAAD,IAAaA,OAAO,CAACL,EAAR,KAAeL,WAAW,CAACK,EAA5D,CAA7B,CAJyB,CAKzB;;AACAM,IAAAA,eAAe,CAACJ,oBAAD,CAAf,CANyB,CAOzB;AACD;;AAEH,WAASK,yBAAT,CAAmCC,CAAnC,EAAsC;AAClCA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,KAAK,CAAE,kCAAiCJ,WAAW,CAACK,EAAG,EAAlD,EAAqD;AACtDC,MAAAA,MAAM,EAAE,OAD8C;AAEtDS,MAAAA,OAAO,EAAE;AACT,wBAAgB;AADP,OAF6C;AAKtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAElB;AAAT,OAAf;AALgD,KAArD,CAAL,CAOKmB,IAPL,CAOWC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAPjB,EAQKF,IARL,CAQWG,cAAD,IAAoB;AACtB,YAAMC,wBAAwB,GAAGhB,YAAY,CAACiB,GAAb,CAAkBf,OAAD,IAAa;AAC3D,YAAIA,OAAO,CAACL,EAAR,KAAekB,cAAc,CAAClB,EAAlC,EAAsC;AAClC,iBAAOkB,cAAP;AACH,SAFD,MAEO;AACH,iBAAOb,OAAP;AACH;AACA,OAN4B,CAAjC;AAOIC,MAAAA,eAAe,CAACa,wBAAD,CAAf,CARkB,CAS1B;AACC,KAlBL;AAmBH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAExB,WAAW,CAAC0B,KAAtB;AAA6B,QAAA,GAAG,EAAE1B,WAAW,CAACmB;AAA9C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKnB,WAAW,CAACmB;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,QAAQ,EAAEP,yBAAhB;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,YAAY,EAAC,KAHjB;AAII,UAAA,KAAK,EAAEX,YAJX;AAKI,UAAA,QAAQ,EAAGY,CAAD,IAAOX,eAAe,CAACW,CAAC,CAACc,MAAF,CAASC,KAAV;AALpC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOM;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAPN;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAYI;AAAQ,QAAA,OAAO,EAAEzB,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAjEQJ,c;;KAAAA,c;AAmET,eAAeA,cAAf,C,CACI;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {  useState } from 'react'\n\nfunction ArtStorageCard({ \n    userArtwork, \n    // currentUser, \n}) {\n\n    const [updatedTitle, setUpdatedTitle] = useState(\"\")\n    // const [userArtworks, setUserArtworks] = useState([])\n\n    // const [updatedTitle, setUpdatedTitle] = useState(title)\n    // const [userArtworks, setUserArtworks] = useState(userArtworks)\n\n    // const { title } = userArtwork\n    \n\n    function handleDeleteClick() {\n        fetch(`http://localhost:3000/artworks/${userArtwork.id}`, {\n          method: \"DELETE\",\n        });\n        const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n        // const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n        setUserArtworks(updatedArtworksArray);\n        // onDeleteArtwork(id);\n      }    \n\n    function handleUpdateArtworkSubmit(e) {\n        e.preventDefault();\n        fetch(`http://localhost:3000/artworks/${userArtwork.id}`, {\n            method: \"PATCH\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ title: updatedTitle }),\n        })\n            .then((r) => r.json())\n            .then((updatedArtwork) => {\n                const updatedUserArtworksArray = userArtworks.map((artwork) => {\n                    if (artwork.id === updatedArtwork.id) {\n                        return updatedArtwork;\n                    } else {\n                        return artwork;\n                    }\n                    })\n                    setUserArtworks(updatedUserArtworksArray);\n            // onUpdateArtwork(updatedArtwork);\n            });\n    }\n\n    return (\n        <div className=\"storage-card\">\n            <div>\n                <img src={userArtwork.image} alt={userArtwork.title} />\n                <h3>{userArtwork.title}</h3>\n                <form onSubmit={handleUpdateArtworkSubmit}>\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={updatedTitle}\n                        onChange={(e) => setUpdatedTitle(e.target.value)}\n                    /><input type=\"submit\" value=\"update title\"/>\n                </form>\n                <button onClick={handleDeleteClick}>delete</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ArtStorageCard;    \n    // function handleDeleteArtwork(id) {\n    //     const updatedArtworksArray = artworks.filter((artwork) => artwork.id !== id);\n    //     setArtworks(updatedArtworksArray);\n    // }  \n\n    // function handleUpdateArtwork(updatedArtwork) {\n    //     const updatedArtworksArray = artworks.map((artwork) => {\n    //     if (artwork.id === updatedArtwork.id) {\n    //         return updatedArtwork;\n    //     } else {\n    //         return artwork;\n    //     }\n    //     })\n    //     setUserArtworks(updatedArtworksArray);\n    // }"]},"metadata":{},"sourceType":"module"}