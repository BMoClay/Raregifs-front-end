{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/ArtStorageCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ArtStorageCard({\n  userArtwork // currentUser, \n\n}) {\n  _s();\n\n  const {\n    title,\n    id,\n    user_name\n  } = userArtwork; // const [updatedTitle, setUpdatedTitle] = useState(\"\")\n\n  const [userArtworks, setUserArtworks] = useState([]);\n  const [updatedTitle, setUpdatedTitle] = useState(title); // const [userArtworks, setUserArtworks] = useState(userArtworks)\n\n  function handleDeleteClick() {\n    fetch(`http://localhost:3000/artworks/${id}`, {\n      method: \"DELETE\"\n    });\n    const updatedArtworksArray = userArtworks.filter(artwork => artwork.id !== userArtwork.id); // const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n\n    setUserArtworks(updatedArtworksArray); // onDeleteArtwork(id);\n  }\n\n  function handleUpdateArtworkSubmit(e) {\n    e.preventDefault();\n    fetch(`http://localhost:3000/artworks/${userArtwork.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: updatedTitle\n      })\n    }).then(r => r.json()).then(updatedArtwork => {\n      const updatedUserArtworksArray = userArtworks.map(artwork => {\n        if (artwork.id === updatedArtwork.id) {\n          return updatedArtwork;\n        } else {\n          return artwork;\n        }\n      });\n      setUserArtworks(updatedUserArtworksArray); // onUpdateArtwork(updatedArtwork);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userArtwork.image,\n        alt: userArtwork.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: userArtwork.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdateArtworkSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          autoComplete: \"off\",\n          value: updatedTitle,\n          onChange: e => setUpdatedTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"update title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ArtStorageCard, \"SsKwW7hkhBxZsM6aL+rLfFH1HPs=\");\n\n_c = ArtStorageCard;\nexport default ArtStorageCard; // function handleDeleteArtwork(id) {\n//     const updatedArtworksArray = artworks.filter((artwork) => artwork.id !== id);\n//     setArtworks(updatedArtworksArray);\n// }  \n\nfunction handleDeleteClick() {\n  fetch(`http://localhost:3000/artworks/${id}`, {\n    method: \"DELETE\"\n  });\n  const updatedArtworksArray = userArtworks.filter(artwork => artwork.id !== userArtwork.id); // const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n\n  setUserArtworks(updatedArtworksArray); // onDeleteArtwork(id);\n} // function handleUpdateArtwork(updatedArtwork) {\n//     const updatedArtworksArray = artworks.map((artwork) => {\n//     if (artwork.id === updatedArtwork.id) {\n//         return updatedArtwork;\n//     } else {\n//         return artwork;\n//     }\n//     })\n//     setUserArtworks(updatedArtworksArray);\n// }\n\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtStorageCard\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/ArtStorageCard.js"],"names":["React","useState","useHistory","ArtStorageCard","userArtwork","title","id","user_name","userArtworks","setUserArtworks","updatedTitle","setUpdatedTitle","handleDeleteClick","fetch","method","updatedArtworksArray","filter","artwork","handleUpdateArtworkSubmit","e","preventDefault","headers","body","JSON","stringify","then","r","json","updatedArtwork","updatedUserArtworksArray","map","image","target","value"],"mappings":"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","sourcesContent":["import React, {  useState } from 'react'\nimport { useHistory } from 'react-router-dom';\n\nfunction ArtStorageCard({ \n    userArtwork, \n    // currentUser, \n}) {\n\n    const { title, id, user_name } = userArtwork\n    // const [updatedTitle, setUpdatedTitle] = useState(\"\")\n    const [userArtworks, setUserArtworks] = useState([])\n\n    const [updatedTitle, setUpdatedTitle] = useState(title)\n    // const [userArtworks, setUserArtworks] = useState(userArtworks)\n\n    \n    \n\n    function handleDeleteClick() {\n        fetch(`http://localhost:3000/artworks/${id}`, {\n          method: \"DELETE\",\n        });\n        const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n        // const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n        setUserArtworks(updatedArtworksArray);\n        // onDeleteArtwork(id);\n      }    \n\n    function handleUpdateArtworkSubmit(e) {\n        e.preventDefault();\n        fetch(`http://localhost:3000/artworks/${userArtwork.id}`, {\n            method: \"PATCH\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ title: updatedTitle }),\n        })\n            .then((r) => r.json())\n            .then((updatedArtwork) => {\n                const updatedUserArtworksArray = userArtworks.map((artwork) => {\n                    if (artwork.id === updatedArtwork.id) {\n                        return updatedArtwork;\n                    } else {\n                        return artwork;\n                    }\n                    })\n                    setUserArtworks(updatedUserArtworksArray);\n            // onUpdateArtwork(updatedArtwork);\n            });\n    }\n\n    return (\n        <div className=\"storage-card\">\n            <div>\n                <img src={userArtwork.image} alt={userArtwork.title} />\n                <h3>{userArtwork.title}</h3>\n                <form onSubmit={handleUpdateArtworkSubmit}>\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={updatedTitle}\n                        onChange={(e) => setUpdatedTitle(e.target.value)}\n                    /><input type=\"submit\" value=\"update title\"/>\n                </form>\n                <button onClick={handleDeleteClick}>delete</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ArtStorageCard;    \n    // function handleDeleteArtwork(id) {\n    //     const updatedArtworksArray = artworks.filter((artwork) => artwork.id !== id);\n    //     setArtworks(updatedArtworksArray);\n    // }  \n\n    function handleDeleteClick() {\n        fetch(`http://localhost:3000/artworks/${id}`, {\n          method: \"DELETE\",\n        });\n        const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n        // const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n        setUserArtworks(updatedArtworksArray);\n        // onDeleteArtwork(id);\n      }   \n\n\n\n    // function handleUpdateArtwork(updatedArtwork) {\n    //     const updatedArtworksArray = artworks.map((artwork) => {\n    //     if (artwork.id === updatedArtwork.id) {\n    //         return updatedArtwork;\n    //     } else {\n    //         return artwork;\n    //     }\n    //     })\n    //     setUserArtworks(updatedArtworksArray);\n    // }"]},"metadata":{},"sourceType":"module"}