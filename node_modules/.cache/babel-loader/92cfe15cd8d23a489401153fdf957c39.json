{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js\";\nimport React from 'react';\nimport UserAcquisitionCard from './UserAcquisitionCard';\nimport CommentForm from './CommentForm'; // import CommentContainer from './CommentContainer'\n\nimport CommentCard from './CommentCard';\nimport { Container, Card, Divider, Grid, Header, Menu, Message, Segment, Table } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserList({\n  eachUser,\n  cUId,\n  onAcquireArtwork,\n  acquisitions,\n  comments,\n  onAddComment,\n  onDeleteComment\n}) {\n  const tCollection = eachUser.acquisitions ? acquisitions.filter(acquisition => acquisition.user.id === eachUser.id) : null;\n  const uAcquisitions = eachUser.acquisitions ? tCollection.map(acquisition => {\n    return /*#__PURE__*/_jsxDEV(UserAcquisitionCard, {\n      aArtwork: acquisition.artwork,\n      cUId: cUId,\n      onAcquireArtwork: onAcquireArtwork\n    }, acquisition.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }, this);\n  }) : null;\n  const tComments = eachUser.comments_received ? comments.filter(comment => comment.commentee_id === eachUser.id) : null;\n  const uComments = eachUser.comments_received ? tComments.map(comment => {\n    return /*#__PURE__*/_jsxDEV(CommentCard // return <CommentContainer\n    , {\n      // comments={comments}\n      // eachUser={eachUser}\n      cUId: cUId,\n      commentID: comment.id,\n      content: comment.content,\n      author: comment.author,\n      commenter_id: comment.commenter_id,\n      onDeleteComment: onDeleteComment\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"user-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      inverted: true,\n      textAlign: \"center\",\n      justifyContent: \"space-around\",\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), \"The \", eachUser.name, \" Collection\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n                    html, body {\n                        background-color: #252839 !important;\n                    }\n\n                    p {\n                        align-content: center;\n                        background-color: #495285;\n                        color: #fff;\n                        display: flex;\n                        flex-direction: column;\n                        justify-content: center;\n                        min-height: 6em;\n                    }\n\n                    p > span {\n                        opacity: 0.4;\n                        text-align: center;\n                    }\n                    \n                    }\n                    `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this), tCollection.length > 0 ?\n      /*#__PURE__*/\n      //  <Grid.Column >\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), uAcquisitions, /*#__PURE__*/_jsxDEV(CommentForm, {\n          eachUserID: eachUser.id,\n          cUId: cUId,\n          onAddComment: onAddComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) //{/* </Grid.Column> */}\n      :\n      /*#__PURE__*/\n      _jsxDEV(_Fragment, {}, void 0, false), tComments.length > 0 ? /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          inverted: true,\n          textAlign: \"center\",\n          justifyContent: \"space-around\",\n          children: [\"Comments on \", eachUser.name, \"'s collection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: uComments\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_c = UserList;\nexport default UserList; //  {/* {/* // return(\n//     <Grid>\n//          {tCollection.length > 0 ? ( */}\n//{/* //             <>  \n//                 <br></br>\n//                 <h2>The {eachUser.name} Collection</h2>\n//                     {uAcquisitions}\n//                 <CommentForm  */}\n//                     eachUserID={eachUser.id} \n//                     cUId={cUId} \n//                     onAddComment={onAddComment}\n//                 />\n//                 <br></br>\n//             </>\n//     ) : (\n//         <>\n//         </>\n//     )}\n//     <div>\n//         {tComments.length > 0 ? (\n//             <>\n//                 <h3>Comments on {eachUser.name}'s collection</h3>    \n//                     {uComments}\n//             </>\n//         ) : (\n//             <>\n//             </>\n//         )}\n//     </div>\n//     </Grid>\n// );\n// return(\n//     <div>\n//          {tCollection.length > 0 ? (\n//             <>\n//                 <h2>The {eachUser.name} Collection</h2>\n//                     {uAcquisitions}\n//                 <h3>Comments on {eachUser.name}'s collection</h3>    \n//                     {uComments}\n//                 <CommentForm \n//                     eachUserID={eachUser.id} \n//                     cUId={cUId} \n//                     onAddComment={onAddComment}\n//                 />\n//                 <br></br>\n//             </>\n//     ) : (\n//         <>\n//         </>\n//     )}\n//     </div>\n// ); */}\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js"],"names":["React","UserAcquisitionCard","CommentForm","CommentCard","Container","Card","Divider","Grid","Header","Menu","Message","Segment","Table","UserList","eachUser","cUId","onAcquireArtwork","acquisitions","comments","onAddComment","onDeleteComment","tCollection","filter","acquisition","user","id","uAcquisitions","map","artwork","tComments","comments_received","comment","commentee_id","uComments","content","author","commenter_id","name","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport UserAcquisitionCard from './UserAcquisitionCard'\nimport CommentForm from './CommentForm'\n// import CommentContainer from './CommentContainer'\nimport CommentCard from './CommentCard'\n\nimport { \n    Container,\n    Card,\n    Divider, \n    Grid,\n    Header,\n    Menu,\n    Message,\n    Segment,\n    Table,\n} from 'semantic-ui-react'\n\nfunction UserList({ \n            eachUser, \n            cUId, \n            onAcquireArtwork, \n            acquisitions,\n            comments,\n            onAddComment,\n            onDeleteComment, \n        }){\n   \n    const tCollection = \n    eachUser.acquisitions ? (acquisitions.filter((acquisition) => acquisition.user.id === eachUser.id)\n    ) : (null)\n    \n    const uAcquisitions = \n    eachUser.acquisitions ? (tCollection.map((acquisition) => {\n                return <UserAcquisitionCard\n                        key={acquisition.id}\n                        aArtwork={acquisition.artwork}\n                        cUId={cUId}\n                        onAcquireArtwork={onAcquireArtwork}\n                        />\n            })\n    ) : (null)\n   \n    const tComments = \n    eachUser.comments_received ? (comments.filter((comment) => comment.commentee_id === eachUser.id)\n    ) : (null)\n\n    const uComments =\n    eachUser.comments_received ? (tComments.map((comment) => {\n            return <CommentCard\n            // return <CommentContainer\n                    key={comment.id}\n                    // comments={comments}\n                    // eachUser={eachUser}\n                    cUId={cUId}\n                    commentID={comment.id}\n                    content={comment.content}\n                    author={comment.author}\n                    commenter_id={comment.commenter_id}\n                    onDeleteComment={onDeleteComment}\n                    />\n        })\n    ) : (null)\n\n    return(\n        <Container className='user-container'>\n            <br></br>\n        <Header \n            inverted \n            textAlign='center'\n            justifyContent='space-around'\n            style={{\n                \n            }}\n        >\n            <br></br>\n            The {eachUser.name} Collection\n        </Header>\n            <Grid >\n                 <style>\n                    {`\n                    html, body {\n                        background-color: #252839 !important;\n                    }\n\n                    p {\n                        align-content: center;\n                        background-color: #495285;\n                        color: #fff;\n                        display: flex;\n                        flex-direction: column;\n                        justify-content: center;\n                        min-height: 6em;\n                    }\n\n                    p > span {\n                        opacity: 0.4;\n                        text-align: center;\n                    }\n                    \n                    }\n                    `}\n                    </style>\n                 {tCollection.length > 0 ? (\n                    //  <Grid.Column >\n                     <>  \n                        <br></br>\n                        {/* <Header inverted textAlign='center'>The {eachUser.name} Collection</Header> */}\n                            {uAcquisitions}\n                        <CommentForm \n                            eachUserID={eachUser.id} \n                            cUId={cUId} \n                            onAddComment={onAddComment}\n                        />\n                        <br></br>\n                    </>\n                    //{/* </Grid.Column> */}\n            ) : (\n                <>\n                </>\n            )}\n            {/* <div> */}\n                {tComments.length > 0 ? (\n                    <Container>\n                        <Header\n                                inverted \n                                textAlign='center'\n                                justifyContent='space-around'\n                            >\n                                Comments on {eachUser.name}'s collection\n                            </Header>\n                        <Grid>\n                        <>\n                            {/* <Header.Subheader\n                                inverted \n                                textAlign='center'\n                                justifyContent='space-around'\n                            > */}\n                                {uComments}\n                            {/* </Header.Subheader> */}\n                        </>\n                        {/* </Grid.Column> */}\n                        </Grid>\n                    </Container>\n                ) : (\n                    <>\n                    </>\n                )}\n            {/* </div> */}\n            {/* </Grid.Column> */}\n        </Grid>\n        </Container>\n    );\n}\n\nexport default UserList;\n\n\n    \n\n\n\n\n      //  {/* {/* // return(\n        //     <Grid>\n        //          {tCollection.length > 0 ? ( */}\n        //{/* //             <>  \n        //                 <br></br>\n        //                 <h2>The {eachUser.name} Collection</h2>\n        //                     {uAcquisitions}\n        //                 <CommentForm  */}\n        //                     eachUserID={eachUser.id} \n        //                     cUId={cUId} \n        //                     onAddComment={onAddComment}\n        //                 />\n        //                 <br></br>\n        //             </>\n        //     ) : (\n        //         <>\n        //         </>\n        //     )}\n        //     <div>\n        //         {tComments.length > 0 ? (\n        //             <>\n        //                 <h3>Comments on {eachUser.name}'s collection</h3>    \n        //                     {uComments}\n        //             </>\n        //         ) : (\n        //             <>\n        //             </>\n        //         )}\n        //     </div>\n        //     </Grid>\n        // );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // return(\n        //     <div>\n        //          {tCollection.length > 0 ? (\n        //             <>\n        //                 <h2>The {eachUser.name} Collection</h2>\n        //                     {uAcquisitions}\n        //                 <h3>Comments on {eachUser.name}'s collection</h3>    \n        //                     {uComments}\n        //                 <CommentForm \n        //                     eachUserID={eachUser.id} \n        //                     cUId={cUId} \n        //                     onAddComment={onAddComment}\n        //                 />\n        //                 <br></br>\n        //             </>\n        //     ) : (\n        //         <>\n        //         </>\n        //     )}\n        //     </div>\n        // ); */}"]},"metadata":{},"sourceType":"module"}