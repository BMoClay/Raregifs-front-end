{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/ArtStorageCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import { useHistory } from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ArtStorageCard({\n  userArtwork,\n  currentUser,\n  artworks,\n  setArtworks,\n  onDeleteArtwork,\n  onUpdateArtwork\n}) {\n  _s();\n\n  // let history = useHistory()\n  const {\n    title,\n    id,\n    image\n  } = userArtwork; // const [updatedTitle, setUpdatedTitle] = useState(\"\")\n\n  const [userArtworks, setUserArtworks] = useState([]);\n  const [updatedTitle, setUpdatedTitle] = useState(title); // const [userArtworks, setUserArtworks] = useState(userArtworks)\n\n  function handleDeleteClick() {\n    fetch(`http://localhost:3000/artworks/${id}`, {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(deletedartwork => {\n      setUserArtworks(updatedUserArtworksArray); // history.push('/Storage')\n    });\n  }\n\n  function handleUpdateArtworkSubmit(e) {\n    e.preventDefault();\n    fetch(`http://localhost:3000/artworks/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: updatedTitle\n      })\n    }).then(r => r.json()).then(updatedArtwork => {\n      const updatedUserArtworksArray = userArtworks.map(artwork => {\n        if (artwork.id === updatedArtwork.id) {\n          return updatedArtwork;\n        } else {\n          return artwork;\n        }\n      });\n      setUserArtworks(updatedUserArtworksArray); // onUpdateArtwork(updatedArtwork);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdateArtworkSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          autoComplete: \"off\",\n          value: updatedTitle,\n          onChange: e => setUpdatedTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"update title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ArtStorageCard, \"SsKwW7hkhBxZsM6aL+rLfFH1HPs=\");\n\n_c = ArtStorageCard;\nexport default ArtStorageCard; // function handleDeleteArtwork(id) {\n//     const updatedArtworksArray = artworks.filter((artwork) => artwork.id !== id);\n//     setArtworks(updatedArtworksArray);\n// }  \n// function handleDeleteClick() {\n//     fetch(`http://localhost:3000/artworks/${id}`, {\n//       method: \"DELETE\",\n//     });\n//     const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n//     // const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n//     setUserArtworks(updatedArtworksArray);\n//     // onDeleteArtwork(id);\n//   }   \n// function handleUpdateArtwork(updatedArtwork) {\n//     const updatedArtworksArray = artworks.map((artwork) => {\n//     if (artwork.id === updatedArtwork.id) {\n//         return updatedArtwork;\n//     } else {\n//         return artwork;\n//     }\n//     })\n//     setUserArtworks(updatedArtworksArray);\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtStorageCard\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/ArtStorageCard.js"],"names":["React","useState","ArtStorageCard","userArtwork","currentUser","artworks","setArtworks","onDeleteArtwork","onUpdateArtwork","title","id","image","userArtworks","setUserArtworks","updatedTitle","setUpdatedTitle","handleDeleteClick","fetch","method","then","res","json","deletedartwork","updatedUserArtworksArray","handleUpdateArtworkSubmit","e","preventDefault","headers","body","JSON","stringify","r","updatedArtwork","map","artwork","target","value"],"mappings":"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","sourcesContent":["import React, {  useState } from 'react'\n// import { useHistory } from 'react-router-dom';\n\nfunction ArtStorageCard({ \n    userArtwork,\n    currentUser,\n    artworks,\n    setArtworks,\n    onDeleteArtwork,\n    onUpdateArtwork, \n}) {\n\n    // let history = useHistory()\n    const { title, id, image } = userArtwork\n    // const [updatedTitle, setUpdatedTitle] = useState(\"\")\n    const [userArtworks, setUserArtworks] = useState([])\n\n    const [updatedTitle, setUpdatedTitle] = useState(title)\n    // const [userArtworks, setUserArtworks] = useState(userArtworks)\n\n    function handleDeleteClick() {\n        fetch(`http://localhost:3000/artworks/${id}`, {\n            method: \"DELETE\"\n        })\n            .then(res => res.json())\n            .then((deletedartwork) => {\n               \n                setUserArtworks(updatedUserArtworksArray)\n                // history.push('/Storage')\n            })\n        }\n\n    function handleUpdateArtworkSubmit(e) {\n        e.preventDefault();\n        fetch(`http://localhost:3000/artworks/${id}`, {\n            method: \"PATCH\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ title: updatedTitle }),\n        })\n            .then((r) => r.json())\n            .then((updatedArtwork) => {\n                const updatedUserArtworksArray = userArtworks.map((artwork) => {\n                    if (artwork.id === updatedArtwork.id) {\n                        return updatedArtwork;\n                    } else {\n                        return artwork;\n                    }\n                    })\n                    setUserArtworks(updatedUserArtworksArray);\n            // onUpdateArtwork(updatedArtwork);\n            });\n    }\n\n    return (\n        <div className=\"storage-card\">\n            <div>\n                <img src={image} alt={title} />\n                <h3>{title}</h3>\n                <form onSubmit={handleUpdateArtworkSubmit}>\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={updatedTitle}\n                        onChange={(e) => setUpdatedTitle(e.target.value)}\n                    /><input type=\"submit\" value=\"update title\"/>\n                </form>\n                <button onClick={handleDeleteClick}>delete</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ArtStorageCard;    \n    // function handleDeleteArtwork(id) {\n    //     const updatedArtworksArray = artworks.filter((artwork) => artwork.id !== id);\n    //     setArtworks(updatedArtworksArray);\n    // }  \n\n    // function handleDeleteClick() {\n    //     fetch(`http://localhost:3000/artworks/${id}`, {\n    //       method: \"DELETE\",\n    //     });\n    //     const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n    //     // const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== userArtwork.id);\n    //     setUserArtworks(updatedArtworksArray);\n    //     // onDeleteArtwork(id);\n    //   }   \n\n\n\n    // function handleUpdateArtwork(updatedArtwork) {\n    //     const updatedArtworksArray = artworks.map((artwork) => {\n    //     if (artwork.id === updatedArtwork.id) {\n    //         return updatedArtwork;\n    //     } else {\n    //         return artwork;\n    //     }\n    //     })\n    //     setUserArtworks(updatedArtworksArray);\n    // }"]},"metadata":{},"sourceType":"module"}