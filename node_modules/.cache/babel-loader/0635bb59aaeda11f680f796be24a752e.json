{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport StorageList from './StorageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StoragePage({\n  currentUser\n}) {\n  _s();\n\n  const [storedAcquisitions, setCurrentUserAcquisitions] = useState([]);\n  const [currentUserArtworks, setCurrentUserArtworks] = useState([]);\n  const {\n    id\n  } = currentUser;\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${id}/acquisitions`).then(r => r.json()).then(userAcquisitionsArray => {\n      setCurrentUserAcquisitions(userAcquisitionsArray);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${id}/artworks`).then(r => r.json()).then(userArtworksArray => {\n      setCurrentUserArtworks(userArtworksArray);\n    });\n  }, []);\n\n  function handleDeleteAcquisition(id) {\n    const updatedAcquisitionsArray = currentUserAcquisitions.filter(acquisition => acquisition.id !== id);\n    setCurrentUserAcquisitions(updatedAcquisitionsArray);\n  }\n\n  function handleUpdateArtwork(updatedArtwork) {\n    const updatedArtworksArray = currentUserArtworks.map(artwork => {\n      if (artwork.id === updatedArtwork.id) {\n        return updatedArtwork;\n      } else {\n        return artwork;\n      }\n    });\n    setCurrentUserArtworks(updatedArtworksArray);\n  }\n\n  function handleDeleteArtwork(id) {\n    const updatedArtworksArray = currentUserArtworks.filter(artwork => artwork.id !== id);\n    setCurrentUserArtworks(updatedArtworksArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage\",\n    children: /*#__PURE__*/_jsxDEV(StorageList, {\n      currentUser: currentUser,\n      onDeleteAcquisition: handleDeleteAcquisition,\n      currentUserArtworks: currentUserArtworks,\n      onDeleteArtwork: handleDeleteArtwork,\n      onUpdateArtwork: handleUpdateArtwork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n\n_s(StoragePage, \"e2pHk0T2VUjQ+qi8yJLxqCALNfU=\");\n\n_c = StoragePage;\nexport default StoragePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoragePage\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js"],"names":["React","useEffect","useState","StorageList","StoragePage","currentUser","storedAcquisitions","setCurrentUserAcquisitions","currentUserArtworks","setCurrentUserArtworks","id","fetch","then","r","json","userAcquisitionsArray","userArtworksArray","handleDeleteAcquisition","updatedAcquisitionsArray","currentUserAcquisitions","filter","acquisition","handleUpdateArtwork","updatedArtwork","updatedArtworksArray","map","artwork","handleDeleteArtwork"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAsC;AAAA;;AAEpC,QAAM,CAACC,kBAAD,EAAqBC,0BAArB,IAAmDL,QAAQ,CAAC,EAAD,CAAjE;AACA,QAAM,CAACM,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASL,WAAf;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAE,+BAA8BD,EAAG,eAAnC,CAAL,CACKE,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUG,qBAAqB,IAAI;AAC3BR,MAAAA,0BAA0B,CAACQ,qBAAD,CAA1B;AACH,KAJL;AAKD,GANQ,EAMN,EANM,CAAT;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAE,+BAA8BD,EAAG,WAAnC,CAAL,CACKE,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUI,iBAAiB,IAAI;AACvBP,MAAAA,sBAAsB,CAACO,iBAAD,CAAtB;AACH,KAJL;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,WAASC,uBAAT,CAAiCP,EAAjC,EAAqC;AACnC,UAAMQ,wBAAwB,GAAGC,uBAAuB,CAACC,MAAxB,CAAgCC,WAAD,IAAiBA,WAAW,CAACX,EAAZ,KAAmBA,EAAnE,CAAjC;AACAH,IAAAA,0BAA0B,CAACW,wBAAD,CAA1B;AACD;;AAED,WAASI,mBAAT,CAA6BC,cAA7B,EAA6C;AAC3C,UAAMC,oBAAoB,GAAGhB,mBAAmB,CAACiB,GAApB,CAAyBC,OAAD,IAAa;AAChE,UAAIA,OAAO,CAAChB,EAAR,KAAea,cAAc,CAACb,EAAlC,EAAsC;AAClC,eAAOa,cAAP;AACH,OAFD,MAEO;AACH,eAAOG,OAAP;AACH;AACF,KAN4B,CAA7B;AAOAjB,IAAAA,sBAAsB,CAACe,oBAAD,CAAtB;AACD;;AAED,WAASG,mBAAT,CAA6BjB,EAA7B,EAAiC;AAC/B,UAAMc,oBAAoB,GAAGhB,mBAAmB,CAACY,MAApB,CAA4BM,OAAD,IAAaA,OAAO,CAAChB,EAAR,KAAeA,EAAvD,CAA7B;AACAD,IAAAA,sBAAsB,CAACe,oBAAD,CAAtB;AACD;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE,QAAC,WAAD;AACG,MAAA,WAAW,EAAEnB,WADhB;AAEG,MAAA,mBAAmB,EAAEY,uBAFxB;AAGG,MAAA,mBAAmB,EAAET,mBAHxB;AAIG,MAAA,eAAe,EAAEmB,mBAJpB;AAKG,MAAA,eAAe,EAAEL;AALpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAWD;;GAtDQlB,W;;KAAAA,W;AAwDT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport StorageList from './StorageList'\n\nfunction StoragePage({ currentUser }) {\n  \n  const [storedAcquisitions, setCurrentUserAcquisitions] = useState([])\n  const [currentUserArtworks, setCurrentUserArtworks] = useState([]) \n  const { id } = currentUser;\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${id}/acquisitions`)\n        .then(r => r.json())\n        .then(userAcquisitionsArray => {\n            setCurrentUserAcquisitions(userAcquisitionsArray);\n        })\n  }, [])\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${id}/artworks`)\n        .then(r => r.json())\n        .then(userArtworksArray => {\n            setCurrentUserArtworks(userArtworksArray);\n        })\n  }, [])\n\n  function handleDeleteAcquisition(id) {\n    const updatedAcquisitionsArray = currentUserAcquisitions.filter((acquisition) => acquisition.id !== id);\n    setCurrentUserAcquisitions(updatedAcquisitionsArray);\n  } \n\n  function handleUpdateArtwork(updatedArtwork) {\n    const updatedArtworksArray = currentUserArtworks.map((artwork) => {\n      if (artwork.id === updatedArtwork.id) {\n          return updatedArtwork;\n      } else {\n          return artwork;\n      }\n    })\n    setCurrentUserArtworks(updatedArtworksArray);\n  }\n\n  function handleDeleteArtwork(id) {\n    const updatedArtworksArray = currentUserArtworks.filter((artwork) => artwork.id !== id);\n    setCurrentUserArtworks(updatedArtworksArray);\n  }  \n\n  return (\n      <div className=\"storage\" >\n        <StorageList\n           currentUser={currentUser}\n           onDeleteAcquisition={handleDeleteAcquisition}\n           currentUserArtworks={currentUserArtworks}\n           onDeleteArtwork={handleDeleteArtwork}\n           onUpdateArtwork={handleUpdateArtwork}\n        />\n      </div>\n  );\n}\n\nexport default StoragePage;"]},"metadata":{},"sourceType":"module"}