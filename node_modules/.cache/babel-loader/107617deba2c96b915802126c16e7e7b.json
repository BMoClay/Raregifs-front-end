{"ast":null,"code":"import _regeneratorRuntime from\"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from\"react\";import axios from\"axios\";import{DropzoneArea}from\"material-ui-dropzone\";import{Image}from\"cloudinary-react\";// import styles from \"./styles/Home.module.css\";\nimport{Form,Embed,Container}from\"semantic-ui-react\";import{useHistory}from\"react-router-dom\";import{db,storage}from\"../api/fireabse.config\";import{SettingsCellSharp}from\"@material-ui/icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UploadArtForm(_ref){var currentUser=_ref.currentUser,onCreateArtwork=_ref.onCreateArtwork;// window.scrollTo({\n//   top: 0, \n//   left: 0, \n//   behavior: 'smooth'\n// });\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),uploadedFiles=_useState2[0],setUploadedFiles=_useState2[1];var history=useHistory();var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),image=_useState6[0],setImage=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),files=_useState8[0],setFiles=_useState8[1];var onDrop=useCallback(function(filees){setFiles(filees);});var onSubmit=function onSubmit(){var image=[];for(var i=0;i<files.length;i++){var task=storage.ref().child(files[i].name).put(files[i]);task.then(function(shot){shot.ref.getDownloadURL().then(function(url){image.push({url:url,title:\"\"});if(image.length===files.length){setFiles(image);}});});}};// const url = `https://api.cloudinary.com/v1_1/raregifs/upload`;\n// acceptedFiles.forEach(async (acceptedFile) => {\n//   const { signature, timestamp } = await getSignature();\n//   const formData = new FormData();\n//   formData.append(\"file\", acceptedFile);\n//   // formData.append(\"upload_preset\", process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET)\n//   formData.append(\"signature\", signature);\n//   formData.append(\"timestamp\", timestamp);\n//   formData.append(\"api_key\", process.env.REACT_APP_CLOUDINARY_KEY);\n//   const response = await fetch(url, {\n//     method: \"post\",\n//     body: formData,\n//   });\n//   const data = await response.json();\n//   setUploadedFiles((old) => [...old, data]);\n// });\n// }, []);\n// const { getRootProps, getInputProps, isDragActive } = useDropzone({\n//     onDrop,\n//     accepts: \"image/*\",\n//     multiple: false,\n// })\nvar addTitle=function addTitle(value,index){var array=_toConsumableArray(files);array[index]=_objectSpread(_objectSpread({},array[index]),{},{title:value});setFiles(array);};function handleSubmitNewArtwork(e){e.preventDefault();for(var index=0;index<files.length;index++){var element=files[index];axios.post(\"/artworks\",{title:element.title,image:element.url,user_id:currentUser.id}).then(function(response){onCreateArtwork(response.data);history.push(\"/\");window.scrollTo(0,0);});}}return/*#__PURE__*/_jsx(\"div\",{style:{margin:'0px 170px 0px 170px'},children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"1. draw something below using the drawing pad\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"2. When you're done click the blue 'Save Image' icon to the right\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"3. then click 'Save', this will save it as a PNG image file\"}),/*#__PURE__*/_jsx(\"div\",{className:\"video-responsive\"// style={{\n//         left: 0,\n//         top: 0,\n//         // height= 100%\n//         // width= 100%\n//         position: absolute,\n//  }}\n,children:/*#__PURE__*/_jsx(\"iframe\",{src:\"https://kleki.com/\",frameborder:\"0\",allow:\"autoplay; encrypted-media\",width:\"1000\",height:\"560\",allowfullscreen:\"true\",title:\"video\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"4. drag the file you just saved and drop it directly into the google slides slide deck below where it says 'Click to add title'\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"5. after that right click the slide in the left column and select 'Duplicate slide' repeatedly\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"6. In each slide move the image (by dragging and dropping it) so none of the slides have the image in the same place\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"7. go to the 'File' dropdown, click it and select download then choose to download the file as a pdf file\"}),/*#__PURE__*/_jsx(\"div\",{className:\"video-responsive\"// style={{\n//         left: 0,\n//         top: 0,\n//         // height= 100%\n//         // width= 100%\n//         position: absolute,\n//  }}\n,children:/*#__PURE__*/_jsx(\"iframe\",{src:\"https://slides.google.com/create\",frameborder:\"0\",allow:\"autoplay; encrypted-media\",width:\"1000\",height:\"560\",allowfullscreen:\"true\",title:\"video\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"8. now upload the pdf file to the EZGif converter by dragging it and dropping it directly on the 'Choose Files' button below\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"9. click the 'Upload!' button\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"10. directly below that will appear 'Options', check the 'Create animated GIF box' and click 'Convert to GIF'\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"11. scroll down a tiny bit and click the save icon, almost done\"}),/*#__PURE__*/_jsx(\"div\",{className:\"video-responsive\"// style={{\n//         left: 0,\n//         top: 0,\n//         // height= 100%\n//         // width= 100%\n//         position: absolute,\n//  }}\n,children:/*#__PURE__*/_jsx(\"iframe\",{src:\"https://ezgif.com/pdf-to-gif\",frameborder:\"0\",allow:\"autoplay; encrypted-media\",width:\"1000\",height:\"560\",allowfullscreen:\"true\",title:\"video\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"12. drag and drop the newly saved gif file below then click 'done'\"}),/*#__PURE__*/_jsx(DropzoneArea,{onChange:onDrop}),/*#__PURE__*/_jsx(\"button\",{onClick:onSubmit,children:\"done\"}),/*#__PURE__*/_jsx(\"ul\",{children:uploadedFiles.map(function(file){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Image,{cloudName:process.env.REACT_APP_CLOUDINARY_CLOUD_NAME,publicId:file.public_id,crop:\"scale\",frameborder:\"0\",width:\"1000\",allowfullscreen:\"true\"})},file.public_id);})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmitNewArtwork,children:[files.map(function(file,index){console.log(\"ðŸš€ ~ file: UploadArtForm.js ~ line 105 ~ {files.map ~ file\",file);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"13. title your work below\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"14. click upload to Raregifs and enjoy\"}),/*#__PURE__*/_jsxs(Form.Group,{widths:\"equal\",children:[file.url&&/*#__PURE__*/_jsx(\"img\",{src:file.url,style:{width:\"10em\",height:\"6em\"}}),/*#__PURE__*/_jsx(Form.Input,{// label=\"add a title here then click submit to upload it to Raregifs\"\nvalue:file.title||\"\",placeholder:\"title\",type:\"text\",length:\"20em\",onChange:function onChange(e){return addTitle(e.target.value,index);}})]})]});}),/*#__PURE__*/_jsx(Form.Button,{children:\"upload to Raregifs\"}),/*#__PURE__*/_jsx(\"br\",{})]})]})});}export default UploadArtForm;function getSignature(){return _getSignature.apply(this,arguments);}function _getSignature(){_getSignature=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/api/sign\");case 2:response=_context.sent;// const response = await axios.post('/api/sign');\nconsole.log(response);// const data = await response.json();\n_context.next=6;return response;case 6:data=_context.sent;return _context.abrupt(\"return\",data);case 8:case\"end\":return _context.stop();}}},_callee);}));return _getSignature.apply(this,arguments);}","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/src/Components/UploadArtForm.js"],"names":["React","useState","useCallback","axios","DropzoneArea","Image","Form","Embed","Container","useHistory","db","storage","SettingsCellSharp","UploadArtForm","currentUser","onCreateArtwork","uploadedFiles","setUploadedFiles","history","title","setTitle","image","setImage","files","setFiles","onDrop","filees","onSubmit","i","length","task","ref","child","name","put","then","shot","getDownloadURL","url","push","addTitle","value","index","array","handleSubmitNewArtwork","e","preventDefault","element","post","user_id","id","response","data","window","scrollTo","margin","map","file","process","env","REACT_APP_CLOUDINARY_CLOUD_NAME","public_id","console","log","width","height","target","getSignature","fetch"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { Image } from \"cloudinary-react\";\n// import styles from \"./styles/Home.module.css\";\nimport { Form, Embed, Container } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { db, storage } from \"../api/fireabse.config\";\nimport { SettingsCellSharp } from \"@material-ui/icons\";\n\nfunction UploadArtForm({ currentUser, onCreateArtwork }) {\n  \n  // window.scrollTo({\n  //   top: 0, \n  //   left: 0, \n  //   behavior: 'smooth'\n  // });\n\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [files, setFiles] = useState([]);\n\n  const onDrop = useCallback((filees) => {\n    setFiles(filees);\n  });\n\n  const onSubmit = () => {\n    let image = [];\n    for (let i = 0; i < files.length; i++) {\n      var task = storage.ref().child(files[i].name).put(files[i]);\n      task.then((shot) => {\n        shot.ref.getDownloadURL().then((url) => {\n          image.push({ url, title: \"\" });\n          if (image.length === files.length) {\n            setFiles(image);\n          }\n        });\n      });\n    }\n  };\n\n  // const url = `https://api.cloudinary.com/v1_1/raregifs/upload`;\n\n  // acceptedFiles.forEach(async (acceptedFile) => {\n  //   const { signature, timestamp } = await getSignature();\n\n  //   const formData = new FormData();\n  //   formData.append(\"file\", acceptedFile);\n  //   // formData.append(\"upload_preset\", process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET)\n  //   formData.append(\"signature\", signature);\n  //   formData.append(\"timestamp\", timestamp);\n  //   formData.append(\"api_key\", process.env.REACT_APP_CLOUDINARY_KEY);\n\n  //   const response = await fetch(url, {\n  //     method: \"post\",\n  //     body: formData,\n  //   });\n  //   const data = await response.json();\n  //   setUploadedFiles((old) => [...old, data]);\n  // });\n  // }, []);\n\n  // const { getRootProps, getInputProps, isDragActive } = useDropzone({\n  //     onDrop,\n  //     accepts: \"image/*\",\n  //     multiple: false,\n  // })\n\n  const addTitle = (value, index) => {\n    let array = [...files];\n    array[index] = { ...array[index], title: value };\n    setFiles(array);\n  };\n\n  function handleSubmitNewArtwork(e) {\n    e.preventDefault();\n    for (let index = 0; index < files.length; index++) {\n      const element = files[index];\n      axios\n        .post(\"/artworks\", {\n          title: element.title,\n          image: element.url,\n          user_id: currentUser.id,\n        })\n        .then((response) => {\n          onCreateArtwork(response.data);\n          history.push(\"/\");\n          window.scrollTo(0,0)\n        });\n    }\n  }\n\n  return (\n    <div style={{margin: '0px 170px 0px 170px'}} >\n      <Container >\n        <>\n        {/* <a id=\"top\"></a>\n        <a href=\"#top\">Jump to top of page</a> */}\n        {/* <h4>*to scroll up and down the page move the cursor to the right or left margins</h4> */}\n        <br></br>\n        <h4>1. draw something below using the drawing pad</h4>\n        <h4>2. When you're done click the blue 'Save Image' icon to the right</h4>\n        <h4>3. then click 'Save', this will save it as a PNG image file</h4>\n        <div \n                className=\"video-responsive\" \n                // style={{\n                //         left: 0,\n                //         top: 0,\n                //         // height= 100%\n                //         // width= 100%\n                //         position: absolute,\n                //  }}\n                >\n                    <iframe src='https://kleki.com/'\n                    frameborder='0'\n                    allow='autoplay; encrypted-media'\n                    width=\"1000\"\n                    height=\"560\"\n                    allowfullscreen=\"true\"\n                    title='video'\n                    />\n                </div>\n        {/* <Embed icon=\"paint brush\" url=\"https://kleki.com/\" /> */}\n        <br></br>\n        <h4>4. drag the file you just saved and drop it directly into the google slides slide deck below where it says 'Click to add title'</h4>\n        <h4>5. after that right click the slide in the left column and select 'Duplicate slide' repeatedly</h4>\n        <h4>6. In each slide move the image (by dragging and dropping it) so none of the slides have the image in the same place</h4>\n        <h4>7. go to the 'File' dropdown, click it and select download then choose to download the file as a pdf file</h4>\n        {/* <Embed icon=\"file pdf\" url=\"https://slides.google.com/create\"/> */}\n        <div \n                className=\"video-responsive\" \n                // style={{\n                //         left: 0,\n                //         top: 0,\n                //         // height= 100%\n                //         // width= 100%\n                //         position: absolute,\n                //  }}\n                >\n                    <iframe src='https://slides.google.com/create'\n                    frameborder='0'\n                    allow='autoplay; encrypted-media'\n                    width=\"1000\"\n                    height=\"560\"\n                    allowfullscreen=\"true\"\n                    title='video'\n                    />\n                </div>\n        <br></br>\n        <h4>8. now upload the pdf file to the EZGif converter by dragging it and dropping it directly on the 'Choose Files' button below</h4>\n        <h4>9. click the 'Upload!' button</h4>\n        <h4>10. directly below that will appear 'Options', check the 'Create animated GIF box' and click 'Convert to GIF'</h4>\n        <h4>11. scroll down a tiny bit and click the save icon, almost done</h4>\n        {/* <Embed style={{ height: 2800 }} icon=\"stack exchange\" url=\"https://ezgif.com/pdf-to-gif\"/> */}\n          {/* <div {...getRootProps()} className={`${styles.dropzone} ${isDragActive ? styles.active : null}`}>\n                  <input {...getInputProps()}/>    \n                  Drop Zone\n              </div> */}\n        <div \n        className=\"video-responsive\" \n        // style={{\n        //         left: 0,\n        //         top: 0,\n        //         // height= 100%\n        //         // width= 100%\n        //         position: absolute,\n        //  }}\n        >\n            <iframe src='https://ezgif.com/pdf-to-gif'\n            frameborder='0'\n            allow='autoplay; encrypted-media'\n            width=\"1000\"\n            height=\"560\"\n            allowfullscreen=\"true\"\n            title='video'\n            />\n        </div>    \n          <br></br>\n          <h4>12. drag and drop the newly saved gif file below then click 'done'</h4>\n          <DropzoneArea onChange={onDrop} />\n          <button onClick={onSubmit}>done</button>\n          <ul>\n            {uploadedFiles.map((file) => (\n              <li key={file.public_id}>\n                <Image\n                  cloudName={process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}\n                  publicId={file.public_id}\n                  crop=\"scale\"\n                  frameborder='0'\n                  width=\"1000\"\n                  allowfullscreen=\"true\"\n                />\n              </li>\n            ))}\n          </ul>\n        </>\n        <br></br>\n        <Form onSubmit={handleSubmitNewArtwork}>\n          {files.map((file, index) => {\n            console.log(\n              \"ðŸš€ ~ file: UploadArtForm.js ~ line 105 ~ {files.map ~ file\",\n              file\n            );\n            return (\n              <div>\n                <br></br>\n                <h4>13. title your work below</h4>\n                <h4>14. click upload to Raregifs and enjoy</h4>\n                <Form.Group widths=\"equal\">\n                  {file.url && (\n                    <img\n                      src={file.url}\n                      style={{ width: \"10em\", height: \"6em\" }}\n                    />\n                  )}\n                  <Form.Input\n                    // label=\"add a title here then click submit to upload it to Raregifs\"\n                    value={file.title || \"\"}\n                    placeholder=\"title\"\n                    type=\"text\"\n                    length=\"20em\"\n                    onChange={(e) => addTitle(e.target.value, index)}\n                  />\n                  {/* {file.url && (\n                    <img\n                      src={file.url}\n                      style={{ width: \"10em\", height: \"6em\" }}\n                    />\n                  )} */}\n                </Form.Group>\n              </div>\n            );\n          })}\n          <Form.Button>upload to Raregifs</Form.Button>\n          <br></br>\n        </Form>\n        {/* <br></br> */}\n        {/* <h4>draw something then save it</h4>\n        <Embed icon=\"paint brush\" url=\"https://kleki.com/\" />\n        <br></br>\n        <h4>drop the file into slides, duplicate and move it around then turn it into slideshow and download it as a pdf</h4>\n        <Embed\n          icon=\"file pdf\"\n          url=\"https://docs.google.com/presentation/d/1MXF9c1oGW3kR93imVzaFhlsm_-HYOzQZlsfwPv67BGs/edit#slide=id.p\"\n        />\n        <br></br>\n        <h4>convert it from a pdf to gif</h4>\n        <Embed\n          style={{ height: 2800 }}\n          icon=\"stack exchange\"\n          url=\"https://ezgif.com/pdf-to-gif\"\n        /> */}\n        {/* <br></br> */}\n      </Container>\n    </div>\n  );\n}\n\nexport default UploadArtForm;\n\nasync function getSignature() {\n  const response = await fetch(\"/api/sign\");\n  // const response = await axios.post('/api/sign');\n  console.log(response);\n  // const data = await response.json();\n  const data = await response;\n\n  return data;\n  // const { signature, timestamp } = data;\n  // return { signature, timestamp };\n}\n"]},"metadata":{},"sourceType":"module"}