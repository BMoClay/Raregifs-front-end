{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/src/Components/UploadArtForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { Image } from \"cloudinary-react\"; // import styles from \"./styles/Home.module.css\";\n\nimport { Form, Embed, Container } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { db, storage } from \"../api/fireabse.config\";\nimport { SettingsCellSharp } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadArtForm({\n  currentUser,\n  onCreateArtwork\n}) {\n  _s();\n\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const onDrop = useCallback(filees => {\n    setFiles(filees);\n  });\n\n  const onSubmit = () => {\n    let image = [];\n\n    for (let i = 0; i < files.length; i++) {\n      var task = storage.ref().child(files[i].name).put(files[i]);\n      task.then(shot => {\n        shot.ref.getDownloadURL().then(url => {\n          image.push({\n            url,\n            title: \"\"\n          });\n\n          if (image.length === files.length) {\n            setFiles(image);\n          }\n        });\n      });\n    }\n  }; // const url = `https://api.cloudinary.com/v1_1/raregifs/upload`;\n  // acceptedFiles.forEach(async (acceptedFile) => {\n  //   const { signature, timestamp } = await getSignature();\n  //   const formData = new FormData();\n  //   formData.append(\"file\", acceptedFile);\n  //   // formData.append(\"upload_preset\", process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET)\n  //   formData.append(\"signature\", signature);\n  //   formData.append(\"timestamp\", timestamp);\n  //   formData.append(\"api_key\", process.env.REACT_APP_CLOUDINARY_KEY);\n  //   const response = await fetch(url, {\n  //     method: \"post\",\n  //     body: formData,\n  //   });\n  //   const data = await response.json();\n  //   setUploadedFiles((old) => [...old, data]);\n  // });\n  // }, []);\n  // const { getRootProps, getInputProps, isDragActive } = useDropzone({\n  //     onDrop,\n  //     accepts: \"image/*\",\n  //     multiple: false,\n  // })\n\n\n  const addTitle = (value, index) => {\n    let array = [...files];\n    array[index] = { ...array[index],\n      title: value\n    };\n    setFiles(array);\n  };\n\n  function handleSubmitNewArtwork(e) {\n    e.preventDefault();\n\n    for (let index = 0; index < files.length; index++) {\n      const element = files[index];\n      axios.post(\"/artworks\", {\n        title: element.title,\n        image: element.url,\n        user_id: currentUser.id\n      }).then(response => {\n        onCreateArtwork(response.data);\n        history.push(\"/\");\n        window.scrollTo(0, 0);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '0px 170px 0px 170px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"*please note to scroll up and down the page move the cursor to the right or left margins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"1. draw something below using the drawing pad, courtesy of Kleki.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"2. click the blue 'Save Image' icon to the right to download it locally on your computer or phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-responsive\" // style={{\n          //         left: 0,\n          //         top: 0,\n          //         // height= 100%\n          //         // width= 100%\n          //         position: absolute,\n          //  }}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: \"https://kleki.com/\",\n            frameborder: \"0\",\n            allow: \"autoplay; encrypted-media\",\n            width: \"1000\",\n            height: \"560\",\n            allowfullscreen: \"true\",\n            title: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"3. drag the file you just saved and drop it directly into the google slides slide deck below where it says 'Click to add title'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"4. after that right click the slide in the left column and select 'Duplicate slide' repeatedly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"5. In each slide move the image (by dragging and dropping it) so none of the slides have the image in the same place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"6. In the mgoogle slides embed, go to 'File' dropdown, click it and select download then choose to download the file as a pdf file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-responsive\" // style={{\n          //         left: 0,\n          //         top: 0,\n          //         // height= 100%\n          //         // width= 100%\n          //         position: absolute,\n          //  }}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: \"https://slides.google.com/create\",\n            frameborder: \"0\",\n            allow: \"autoplay; encrypted-media\",\n            width: \"1000\",\n            height: \"560\",\n            allowfullscreen: \"true\",\n            title: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"7. now upload the pdf file to the EZGif converter by dragging it and dropping it directly on the 'Choose Files' button below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"8. click the 'Upload!' button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"9. check the 'Create animated GIF box' and click 'Convert to GIF'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"10. scroll down a tiny bit and click the save icon, then scroll down to step 11\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-responsive\" // style={{\n          //         left: 0,\n          //         top: 0,\n          //         // height= 100%\n          //         // width= 100%\n          //         position: absolute,\n          //  }}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: \"https://ezgif.com/pdf-to-gif\",\n            frameborder: \"0\",\n            allow: \"autoplay; encrypted-media\",\n            width: \"1000\",\n            height: \"560\",\n            allowfullscreen: \"true\",\n            title: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"11. drag and drop the newly saved gif file below then click 'done'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropzoneArea, {\n          onChange: onDrop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSubmit,\n          children: \"done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              cloudName: process.env.REACT_APP_CLOUDINARY_CLOUD_NAME,\n              publicId: file.public_id,\n              crop: \"scale\",\n              frameborder: \"0\",\n              width: \"1000\",\n              allowfullscreen: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, file.public_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmitNewArtwork,\n        children: [files.map((file, index) => {\n          console.log(\"🚀 ~ file: UploadArtForm.js ~ line 105 ~ {files.map ~ file\", file);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"12. title your work and click submit then you're done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"13. enjoy seeing your work up in the gallery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: [file.url && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: file.url,\n                style: {\n                  width: \"10em\",\n                  height: \"6em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                // label=\"add a title here then click submit to upload it to Raregifs\"\n                value: file.title || \"\",\n                placeholder: \"title\",\n                type: \"text\",\n                length: \"20em\",\n                onChange: e => addTitle(e.target.value, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Form.Button, {\n          children: \"upload to Raregifs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadArtForm, \"ToAzPbe1r3nunD5V7AAnBwonEMI=\", false, function () {\n  return [useHistory];\n});\n\n_c = UploadArtForm;\nexport default UploadArtForm;\n\nasync function getSignature() {\n  const response = await fetch(\"/api/sign\"); // const response = await axios.post('/api/sign');\n\n  console.log(response); // const data = await response.json();\n\n  const data = await response;\n  return data; // const { signature, timestamp } = data;\n  // return { signature, timestamp };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadArtForm\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/src/Components/UploadArtForm.js"],"names":["React","useState","useCallback","axios","DropzoneArea","Image","Form","Embed","Container","useHistory","db","storage","SettingsCellSharp","UploadArtForm","currentUser","onCreateArtwork","uploadedFiles","setUploadedFiles","history","title","setTitle","image","setImage","files","setFiles","onDrop","filees","onSubmit","i","length","task","ref","child","name","put","then","shot","getDownloadURL","url","push","addTitle","value","index","array","handleSubmitNewArtwork","e","preventDefault","element","post","user_id","id","response","data","window","scrollTo","margin","map","file","process","env","REACT_APP_CLOUDINARY_CLOUD_NAME","public_id","console","log","width","height","target","getSignature","fetch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,QAAuC,mBAAvC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,wBAA5B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAvB,EAAyD;AAAA;;AACvD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMiB,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMwB,MAAM,GAAGvB,WAAW,CAAEwB,MAAD,IAAY;AACrCF,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACD,GAFyB,CAA1B;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIN,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIE,IAAI,GAAGnB,OAAO,CAACoB,GAAR,GAAcC,KAAd,CAAoBT,KAAK,CAACK,CAAD,CAAL,CAASK,IAA7B,EAAmCC,GAAnC,CAAuCX,KAAK,CAACK,CAAD,CAA5C,CAAX;AACAE,MAAAA,IAAI,CAACK,IAAL,CAAWC,IAAD,IAAU;AAClBA,QAAAA,IAAI,CAACL,GAAL,CAASM,cAAT,GAA0BF,IAA1B,CAAgCG,GAAD,IAAS;AACtCjB,UAAAA,KAAK,CAACkB,IAAN,CAAW;AAAED,YAAAA,GAAF;AAAOnB,YAAAA,KAAK,EAAE;AAAd,WAAX;;AACA,cAAIE,KAAK,CAACQ,MAAN,KAAiBN,KAAK,CAACM,MAA3B,EAAmC;AACjCL,YAAAA,QAAQ,CAACH,KAAD,CAAR;AACD;AACF,SALD;AAMD,OAPD;AAQD;AACF,GAbD,CAZuD,CA2BvD;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,QAAMmB,QAAQ,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACjC,QAAIC,KAAK,GAAG,CAAC,GAAGpB,KAAJ,CAAZ;AACAoB,IAAAA,KAAK,CAACD,KAAD,CAAL,GAAe,EAAE,GAAGC,KAAK,CAACD,KAAD,CAAV;AAAmBvB,MAAAA,KAAK,EAAEsB;AAA1B,KAAf;AACAjB,IAAAA,QAAQ,CAACmB,KAAD,CAAR;AACD,GAJD;;AAMA,WAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AACjCA,IAAAA,CAAC,CAACC,cAAF;;AACA,SAAK,IAAIJ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGnB,KAAK,CAACM,MAAlC,EAA0Ca,KAAK,EAA/C,EAAmD;AACjD,YAAMK,OAAO,GAAGxB,KAAK,CAACmB,KAAD,CAArB;AACAvC,MAAAA,KAAK,CACF6C,IADH,CACQ,WADR,EACqB;AACjB7B,QAAAA,KAAK,EAAE4B,OAAO,CAAC5B,KADE;AAEjBE,QAAAA,KAAK,EAAE0B,OAAO,CAACT,GAFE;AAGjBW,QAAAA,OAAO,EAAEnC,WAAW,CAACoC;AAHJ,OADrB,EAMGf,IANH,CAMSgB,QAAD,IAAc;AAClBpC,QAAAA,eAAe,CAACoC,QAAQ,CAACC,IAAV,CAAf;AACAlC,QAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACAc,QAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAkB,CAAlB;AACD,OAVH;AAWD;AACF;;AAED,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AACQ,UAAA,SAAS,EAAC,kBADlB,CAEQ;AACA;AACA;AACA;AACA;AACA;AACA;AARR;AAAA,iCAUY;AAAQ,YAAA,GAAG,EAAC,oBAAZ;AACA,YAAA,WAAW,EAAC,GADZ;AAEA,YAAA,KAAK,EAAC,2BAFN;AAGA,YAAA,KAAK,EAAC,MAHN;AAIA,YAAA,MAAM,EAAC,KAJP;AAKA,YAAA,eAAe,EAAC,MALhB;AAMA,YAAA,KAAK,EAAC;AANN;AAAA;AAAA;AAAA;AAAA;AAVZ;AAAA;AAAA;AAAA;AAAA,gBALA,eAyBA;AAAA;AAAA;AAAA;AAAA,gBAzBA,eA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BA,eA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BA,eA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BA,eA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BA,eA+BA;AACQ,UAAA,SAAS,EAAC,kBADlB,CAEQ;AACA;AACA;AACA;AACA;AACA;AACA;AARR;AAAA,iCAUY;AAAQ,YAAA,GAAG,EAAC,kCAAZ;AACA,YAAA,WAAW,EAAC,GADZ;AAEA,YAAA,KAAK,EAAC,2BAFN;AAGA,YAAA,KAAK,EAAC,MAHN;AAIA,YAAA,MAAM,EAAC,KAJP;AAKA,YAAA,eAAe,EAAC,MALhB;AAMA,YAAA,KAAK,EAAC;AANN;AAAA;AAAA;AAAA;AAAA;AAVZ;AAAA;AAAA;AAAA;AAAA,gBA/BA,eAkDA;AAAA;AAAA;AAAA;AAAA,gBAlDA,eAmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnDA,eAoDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApDA,eAqDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArDA,eAsDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtDA,eA4DA;AACA,UAAA,SAAS,EAAC,kBADV,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA,iCAUI;AAAQ,YAAA,GAAG,EAAC,8BAAZ;AACA,YAAA,WAAW,EAAC,GADZ;AAEA,YAAA,KAAK,EAAC,2BAFN;AAGA,YAAA,KAAK,EAAC,MAHN;AAIA,YAAA,MAAM,EAAC,KAJP;AAKA,YAAA,eAAe,EAAC,MALhB;AAMA,YAAA,KAAK,EAAC;AANN;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,gBA5DA,eA+EE;AAAA;AAAA;AAAA;AAAA,gBA/EF,eAgFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhFF,eAiFE,QAAC,YAAD;AAAc,UAAA,QAAQ,EAAE9B;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAjFF,eAkFE;AAAQ,UAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlFF,eAmFE;AAAA,oBACGX,aAAa,CAACwC,GAAd,CAAmBC,IAAD,iBACjB;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BADzB;AAEE,cAAA,QAAQ,EAAEH,IAAI,CAACI,SAFjB;AAGE,cAAA,IAAI,EAAC,OAHP;AAIE,cAAA,WAAW,EAAC,GAJd;AAKE,cAAA,KAAK,EAAC,MALR;AAME,cAAA,eAAe,EAAC;AANlB;AAAA;AAAA;AAAA;AAAA;AADF,aAASJ,IAAI,CAACI,SAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAnFF;AAAA,sBADF,eAmGE;AAAA;AAAA;AAAA;AAAA,cAnGF,eAoGE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEjB,sBAAhB;AAAA,mBACGrB,KAAK,CAACiC,GAAN,CAAU,CAACC,IAAD,EAAOf,KAAP,KAAiB;AAC1BoB,UAAAA,OAAO,CAACC,GAAR,CACE,4DADF,EAEEN,IAFF;AAIA,8BACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,MAAM,EAAC,OAAnB;AAAA,yBACGA,IAAI,CAACnB,GAAL,iBACC;AACE,gBAAA,GAAG,EAAEmB,IAAI,CAACnB,GADZ;AAEE,gBAAA,KAAK,EAAE;AAAE0B,kBAAAA,KAAK,EAAE,MAAT;AAAiBC,kBAAAA,MAAM,EAAE;AAAzB;AAFT;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAOE,QAAC,IAAD,CAAM,KAAN;AACE;AACA,gBAAA,KAAK,EAAER,IAAI,CAACtC,KAAL,IAAc,EAFvB;AAGE,gBAAA,WAAW,EAAC,OAHd;AAIE,gBAAA,IAAI,EAAC,MAJP;AAKE,gBAAA,MAAM,EAAC,MALT;AAME,gBAAA,QAAQ,EAAG0B,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACqB,MAAF,CAASzB,KAAV,EAAiBC,KAAjB;AAN3B;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AA6BD,SAlCA,CADH,eAoCE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCF,eAqCE;AAAA;AAAA;AAAA;AAAA,gBArCF;AAAA;AAAA;AAAA;AAAA;AAAA,cApGF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiKD;;GA/OQ7B,a;UAGSJ,U;;;KAHTI,a;AAiPT,eAAeA,aAAf;;AAEA,eAAesD,YAAf,GAA8B;AAC5B,QAAMhB,QAAQ,GAAG,MAAMiB,KAAK,CAAC,WAAD,CAA5B,CAD4B,CAE5B;;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAH4B,CAI5B;;AACA,QAAMC,IAAI,GAAG,MAAMD,QAAnB;AAEA,SAAOC,IAAP,CAP4B,CAQ5B;AACA;AACD","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { Image } from \"cloudinary-react\";\n// import styles from \"./styles/Home.module.css\";\nimport { Form, Embed, Container } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { db, storage } from \"../api/fireabse.config\";\nimport { SettingsCellSharp } from \"@material-ui/icons\";\n\nfunction UploadArtForm({ currentUser, onCreateArtwork }) {\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [files, setFiles] = useState([]);\n\n  const onDrop = useCallback((filees) => {\n    setFiles(filees);\n  });\n\n  const onSubmit = () => {\n    let image = [];\n    for (let i = 0; i < files.length; i++) {\n      var task = storage.ref().child(files[i].name).put(files[i]);\n      task.then((shot) => {\n        shot.ref.getDownloadURL().then((url) => {\n          image.push({ url, title: \"\" });\n          if (image.length === files.length) {\n            setFiles(image);\n          }\n        });\n      });\n    }\n  };\n\n  // const url = `https://api.cloudinary.com/v1_1/raregifs/upload`;\n\n  // acceptedFiles.forEach(async (acceptedFile) => {\n  //   const { signature, timestamp } = await getSignature();\n\n  //   const formData = new FormData();\n  //   formData.append(\"file\", acceptedFile);\n  //   // formData.append(\"upload_preset\", process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET)\n  //   formData.append(\"signature\", signature);\n  //   formData.append(\"timestamp\", timestamp);\n  //   formData.append(\"api_key\", process.env.REACT_APP_CLOUDINARY_KEY);\n\n  //   const response = await fetch(url, {\n  //     method: \"post\",\n  //     body: formData,\n  //   });\n  //   const data = await response.json();\n  //   setUploadedFiles((old) => [...old, data]);\n  // });\n  // }, []);\n\n  // const { getRootProps, getInputProps, isDragActive } = useDropzone({\n  //     onDrop,\n  //     accepts: \"image/*\",\n  //     multiple: false,\n  // })\n\n  const addTitle = (value, index) => {\n    let array = [...files];\n    array[index] = { ...array[index], title: value };\n    setFiles(array);\n  };\n\n  function handleSubmitNewArtwork(e) {\n    e.preventDefault();\n    for (let index = 0; index < files.length; index++) {\n      const element = files[index];\n      axios\n        .post(\"/artworks\", {\n          title: element.title,\n          image: element.url,\n          user_id: currentUser.id,\n        })\n        .then((response) => {\n          onCreateArtwork(response.data);\n          history.push(\"/\");\n          window.scrollTo(0,0)\n        });\n    }\n  }\n\n  return (\n    <div style={{margin: '0px 170px 0px 170px'}}>\n      <Container >\n        <>\n        <h4>*please note to scroll up and down the page move the cursor to the right or left margins</h4>\n        <br></br>\n        <h4>1. draw something below using the drawing pad, courtesy of Kleki.com</h4>\n        <h4>2. click the blue 'Save Image' icon to the right to download it locally on your computer or phone</h4>\n        <div \n                className=\"video-responsive\" \n                // style={{\n                //         left: 0,\n                //         top: 0,\n                //         // height= 100%\n                //         // width= 100%\n                //         position: absolute,\n                //  }}\n                >\n                    <iframe src='https://kleki.com/'\n                    frameborder='0'\n                    allow='autoplay; encrypted-media'\n                    width=\"1000\"\n                    height=\"560\"\n                    allowfullscreen=\"true\"\n                    title='video'\n                    />\n                </div>\n        {/* <Embed icon=\"paint brush\" url=\"https://kleki.com/\" /> */}\n        <br></br>\n        <h4>3. drag the file you just saved and drop it directly into the google slides slide deck below where it says 'Click to add title'</h4>\n        <h4>4. after that right click the slide in the left column and select 'Duplicate slide' repeatedly</h4>\n        <h4>5. In each slide move the image (by dragging and dropping it) so none of the slides have the image in the same place</h4>\n        <h4>6. In the mgoogle slides embed, go to 'File' dropdown, click it and select download then choose to download the file as a pdf file</h4>\n        {/* <Embed icon=\"file pdf\" url=\"https://slides.google.com/create\"/> */}\n        <div \n                className=\"video-responsive\" \n                // style={{\n                //         left: 0,\n                //         top: 0,\n                //         // height= 100%\n                //         // width= 100%\n                //         position: absolute,\n                //  }}\n                >\n                    <iframe src='https://slides.google.com/create'\n                    frameborder='0'\n                    allow='autoplay; encrypted-media'\n                    width=\"1000\"\n                    height=\"560\"\n                    allowfullscreen=\"true\"\n                    title='video'\n                    />\n                </div>\n        <br></br>\n        <h4>7. now upload the pdf file to the EZGif converter by dragging it and dropping it directly on the 'Choose Files' button below</h4>\n        <h4>8. click the 'Upload!' button</h4>\n        <h4>9. check the 'Create animated GIF box' and click 'Convert to GIF'</h4>\n        <h4>10. scroll down a tiny bit and click the save icon, then scroll down to step 11</h4>\n        {/* <Embed style={{ height: 2800 }} icon=\"stack exchange\" url=\"https://ezgif.com/pdf-to-gif\"/> */}\n          {/* <div {...getRootProps()} className={`${styles.dropzone} ${isDragActive ? styles.active : null}`}>\n                  <input {...getInputProps()}/>    \n                  Drop Zone\n              </div> */}\n        <div \n        className=\"video-responsive\" \n        // style={{\n        //         left: 0,\n        //         top: 0,\n        //         // height= 100%\n        //         // width= 100%\n        //         position: absolute,\n        //  }}\n        >\n            <iframe src='https://ezgif.com/pdf-to-gif'\n            frameborder='0'\n            allow='autoplay; encrypted-media'\n            width=\"1000\"\n            height=\"560\"\n            allowfullscreen=\"true\"\n            title='video'\n            />\n        </div>    \n          <br></br>\n          <h4>11. drag and drop the newly saved gif file below then click 'done'</h4>\n          <DropzoneArea onChange={onDrop} />\n          <button onClick={onSubmit}>done</button>\n          <ul>\n            {uploadedFiles.map((file) => (\n              <li key={file.public_id}>\n                <Image\n                  cloudName={process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}\n                  publicId={file.public_id}\n                  crop=\"scale\"\n                  frameborder='0'\n                  width=\"1000\"\n                  allowfullscreen=\"true\"\n                />\n              </li>\n            ))}\n          </ul>\n        </>\n        <br></br>\n        <Form onSubmit={handleSubmitNewArtwork}>\n          {files.map((file, index) => {\n            console.log(\n              \"🚀 ~ file: UploadArtForm.js ~ line 105 ~ {files.map ~ file\",\n              file\n            );\n            return (\n              <div>\n                <br></br>\n                <h4>12. title your work and click submit then you're done</h4>\n                <h4>13. enjoy seeing your work up in the gallery</h4>\n                <Form.Group widths=\"equal\">\n                  {file.url && (\n                    <img\n                      src={file.url}\n                      style={{ width: \"10em\", height: \"6em\" }}\n                    />\n                  )}\n                  <Form.Input\n                    // label=\"add a title here then click submit to upload it to Raregifs\"\n                    value={file.title || \"\"}\n                    placeholder=\"title\"\n                    type=\"text\"\n                    length=\"20em\"\n                    onChange={(e) => addTitle(e.target.value, index)}\n                  />\n                  {/* {file.url && (\n                    <img\n                      src={file.url}\n                      style={{ width: \"10em\", height: \"6em\" }}\n                    />\n                  )} */}\n                </Form.Group>\n              </div>\n            );\n          })}\n          <Form.Button>upload to Raregifs</Form.Button>\n          <br></br>\n        </Form>\n        {/* <br></br> */}\n        {/* <h4>draw something then save it</h4>\n        <Embed icon=\"paint brush\" url=\"https://kleki.com/\" />\n        <br></br>\n        <h4>drop the file into slides, duplicate and move it around then turn it into slideshow and download it as a pdf</h4>\n        <Embed\n          icon=\"file pdf\"\n          url=\"https://docs.google.com/presentation/d/1MXF9c1oGW3kR93imVzaFhlsm_-HYOzQZlsfwPv67BGs/edit#slide=id.p\"\n        />\n        <br></br>\n        <h4>convert it from a pdf to gif</h4>\n        <Embed\n          style={{ height: 2800 }}\n          icon=\"stack exchange\"\n          url=\"https://ezgif.com/pdf-to-gif\"\n        /> */}\n        {/* <br></br> */}\n      </Container>\n    </div>\n  );\n}\n\nexport default UploadArtForm;\n\nasync function getSignature() {\n  const response = await fetch(\"/api/sign\");\n  // const response = await axios.post('/api/sign');\n  console.log(response);\n  // const data = await response.json();\n  const data = await response;\n\n  return data;\n  // const { signature, timestamp } = data;\n  // return { signature, timestamp };\n}\n"]},"metadata":{},"sourceType":"module"}