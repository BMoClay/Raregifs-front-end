{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/Storage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import React from 'react';\n\nimport StorageList from './StorageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Storage({\n  currentUser // acquisitions,\n  // setAcquisitions,\n  // onDeleteAcquisition,\n  // artworks,\n  // setArtworks,\n  // onDeleteArtwork,\n  // onUpdateArtwork,\n\n}) {\n  _s();\n\n  const [currentUserAcquisitions, setCurrentUserAcquisitions] = useState([]);\n  const [currentUserArtworks, setCurrentUserArtworks] = useState([]); // const { id } = currentUser\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${currentUser.id}/acquisitions`).then(r => r.json()).then(userAcquisitionsArray => {\n      setCurrentUserAcquisitions(userAcquisitionsArray);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${currentUser.id}/artworks`).then(r => r.json()).then(userArtworksArray => {\n      setCurrentUserArtworks(userArtworksArray);\n    });\n  }, []);\n\n  function handleDeleteAcquisition(id) {\n    // i have the id for the acquisition i want to delete but not the user_id (but doesnt acquisition have the user_id?)\n    // const updatedAcquisitionsArray = user.acquisitions.filter((acquisition) => acquisition.id !== id);\n    const updatedAcquisitionsArray = acquisitions.filter(acquisition => acquisition.id !== id);\n    setAcquisitions(updatedAcquisitionsArray); // setUsers(updatedAcquisitionsArray);\n  }\n\n  function handleUpdateArtwork(updatedArtwork) {\n    const updatedArtworksArray = artworks.map(artwork => {\n      if (artwork.id === updatedArtwork.id) {\n        return updatedArtwork;\n      } else {\n        return artwork;\n      }\n    });\n    setArtworks(updatedArtworksArray);\n  }\n\n  function handleDeleteArtwork(id) {\n    const updatedArtworksArray = artworks.filter(artwork => artwork.id !== id);\n    setArtworks(updatedArtworksArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage\",\n    children: /*#__PURE__*/_jsxDEV(StorageList, {\n      currentUser: currentUser,\n      acquisitions: acquisitions,\n      setAcquisitions: setAcquisitions,\n      onDeleteAcquisition: handleDeleteAcquisition,\n      artworks: artworks,\n      setArtworks: setArtworks,\n      onDeleteArtwork: handleDeleteArtwork,\n      onUpdateArtwork: handleUpdateArtwork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Storage, \"BJ3RaTbHPwtVikSc9ryeJVKVXaM=\");\n\n_c = Storage;\nexport default Storage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Storage\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/Storage.js"],"names":["React","useEffect","useState","StorageList","Storage","currentUser","currentUserAcquisitions","setCurrentUserAcquisitions","currentUserArtworks","setCurrentUserArtworks","fetch","id","then","r","json","userAcquisitionsArray","userArtworksArray","handleDeleteAcquisition","updatedAcquisitionsArray","acquisitions","filter","acquisition","setAcquisitions","handleUpdateArtwork","updatedArtwork","updatedArtworksArray","artworks","map","artwork","setArtworks","handleDeleteArtwork"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,OAAT,CAAiB;AACfC,EAAAA,WADe,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;;AARe,CAAjB,EASI;AAAA;;AAEF,QAAM,CAACC,uBAAD,EAA0BC,0BAA1B,IAAwDL,QAAQ,CAAC,EAAD,CAAtE;AACA,QAAM,CAACM,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,CAAC,EAAD,CAA9D,CAHE,CAIF;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAE,+BAA8BL,WAAW,CAACM,EAAG,eAA/C,CAAL,CACKC,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUG,qBAAqB,IAAI;AAC3BR,MAAAA,0BAA0B,CAACQ,qBAAD,CAA1B;AACH,KAJL;AAKD,GANQ,EAMN,EANM,CAAT;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAE,+BAA8BL,WAAW,CAACM,EAAG,WAA/C,CAAL,CACKC,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUI,iBAAiB,IAAI;AACvBP,MAAAA,sBAAsB,CAACO,iBAAD,CAAtB;AACH,KAJL;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,WAASC,uBAAT,CAAiCN,EAAjC,EAAqC;AACnC;AACA;AACA,UAAMO,wBAAwB,GAAGC,YAAY,CAACC,MAAb,CAAqBC,WAAD,IAAiBA,WAAW,CAACV,EAAZ,KAAmBA,EAAxD,CAAjC;AACAW,IAAAA,eAAe,CAACJ,wBAAD,CAAf,CAJmC,CAKnC;AACD;;AAED,WAASK,mBAAT,CAA6BC,cAA7B,EAA6C;AAC3C,UAAMC,oBAAoB,GAAGC,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAa;AACrD,UAAIA,OAAO,CAACjB,EAAR,KAAea,cAAc,CAACb,EAAlC,EAAsC;AAClC,eAAOa,cAAP;AACH,OAFD,MAEO;AACH,eAAOI,OAAP;AACH;AACF,KAN4B,CAA7B;AAOAC,IAAAA,WAAW,CAACJ,oBAAD,CAAX;AACD;;AAED,WAASK,mBAAT,CAA6BnB,EAA7B,EAAiC;AAC/B,UAAMc,oBAAoB,GAAGC,QAAQ,CAACN,MAAT,CAAiBQ,OAAD,IAAaA,OAAO,CAACjB,EAAR,KAAeA,EAA5C,CAA7B;AACAkB,IAAAA,WAAW,CAACJ,oBAAD,CAAX;AACD;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE,QAAC,WAAD;AACG,MAAA,WAAW,EAAEpB,WADhB;AAEG,MAAA,YAAY,EAAEc,YAFjB;AAGG,MAAA,eAAe,EAAEG,eAHpB;AAIG,MAAA,mBAAmB,EAAEL,uBAJxB;AAKG,MAAA,QAAQ,EAAES,QALb;AAMG,MAAA,WAAW,EAAEG,WANhB;AAOG,MAAA,eAAe,EAAEC,mBAPpB;AAQG,MAAA,eAAe,EAAEP;AARpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAcD;;GArEQnB,O;;KAAAA,O;AAuET,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import React from 'react';\nimport StorageList from './StorageList'\n\nfunction Storage({ \n  currentUser,\n  // acquisitions,\n  // setAcquisitions,\n  // onDeleteAcquisition,\n  // artworks,\n  // setArtworks,\n  // onDeleteArtwork,\n  // onUpdateArtwork,\n }) {\n  \n  const [currentUserAcquisitions, setCurrentUserAcquisitions] = useState([])\n  const [currentUserArtworks, setCurrentUserArtworks] = useState([]) \n  // const { id } = currentUser\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${currentUser.id}/acquisitions`)\n        .then(r => r.json())\n        .then(userAcquisitionsArray => {\n            setCurrentUserAcquisitions(userAcquisitionsArray);\n        })\n  }, [])\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${currentUser.id}/artworks`)\n        .then(r => r.json())\n        .then(userArtworksArray => {\n            setCurrentUserArtworks(userArtworksArray);\n        })\n  }, [])\n\n  function handleDeleteAcquisition(id) {\n    // i have the id for the acquisition i want to delete but not the user_id (but doesnt acquisition have the user_id?)\n    // const updatedAcquisitionsArray = user.acquisitions.filter((acquisition) => acquisition.id !== id);\n    const updatedAcquisitionsArray = acquisitions.filter((acquisition) => acquisition.id !== id);\n    setAcquisitions(updatedAcquisitionsArray);\n    // setUsers(updatedAcquisitionsArray);\n  } \n\n  function handleUpdateArtwork(updatedArtwork) {\n    const updatedArtworksArray = artworks.map((artwork) => {\n      if (artwork.id === updatedArtwork.id) {\n          return updatedArtwork;\n      } else {\n          return artwork;\n      }\n    })\n    setArtworks(updatedArtworksArray);\n  }\n\n  function handleDeleteArtwork(id) {\n    const updatedArtworksArray = artworks.filter((artwork) => artwork.id !== id);\n    setArtworks(updatedArtworksArray);\n  }  \n\n  return (\n      <div className=\"storage\" >\n        <StorageList\n           currentUser={currentUser}\n           acquisitions={acquisitions}\n           setAcquisitions={setAcquisitions}\n           onDeleteAcquisition={handleDeleteAcquisition}\n           artworks={artworks}\n           setArtworks={setArtworks}\n           onDeleteArtwork={handleDeleteArtwork}\n           onUpdateArtwork={handleUpdateArtwork}\n        />\n      </div>\n  );\n}\n\nexport default Storage;"]},"metadata":{},"sourceType":"module"}