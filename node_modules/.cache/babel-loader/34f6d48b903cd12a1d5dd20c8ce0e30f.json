{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js\";\nimport React from 'react';\nimport UserAcquisitionCard from './UserAcquisitionCard';\nimport CommentForm from './CommentForm';\nimport CommentCard from './CommentCard';\nimport { Container, Card, Divider, Grid, Header, Menu, Message, Segment, Table } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserList({\n  eachUser,\n  cUId,\n  onAcquireArtwork,\n  acquisitions,\n  comments,\n  onAddComment,\n  onDeleteComment\n}) {\n  const tCollection = eachUser.acquisitions ? acquisitions.filter(acquisition => acquisition.user.id === eachUser.id) : null;\n  const uAcquisitions = eachUser.acquisitions ? tCollection.map(acquisition => {\n    return /*#__PURE__*/_jsxDEV(UserAcquisitionCard, {\n      aArtwork: acquisition.artwork,\n      cUId: cUId,\n      onAcquireArtwork: onAcquireArtwork\n    }, acquisition.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this);\n  }) : null;\n  const tComments = eachUser.comments_received ? comments.filter(comment => comment.commentee_id === eachUser.id) : null;\n  const uComments = eachUser.comments_received ? tComments.map(comment => {\n    return /*#__PURE__*/_jsxDEV(CommentCard, {\n      cUId: cUId,\n      commentID: comment.id,\n      content: comment.content,\n      author: comment.author,\n      commenter_id: comment.commenter_id,\n      onDeleteComment: onDeleteComment\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), tCollection.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [eachUser.name, \"'s Collection\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            columns: 2,\n            doubling: true,\n            stackable: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              children: /*#__PURE__*/_jsxDEV(Segment, {\n                children: uAcquisitions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              children: /*#__PURE__*/_jsxDEV(Segment, {\n                children: /*#__PURE__*/_jsxDEV(CommentForm, {\n                  eachUserID: eachUser.id,\n                  cUId: cUId,\n                  onAddComment: onAddComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tComments.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              columns: 2,\n              doubling: true,\n              stackable: true,\n              children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                children: /*#__PURE__*/_jsxDEV(Segment, {\n                  children: uComments\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_c = UserList;\nexport default UserList;\n{\n  /* {/* // return(\n  //     <Grid>\n  //          {tCollection.length > 0 ? ( */\n}\n{\n  /* //             <>  \n  //                 <br></br>\n  //                 <h2>The {eachUser.name} Collection</h2>\n  //                     {uAcquisitions}\n  //                 <CommentForm  */\n} //                     eachUserID={eachUser.id} \n//                     cUId={cUId} \n//                     onAddComment={onAddComment}\n//                 />\n//                 <br></br>\n//             </>\n//     ) : (\n//         <>\n//         </>\n//     )}\n//     <div>\n//         {tComments.length > 0 ? (\n//             <>\n//                 <h3>Comments on {eachUser.name}'s collection</h3>    \n//                     {uComments}\n//             </>\n//         ) : (\n//             <>\n//             </>\n//         )}\n//     </div>\n//     </Grid>\n// );\n// return(\n//     <div>\n//          {tCollection.length > 0 ? (\n//             <>\n//                 <h2>The {eachUser.name} Collection</h2>\n//                     {uAcquisitions}\n//                 <h3>Comments on {eachUser.name}'s collection</h3>    \n//                     {uComments}\n//                 <CommentForm \n//                     eachUserID={eachUser.id} \n//                     cUId={cUId} \n//                     onAddComment={onAddComment}\n//                 />\n//                 <br></br>\n//             </>\n//     ) : (\n//         <>\n//         </>\n//     )}\n//     </div>\n// ); */}\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js"],"names":["React","UserAcquisitionCard","CommentForm","CommentCard","Container","Card","Divider","Grid","Header","Menu","Message","Segment","Table","UserList","eachUser","cUId","onAcquireArtwork","acquisitions","comments","onAddComment","onDeleteComment","tCollection","filter","acquisition","user","id","uAcquisitions","map","artwork","tComments","comments_received","comment","commentee_id","uComments","content","author","commenter_id","length","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport UserAcquisitionCard from './UserAcquisitionCard'\nimport CommentForm from './CommentForm'\nimport CommentCard from './CommentCard'\nimport { \n    Container,\n    Card,\n    Divider, \n    Grid,\n    Header,\n    Menu,\n    Message,\n    Segment,\n    Table,\n} from 'semantic-ui-react'\n\nfunction UserList({ \n            eachUser, \n            cUId, \n            onAcquireArtwork, \n            acquisitions,\n            comments,\n            onAddComment,\n            onDeleteComment, \n        }){\n   \n    const tCollection = \n    eachUser.acquisitions ? (acquisitions.filter((acquisition) => acquisition.user.id === eachUser.id)\n    ) : (null)\n    \n    const uAcquisitions = \n    eachUser.acquisitions ? (tCollection.map((acquisition) => {\n                return <UserAcquisitionCard\n                        key={acquisition.id}\n                        aArtwork={acquisition.artwork}\n                        cUId={cUId}\n                        onAcquireArtwork={onAcquireArtwork}\n                        />\n            })\n    ) : (null)\n   \n    const tComments = \n    eachUser.comments_received ? (comments.filter((comment) => comment.commentee_id === eachUser.id)\n    ) : (null)\n\n    const uComments =\n    eachUser.comments_received ? (tComments.map((comment) => {\n            return <CommentCard\n                    key={comment.id}\n                    cUId={cUId}\n                    commentID={comment.id}\n                    content={comment.content}\n                    author={comment.author}\n                    commenter_id={comment.commenter_id}\n                    onDeleteComment={onDeleteComment}\n                    />\n        })\n    ) : (null)\n\n    return(\n        <div>\n            <br></br>\n            {tCollection.length > 0 ? (\n                <>\n                <h3>{eachUser.name}'s Collection</h3>\n                <Grid>\n                    <Grid.Column>\n                        <Grid columns={2} doubling stackable>\n                            <Grid.Column>\n                                <Segment>{uAcquisitions}</Segment>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Segment><CommentForm \n                                        eachUserID={eachUser.id} \n                                        cUId={cUId} \n                                        onAddComment={onAddComment}\n                                        />\n                                </Segment>\n                            </Grid.Column>\n                        </Grid>\n                    </Grid.Column>\n                </Grid>\n                </>\n                ) : (\n                <>\n                </>\n            )}\n            <div>\n            {tComments.length > 0 ? (\n                <>\n                <Grid>\n                    <Grid.Column>\n                        <Grid columns={2} doubling stackable>\n                            <Grid.Column>\n                                <Segment>{uComments}</Segment>\n                            </Grid.Column>\n                        </Grid>\n                    </Grid.Column>\n                </Grid>\n                </>\n            ) : (\n                <>\n                </>\n            )}\n            </div>\n        </div>\n    );\n}\n\nexport default UserList;\n\n\n\n\n\n        {/* {/* // return(\n        //     <Grid>\n        //          {tCollection.length > 0 ? ( */}\n        {/* //             <>  \n        //                 <br></br>\n        //                 <h2>The {eachUser.name} Collection</h2>\n        //                     {uAcquisitions}\n        //                 <CommentForm  */}\n        //                     eachUserID={eachUser.id} \n        //                     cUId={cUId} \n        //                     onAddComment={onAddComment}\n        //                 />\n        //                 <br></br>\n        //             </>\n        //     ) : (\n        //         <>\n        //         </>\n        //     )}\n        //     <div>\n        //         {tComments.length > 0 ? (\n        //             <>\n        //                 <h3>Comments on {eachUser.name}'s collection</h3>    \n        //                     {uComments}\n        //             </>\n        //         ) : (\n        //             <>\n        //             </>\n        //         )}\n        //     </div>\n        //     </Grid>\n        // );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // return(\n        //     <div>\n        //          {tCollection.length > 0 ? (\n        //             <>\n        //                 <h2>The {eachUser.name} Collection</h2>\n        //                     {uAcquisitions}\n        //                 <h3>Comments on {eachUser.name}'s collection</h3>    \n        //                     {uComments}\n        //                 <CommentForm \n        //                     eachUserID={eachUser.id} \n        //                     cUId={cUId} \n        //                     onAddComment={onAddComment}\n        //                 />\n        //                 <br></br>\n        //             </>\n        //     ) : (\n        //         <>\n        //         </>\n        //     )}\n        //     </div>\n        // ); */}"]},"metadata":{},"sourceType":"module"}