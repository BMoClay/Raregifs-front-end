{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js\";\nimport React from 'react';\nimport StorageCardArt from './StorageCardArt';\nimport StorageCardAcquisition from './StorageCardAcquisition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StoragePage({\n  currentUser,\n  acquisitions,\n  artworks,\n  onDeleteArtwork,\n  onUpdateArtwork,\n  onDeleteAcquisition\n}) {\n  const uComments = comments.filter(comment => comment.commentee_id === eachUser.id);\n  const uArtworkCard = currentUser ? currentUser.artworks.map(artwork => {\n    return /*#__PURE__*/_jsxDEV(StorageCardArt, {\n      artwork: artwork,\n      onUpdateArtwork: onUpdateArtwork,\n      onDeleteArtwork: onDeleteArtwork\n    }, artwork.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 24\n    }, this);\n  }) : null;\n  const uAcquisitionCard = currentUser ? currentUser.acquisitions.map(acquisition => {\n    return /*#__PURE__*/_jsxDEV(StorageCardAcquisition, {\n      acquisition: acquisition,\n      artwork: acquisition.artwork,\n      onDeleteAcquisition: onDeleteAcquisition\n    }, acquisition.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"My Work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), uArtworkCard, /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), uAcquisitionCard]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_c = StoragePage;\nexport default StoragePage; // const uArtworkCard =\n// currentUser ? (currentUser.artworks.map((artwork) => {   \n//         return <StorageCardArt \n//         key={artwork.id}\n//         artwork={artwork}\n//         onUpdateArtwork={onUpdateArtwork}\n//         onDeleteArtwork={onDeleteArtwork}\n//         />\n//     }\n//     )) : (null)          \n// const uAcquisitionCard = \n// currentUser ? (currentUser.acquisitions.map((acquisition) => {\n//         return <StorageCardAcquisition\n//           key={acquisition.id}\n//           acquisition={acquisition}\n//           artwork={acquisition.artwork}\n//           onDeleteAcquisition={onDeleteAcquisition}\n//         />\n//     }    \n// )) : (null)\n// userArtworks,\n// setUserArtworks,\n// userAcquisitions,\n// setUserAcquisitions, \n// const [userArtworks, setUserArtworks] = useState(currentUser.artworks)\n// const [userAcquisitions, setUserAcquisitions] = useState(currentUser.acquisitions)\n// function handleDeleteUserAcquisition(id) {\n//     const updatedAcquisitionsArray = userAcquisitions.filter((acquisition) => acquisition.id !== id);\n//     setUserAcquisitions(updatedAcquisitionsArray);\n// } \n// function handleUpdateUserArtwork(updatedArtwork) {\n//     const updatedArtworksArray = userArtworks.map((artwork) => {\n//         if (artwork.id === updatedArtwork.id) {\n//             return updatedArtwork;\n//         } else {\n//             return artwork;\n//         }\n//     })\n//     setUserArtworks(updatedArtworksArray);\n// }\n// function handleDeleteUserArtwork(id) {\n//     const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== id);\n//     setUserArtworks(updatedArtworksArray);\n// }  \n// userArtworks.map((artwork) => { \n// onUpdateUserArtwork={handleUpdateUserArtwork}\n// onDeleteUserArtwork={handleDeleteUserArtwork}\n// setUserArtworks={setUserArtworks}\n// onDeleteUserAcquisition={handleDeleteUserAcquisition}\n// setUserAcquisitions={setUserAcquisitions}\n\nvar _c;\n\n$RefreshReg$(_c, \"StoragePage\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js"],"names":["React","StorageCardArt","StorageCardAcquisition","StoragePage","currentUser","acquisitions","artworks","onDeleteArtwork","onUpdateArtwork","onDeleteAcquisition","uComments","comments","filter","comment","commentee_id","eachUser","id","uArtworkCard","map","artwork","uAcquisitionCard","acquisition"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;;;AAEA,SAASC,WAAT,CAAqB;AACjBC,EAAAA,WADiB;AAEjBC,EAAAA,YAFiB;AAGjBC,EAAAA,QAHiB;AAIjBC,EAAAA,eAJiB;AAKjBC,EAAAA,eALiB;AAMjBC,EAAAA;AANiB,CAArB,EAOK;AAED,QAAMC,SAAS,GAAGC,QAAQ,CAACC,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,YAAR,KAAyBC,QAAQ,CAACC,EAA/D,CAAlB;AAEE,QAAMC,YAAY,GAChBb,WAAW,GAAIA,WAAW,CAACE,QAAZ,CAAqBY,GAArB,CAA0BC,OAAD,IAAa;AAC7C,wBAAO,QAAC,cAAD;AAEP,MAAA,OAAO,EAAEA,OAFF;AAGP,MAAA,eAAe,EAAEX,eAHV;AAIP,MAAA,eAAe,EAAED;AAJV,OACFY,OAAO,CAACH,EADN;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAPU,CAAJ,GAQD,IATZ;AAWA,QAAMI,gBAAgB,GACpBhB,WAAW,GAAIA,WAAW,CAACC,YAAZ,CAAyBa,GAAzB,CAA8BG,WAAD,IAAiB;AACrD,wBAAO,QAAC,sBAAD;AAEL,MAAA,WAAW,EAAEA,WAFR;AAGL,MAAA,OAAO,EAAEA,WAAW,CAACF,OAHhB;AAIL,MAAA,mBAAmB,EAAEV;AAJhB,OACAY,WAAW,CAACL,EADZ;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAPU,CAAJ,GAQL,IATR;AAYF,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEOC,YAFP,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIOG,gBAJP;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KA1CQjB,W;AA4CT,eAAeA,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBI;AACA;AACA;AACA;AAEE;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEG;AAGA;AACA;AAEA;AACC;AACG","sourcesContent":["import React from 'react';\nimport StorageCardArt from './StorageCardArt';\nimport StorageCardAcquisition from './StorageCardAcquisition'\n\nfunction StoragePage({ \n    currentUser,\n    acquisitions,\n    artworks,\n    onDeleteArtwork, \n    onUpdateArtwork, \n    onDeleteAcquisition, \n  }) {\n\n    const uComments = comments.filter((comment) => comment.commentee_id === eachUser.id)\n\n      const uArtworkCard =\n        currentUser ? (currentUser.artworks.map((artwork) => {   \n                return <StorageCardArt \n                key={artwork.id}\n                artwork={artwork}\n                onUpdateArtwork={onUpdateArtwork}\n                onDeleteArtwork={onDeleteArtwork}\n                />\n            }\n            )) : (null)          \n      \n      const uAcquisitionCard = \n        currentUser ? (currentUser.acquisitions.map((acquisition) => {\n                return <StorageCardAcquisition\n                  key={acquisition.id}\n                  acquisition={acquisition}\n                  artwork={acquisition.artwork}\n                  onDeleteAcquisition={onDeleteAcquisition}\n                />\n            }    \n        )) : (null)\n         \n\n    return (\n        <div className=\"storage\" >\n          <h4>My Work</h4>\n              {uArtworkCard}\n          <h4>Collection</h4>\n              {uAcquisitionCard}\n        </div>\n    );\n}\n\nexport default StoragePage;\n\n// const uArtworkCard =\n// currentUser ? (currentUser.artworks.map((artwork) => {   \n//         return <StorageCardArt \n//         key={artwork.id}\n//         artwork={artwork}\n//         onUpdateArtwork={onUpdateArtwork}\n//         onDeleteArtwork={onDeleteArtwork}\n//         />\n//     }\n//     )) : (null)          \n\n// const uAcquisitionCard = \n// currentUser ? (currentUser.acquisitions.map((acquisition) => {\n//         return <StorageCardAcquisition\n//           key={acquisition.id}\n//           acquisition={acquisition}\n//           artwork={acquisition.artwork}\n//           onDeleteAcquisition={onDeleteAcquisition}\n//         />\n//     }    \n// )) : (null)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // userArtworks,\n    // setUserArtworks,\n    // userAcquisitions,\n    // setUserAcquisitions, \n  \n      // const [userArtworks, setUserArtworks] = useState(currentUser.artworks)\n      // const [userAcquisitions, setUserAcquisitions] = useState(currentUser.acquisitions)\n\n      // function handleDeleteUserAcquisition(id) {\n      //     const updatedAcquisitionsArray = userAcquisitions.filter((acquisition) => acquisition.id !== id);\n      //     setUserAcquisitions(updatedAcquisitionsArray);\n      // } \n    \n      // function handleUpdateUserArtwork(updatedArtwork) {\n      //     const updatedArtworksArray = userArtworks.map((artwork) => {\n      //         if (artwork.id === updatedArtwork.id) {\n      //             return updatedArtwork;\n      //         } else {\n      //             return artwork;\n      //         }\n      //     })\n      //     setUserArtworks(updatedArtworksArray);\n      // }\n    \n      // function handleDeleteUserArtwork(id) {\n      //     const updatedArtworksArray = userArtworks.filter((artwork) => artwork.id !== id);\n      //     setUserArtworks(updatedArtworksArray);\n      // }  \n\n         // userArtworks.map((artwork) => { \n\n\n         // onUpdateUserArtwork={handleUpdateUserArtwork}\n         // onDeleteUserArtwork={handleDeleteUserArtwork}\n       \n         // setUserArtworks={setUserArtworks}\n          // onDeleteUserAcquisition={handleDeleteUserAcquisition}\n             // setUserAcquisitions={setUserAcquisitions}"]},"metadata":{},"sourceType":"module"}