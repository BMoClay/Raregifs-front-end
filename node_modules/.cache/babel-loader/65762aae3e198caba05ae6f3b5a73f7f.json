{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  setCurrentUser\n}) {\n  _s();\n\n  const history = useHistory();\n  const [errors, setErrors] = useState([]);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    password: \"\"\n  });\n\n  function responseGoogle(response) {\n    if (response.tokenId) {}\n  }\n\n  function handleChange(e) {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.post(\"/login\", formData).then(response => {\n      const {\n        user,\n        token\n      } = response.data;\n      localStorage.setItem(\"token\", token);\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      setCurrentUser(user);\n      history.push(\"/\");\n    }).catch(error => {\n      setErrors(error.response.data.errors);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        autoComplete: \"off\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), errors.map(error => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, error, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: ProcessingInstruction.env.REACT_APP_GOOGLE_CLIENT_ID,\n      buttonText: \"Login\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"GePkvq0vFbr7zKVI85XnZnlo7Ec=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/Login.js"],"names":["React","useState","axios","useHistory","GoogleLogin","Login","setCurrentUser","history","errors","setErrors","formData","setFormData","name","password","responseGoogle","response","tokenId","handleChange","e","target","value","handleSubmit","preventDefault","post","then","user","token","data","localStorage","setItem","defaults","headers","common","push","catch","error","map","color","ProcessingInstruction","env","REACT_APP_GOOGLE_CLIENT_ID"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\n\n\nfunction Login({ setCurrentUser }) {\n\n    const history = useHistory() \n    const [errors, setErrors] = useState([])\n    const [formData, setFormData] = useState({\n        name: \"\",\n        password: \"\",\n    });\n\n    function responseGoogle(response){\n        if (response.tokenId) {\n\n        }\n    }\n\n    function handleChange(e) {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        axios.post(\"/login\", formData) \n            .then((response) => {\n                const { user, token } = response.data;\n                localStorage.setItem(\"token\", token);\n                axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n                setCurrentUser(user);\n                history.push(\"/\");\n            })\n            .catch((error) => {\n                setErrors(error.response.data.errors)\n            });\n    }\n \n  return (\n    <div className=\"login\">\n        <form onSubmit={handleSubmit}>\n            <label>name</label>\n            <input\n                type=\"text\"\n                name=\"name\"\n                autoComplete=\"off\"\n                value={formData.name}\n                onChange={handleChange}\n            />\n            <label>password</label>\n            <input\n                type=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                autoComplete=\"current-password\"\n            />\n            <input type=\"submit\" value=\"Login\" />\n            {errors.map((error) => (\n                <p style={{ color: \"red\" }} key={error}>\n                    {error}\n                </p>\n                ))}\n        </form>\n        <hr/>\n        <GoogleLogin\n            clientId={ProcessingInstruction.env.REACT_APP_GOOGLE_CLIENT_ID}\n            buttonText=\"Login\"\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            cookiePolicy={'single_host_origin'}\n        />  \n    </div>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}