{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js\";\nimport React, { useEffect, useState } from 'react';\nimport StorageCardArt from './StorageCardArt';\nimport StorageList from './StorageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StoragePage({\n  currentUser,\n  onUpdateArtwork,\n  onDeleteArtwork,\n  onDeleteAcquisition\n}) {\n  const [userAcquisitions, setUserAcquisitions] = [];\n  let aq = currentUser.acquisitions.map(acquisition => setUserAcquisitions(acquisition));\n  let collectedArtwork = collection.artworks.map(artwork => {// return <StorageCardArt\n  });\n  let userArtworks = artworks.map(artwork => {\n    if (artwork.user.id === currentUser.id) {\n      return artwork;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage\",\n    children: /*#__PURE__*/_jsxDEV(StorageList, {\n      currentUser: currentUser //  UserArtworks={storedUserArtworks}\n      //  storedAcquisitions={storedAcquisitions}\n      ,\n      onDeleteAcquisition: handleDeleteAcquisition,\n      onDeleteArtwork: handleDeleteArtwork,\n      onUpdateArtwork: handleUpdateArtwork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n\n_c = StoragePage;\nexport default StoragePage; // const [storedAcquisitions, setStoredAcquisitions] = useState([])\n// const [storedUserArtworks, setStoredUserArtworks] = useState([]) \n// const { id } = currentUser;\n// console.log(id)\n// useEffect(() => {\n//   fetch(`http://localhost:3000/users/${id}/acquisitions`)\n//       .then(r => r.json())\n//       .then(userAcquisitionsArray => {\n//           setStoredAcquisitions(userAcquisitionsArray);\n//       })\n// }, [])\n// useEffect(() => {\n//   fetch(`http://localhost:3000/users/${id}/artworks`)\n//       .then(r => r.json())\n//       .then(userArtworksArray => {\n//           setStoredUserArtworks(userArtworksArray);\n//       })\n// }, [])\n\nvar _c;\n\n$RefreshReg$(_c, \"StoragePage\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js"],"names":["React","useEffect","useState","StorageCardArt","StorageList","StoragePage","currentUser","onUpdateArtwork","onDeleteArtwork","onDeleteAcquisition","userAcquisitions","setUserAcquisitions","aq","acquisitions","map","acquisition","collectedArtwork","collection","artworks","artwork","userArtworks","user","id","handleDeleteAcquisition","handleDeleteArtwork","handleUpdateArtwork"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,WAAT,CACE;AAAEC,EAAAA,WAAF;AACEC,EAAAA,eADF;AAEEC,EAAAA,eAFF;AAGEC,EAAAA;AAHF,CADF,EAKK;AAEH,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA2C,EAAjD;AAEA,MAAIC,EAAE,GAAGN,WAAW,CAACO,YAAZ,CAAyBC,GAAzB,CAA8BC,WAAD,IACpCJ,mBAAmB,CAACI,WAAD,CADZ,CAAT;AAIA,MAAIC,gBAAgB,GAAGC,UAAU,CAACC,QAAX,CAAoBJ,GAApB,CAAyBK,OAAD,IAAa,CAC1D;AAED,GAHsB,CAAvB;AAKA,MAAIC,YAAY,GAAGF,QAAQ,CAACJ,GAAT,CAAcK,OAAD,IAAa;AAC3C,QAAIA,OAAO,CAACE,IAAR,CAAaC,EAAb,KAAoBhB,WAAW,CAACgB,EAApC,EAAwC;AACtC,aAAOH,OAAP;AACD;AACF,GAJkB,CAAnB;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE,QAAC,WAAD;AACG,MAAA,WAAW,EAAEb,WADhB,CAEE;AACA;AAHF;AAIG,MAAA,mBAAmB,EAAEiB,uBAJxB;AAKG,MAAA,eAAe,EAAEC,mBALpB;AAMG,MAAA,eAAe,EAAEC;AANpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAYD;;KApCQpB,W;AAsCT,eAAeA,WAAf,C,CAEC;AACC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport StorageCardArt from './StorageCardArt';\nimport StorageList from './StorageList'\n\nfunction StoragePage(\n  { currentUser, \n    onUpdateArtwork, \n    onDeleteArtwork, \n    onDeleteAcquisition,\n  }) {\n\n  const [userAcquisitions, setUserAcquisitions] = ([])\n  \n  let aq = currentUser.acquisitions.map((acquisition) =>\n    setUserAcquisitions(acquisition)\n  )\n\n  let collectedArtwork = collection.artworks.map((artwork) => {\n    // return <StorageCardArt\n\n  })\n\n  let userArtworks = artworks.map((artwork) => {\n    if (artwork.user.id === currentUser.id) {\n      return artwork\n    }\n  })\n\n  return (\n      <div className=\"storage\" >\n        <StorageList\n           currentUser={currentUser}\n          //  UserArtworks={storedUserArtworks}\n          //  storedAcquisitions={storedAcquisitions}\n           onDeleteAcquisition={handleDeleteAcquisition}\n           onDeleteArtwork={handleDeleteArtwork}\n           onUpdateArtwork={handleUpdateArtwork}\n        />\n      </div>\n  );\n}\n\nexport default StoragePage;\n\n // const [storedAcquisitions, setStoredAcquisitions] = useState([])\n  // const [storedUserArtworks, setStoredUserArtworks] = useState([]) \n  // const { id } = currentUser;\n\n  // console.log(id)\n  // useEffect(() => {\n  //   fetch(`http://localhost:3000/users/${id}/acquisitions`)\n  //       .then(r => r.json())\n  //       .then(userAcquisitionsArray => {\n  //           setStoredAcquisitions(userAcquisitionsArray);\n  //       })\n  // }, [])\n\n  // useEffect(() => {\n  //   fetch(`http://localhost:3000/users/${id}/artworks`)\n  //       .then(r => r.json())\n  //       .then(userArtworksArray => {\n  //           setStoredUserArtworks(userArtworksArray);\n  //       })\n  // }, [])"]},"metadata":{},"sourceType":"module"}