{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js\";\nimport React from 'react';\nimport UserAcquisitionCard from './UserAcquisitionCard';\nimport CommentForm from './CommentForm';\nimport CommentCard from './CommentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserList({\n  eachUser,\n  cUId,\n  onAcquireArtwork,\n  acquisitions,\n  comments,\n  onAddComment,\n  onDeleteComment\n}) {\n  const tCollection = eachUser.acquisitions ? acquisitions.filter(acquisition => acquisition.user.id === eachUser.id) : null;\n  const uAcquisitions = eachUser.acquisitions ? tCollection.map(acquisition => {\n    return /*#__PURE__*/_jsxDEV(UserAcquisitionCard, {\n      aArtwork: acquisition.artwork,\n      cUId: cUId,\n      onAcquireArtwork: onAcquireArtwork\n    }, acquisition.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this);\n  }) : null;\n  const tComments = eachUser.comments ? comments.filter(comment => comment.commentee_id === eachUser.id) : null;\n  const uComments = eachUser.comments ? tComments.map(comment => {\n    return /*#__PURE__*/_jsxDEV(CommentCard, {\n      cUId: cUId,\n      commentID: comment.id,\n      content: comment.content,\n      author: comment.author,\n      commenter_id: comment.commenter_id,\n      onDeleteComment: onDeleteComment\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tCollection.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"The \", eachUser.name, \" Collection\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), uAcquisitions, /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Comments on \", eachUser.name, \"'s collection\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), uComments, /*#__PURE__*/_jsxDEV(CommentForm, {\n        eachUserID: eachUser.id,\n        cUId: cUId,\n        onAddComment: onAddComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_c = UserList;\nexport default UserList; // return(\n//     <div>\n//          {tCollection.length > 0 ? (\n//             <>\n//                 <h2>The {eachUser.name} Collection</h2>\n//                     {uAcquisitions}\n//                 <h3>Comments on {eachUser.name}'s collection</h3>    \n//                     {uComments}\n//                 <CommentForm \n//                     eachUserID={eachUser.id} \n//                     cUId={cUId} \n//                     onAddComment={onAddComment}\n//                 />\n//                 <br></br>\n//             </>\n//     ) : (\n//         <>\n//         </>\n//     )}\n//     </div>\n// );\n// const collectionComments = comments.filter((comment) => comment.commentee_id === eachUser.id)\n//     const thisCollection = acquisitions.filter((acquisition) => acquisition.user.id === eachUser.id)\n//     const uAcquisitions =    \n//         thisCollection.map((acquisition) => {\n//             return <UserAcquisitionCard\n//                     key={acquisition.id}\n//                     aArtwork={acquisition.artwork}\n//                     cUId={cUId}\n//                     onAcquireArtwork={onAcquireArtwork}\n//                     />\n//         })\n//     const uComments =\n//         collectionComments.map((comment) => {\n//             return <CommentCard\n//                     key={comment.id}\n//                     cUId={cUId}\n//                     commentID={comment.id}\n//                     content={comment.content}\n//                     author={comment.author}\n//                     commenter_id={comment.commenter_id}\n//                     onDeleteComment={onDeleteComment}\n//                     />\n//         })\n//     return(\n//         <div>\n//             <h2>The {eachUser.name} Collection</h2>\n//                 {uAcquisitions}\n//             <h3>Comments on {eachUser.name}'s collection</h3>    \n//                 {uComments}\n//             <CommentForm \n//                 eachUserID={eachUser.id} \n//                 cUId={cUId} \n//                 onAddComment={onAddComment}\n//             />\n//             <br></br>\n//         </div>\n//     );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js"],"names":["React","UserAcquisitionCard","CommentForm","CommentCard","UserList","eachUser","cUId","onAcquireArtwork","acquisitions","comments","onAddComment","onDeleteComment","tCollection","filter","acquisition","user","id","uAcquisitions","map","artwork","tComments","comment","commentee_id","uComments","content","author","commenter_id","length","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,SAASC,QAAT,CAAkB;AACNC,EAAAA,QADM;AAENC,EAAAA,IAFM;AAGNC,EAAAA,gBAHM;AAINC,EAAAA,YAJM;AAKNC,EAAAA,QALM;AAMNC,EAAAA,YANM;AAONC,EAAAA;AAPM,CAAlB,EAQU;AAEN,QAAMC,WAAW,GACjBP,QAAQ,CAACG,YAAT,GAAyBA,YAAY,CAACK,MAAb,CAAqBC,WAAD,IAAiBA,WAAW,CAACC,IAAZ,CAAiBC,EAAjB,KAAwBX,QAAQ,CAACW,EAAtE,CAAzB,GACK,IAFL;AAIA,QAAMC,aAAa,GACnBZ,QAAQ,CAACG,YAAT,GAAyBI,WAAW,CAACM,GAAZ,CAAiBJ,WAAD,IAAiB;AAClD,wBAAO,QAAC,mBAAD;AAEC,MAAA,QAAQ,EAAEA,WAAW,CAACK,OAFvB;AAGC,MAAA,IAAI,EAAEb,IAHP;AAIC,MAAA,gBAAgB,EAAEC;AAJnB,OACMO,WAAW,CAACE,EADlB;AAAA;AAAA;AAAA;AAAA,YAAP;AAMC,GAPgB,CAAzB,GAQK,IATL;AAWA,QAAMI,SAAS,GACff,QAAQ,CAACI,QAAT,GAAqBA,QAAQ,CAACI,MAAT,CAAiBQ,OAAD,IAAaA,OAAO,CAACC,YAAR,KAAyBjB,QAAQ,CAACW,EAA/D,CAArB,GACK,IAFL;AAIA,QAAMO,SAAS,GACflB,QAAQ,CAACI,QAAT,GAAqBW,SAAS,CAACF,GAAV,CAAeG,OAAD,IAAa;AACxC,wBAAO,QAAC,WAAD;AAEC,MAAA,IAAI,EAAEf,IAFP;AAGC,MAAA,SAAS,EAAEe,OAAO,CAACL,EAHpB;AAIC,MAAA,OAAO,EAAEK,OAAO,CAACG,OAJlB;AAKC,MAAA,MAAM,EAAEH,OAAO,CAACI,MALjB;AAMC,MAAA,YAAY,EAAEJ,OAAO,CAACK,YANvB;AAOC,MAAA,eAAe,EAAEf;AAPlB,OACMU,OAAO,CAACL,EADd;AAAA;AAAA;AAAA;AAAA,YAAP;AASH,GAVgB,CAArB,GAWK,IAZL;AAcA,sBACI;AAAA,cACMJ,WAAW,CAACe,MAAZ,GAAqB,CAArB,gBACE;AAAA,8BACI;AAAA,2BAAStB,QAAQ,CAACuB,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAESX,aAFT,eAGI;AAAA,mCAAiBZ,QAAQ,CAACuB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAISL,SAJT,eAKI,QAAC,WAAD;AACI,QAAA,UAAU,EAAElB,QAAQ,CAACW,EADzB;AAEI,QAAA,IAAI,EAAEV,IAFV;AAGI,QAAA,YAAY,EAAEI;AAHlB;AAAA;AAAA;AAAA;AAAA,cALJ,eAUI;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA,oBADF,gBAcF;AAfJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;KAhEQN,Q;AAkET,eAAeA,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAoBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport UserAcquisitionCard from './UserAcquisitionCard'\nimport CommentForm from './CommentForm'\nimport CommentCard from './CommentCard'\n\nfunction UserList({ \n            eachUser, \n            cUId, \n            onAcquireArtwork, \n            acquisitions,\n            comments,\n            onAddComment,\n            onDeleteComment, \n        }){\n   \n    const tCollection = \n    eachUser.acquisitions ? (acquisitions.filter((acquisition) => acquisition.user.id === eachUser.id)\n    ) : (null)\n    \n    const uAcquisitions = \n    eachUser.acquisitions ? (tCollection.map((acquisition) => {\n            return <UserAcquisitionCard\n                    key={acquisition.id}\n                    aArtwork={acquisition.artwork}\n                    cUId={cUId}\n                    onAcquireArtwork={onAcquireArtwork}\n                    />\n            })\n    ) : (null)\n   \n    const tComments = \n    eachUser.comments ? (comments.filter((comment) => comment.commentee_id === eachUser.id)\n    ) : (null)\n\n    const uComments =\n    eachUser.comments ? (tComments.map((comment) => {\n            return <CommentCard\n                    key={comment.id}\n                    cUId={cUId}\n                    commentID={comment.id}\n                    content={comment.content}\n                    author={comment.author}\n                    commenter_id={comment.commenter_id}\n                    onDeleteComment={onDeleteComment}\n                    />\n        })\n    ) : (null)\n\n    return(\n        <div>\n             {tCollection.length > 0 ? (\n                <>\n                    <h2>The {eachUser.name} Collection</h2>\n                        {uAcquisitions}\n                    <h3>Comments on {eachUser.name}'s collection</h3>    \n                        {uComments}\n                    <CommentForm \n                        eachUserID={eachUser.id} \n                        cUId={cUId} \n                        onAddComment={onAddComment}\n                    />\n                    <br></br>\n                </>\n        ) : (\n            <>\n            </>\n        )}\n        </div>\n    );\n}\n\nexport default UserList;\n\n\n// return(\n//     <div>\n//          {tCollection.length > 0 ? (\n//             <>\n//                 <h2>The {eachUser.name} Collection</h2>\n//                     {uAcquisitions}\n//                 <h3>Comments on {eachUser.name}'s collection</h3>    \n//                     {uComments}\n//                 <CommentForm \n//                     eachUserID={eachUser.id} \n//                     cUId={cUId} \n//                     onAddComment={onAddComment}\n//                 />\n//                 <br></br>\n//             </>\n//     ) : (\n//         <>\n//         </>\n//     )}\n//     </div>\n// );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const collectionComments = comments.filter((comment) => comment.commentee_id === eachUser.id)\n//     const thisCollection = acquisitions.filter((acquisition) => acquisition.user.id === eachUser.id)\n    \n//     const uAcquisitions =    \n//         thisCollection.map((acquisition) => {\n//             return <UserAcquisitionCard\n//                     key={acquisition.id}\n//                     aArtwork={acquisition.artwork}\n//                     cUId={cUId}\n//                     onAcquireArtwork={onAcquireArtwork}\n//                     />\n//         })\n    \n//     const uComments =\n//         collectionComments.map((comment) => {\n//             return <CommentCard\n//                     key={comment.id}\n//                     cUId={cUId}\n//                     commentID={comment.id}\n//                     content={comment.content}\n//                     author={comment.author}\n//                     commenter_id={comment.commenter_id}\n//                     onDeleteComment={onDeleteComment}\n//                     />\n//         })\n\n//     return(\n//         <div>\n//             <h2>The {eachUser.name} Collection</h2>\n//                 {uAcquisitions}\n//             <h3>Comments on {eachUser.name}'s collection</h3>    \n//                 {uComments}\n//             <CommentForm \n//                 eachUserID={eachUser.id} \n//                 cUId={cUId} \n//                 onAddComment={onAddComment}\n//             />\n//             <br></br>\n//         </div>\n//     );\n// }"]},"metadata":{},"sourceType":"module"}