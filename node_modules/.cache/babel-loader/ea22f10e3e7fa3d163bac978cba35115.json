{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  setCurrentUser\n}) {\n  _s();\n\n  const history = useHistory();\n  const [errors, setErrors] = useState([]);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    password: \"\"\n  }); // console.log(errors)\n\n  function handleChange(e) {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    axios.post(\"/login\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      return res.json().then(data => {\n        if (res.ok) {\n          return data;\n        } else {\n          throw data;\n        }\n      });\n    }).then(data => {\n      const {\n        user,\n        token\n      } = data;\n      localStorage.setItem(\"token\", token);\n      setCurrentUser(user);\n      history.push(\"/\");\n    }).catch(error => {\n      // setErrors(error.errors);\n      console.log(error.errors);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        autoComplete: \"off\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), errors.map(error => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, error, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"GePkvq0vFbr7zKVI85XnZnlo7Ec=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/Login.js"],"names":["React","useState","axios","useHistory","Login","setCurrentUser","history","errors","setErrors","formData","setFormData","name","password","handleChange","e","target","value","handleSubmit","preventDefault","token","localStorage","getItem","post","headers","Authorization","body","JSON","stringify","then","res","json","data","ok","user","setItem","push","catch","error","console","log","map","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nfunction Login({ setCurrentUser }) {\n\n    const history = useHistory() \n    const [errors, setErrors] = useState([])\n    const [formData, setFormData] = useState({\n        name: \"\",\n        password: \"\",\n    });\n\n    // console.log(errors)\n\n    function handleChange(e) {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const token = localStorage.getItem(\"token\");\n        axios.post(\"/login\", {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify(formData)\n        })\n            .then((res) => {\n                return res.json().then(data => {\n                    if (res.ok) {\n                        return data;\n                    } else {\n                        throw data;\n                    }\n                });\n            })\n            .then((data) => {\n                const { user, token } = data;\n                localStorage.setItem(\"token\", token);\n                setCurrentUser(user);\n                history.push(\"/\");\n            })\n            .catch((error) => {\n                // setErrors(error.errors);\n                console.log(error.errors);\n            });\n    }\n \n  return (\n    <div className=\"login\">\n        <form onSubmit={handleSubmit}>\n            <label>name</label>\n            <input\n                type=\"text\"\n                name=\"name\"\n                autoComplete=\"off\"\n                value={formData.name}\n                onChange={handleChange}\n            />\n            <label>password</label>\n            <input\n                type=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                autoComplete=\"current-password\"\n            />\n            {/* {errors.map(error => (\n                <p style={{ color: \"red\" }} key={error}>\n                    {error}\n                </p>\n                ))} */}\n            <input type=\"submit\" value=\"Login\" />\n            {errors.map((error) => (\n                <p style={{ color: \"red\" }} key={error}>\n                    {error}\n                </p>\n                ))}\n        </form>  \n    </div>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}