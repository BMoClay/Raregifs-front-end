{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js\";\nimport React, { useEffect, useState } from 'react';\nimport StorageList from './StorageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StoragePage({\n  currentUser,\n  acquisitions,\n  artworks,\n  setAcquisitions\n}) {\n  userAcquisitions = acquisitions.map(acquisition => {\n    if (acquisition.user.id === currentUser.id) {\n      return acquisition;\n    }\n  });\n\n  function handleDeleteAcquisition(id) {\n    const updatedAcquisitionsArray = acquisitions.filter(acquisition => acquisition.id !== id);\n    setAcquisitions(updatedAcquisitionsArray);\n  }\n\n  function handleUpdateArtwork(updatedArtwork) {\n    const updatedArtworksArray = artworks.map(artwork => {\n      if (artwork.id === updatedArtwork.id) {\n        return updatedArtwork;\n      } else {\n        return artwork;\n      }\n    });\n    setArtworks(updatedArtworksArray);\n  }\n\n  function handleDeleteArtwork(id) {\n    const updatedArtworksArray = artworks.filter(artwork => artwork.id !== id);\n    setArtworks(updatedArtworksArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage\",\n    children: /*#__PURE__*/_jsxDEV(StorageList, {\n      currentUser: currentUser //  UserArtworks={storedUserArtworks}\n      //  storedAcquisitions={storedAcquisitions}\n      ,\n      onDeleteAcquisition: handleDeleteAcquisition,\n      onDeleteArtwork: handleDeleteArtwork,\n      onUpdateArtwork: handleUpdateArtwork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n_c = StoragePage;\nexport default StoragePage; // const [storedAcquisitions, setStoredAcquisitions] = useState([])\n// const [storedUserArtworks, setStoredUserArtworks] = useState([]) \n// const { id } = currentUser;\n// console.log(id)\n// useEffect(() => {\n//   fetch(`http://localhost:3000/users/${id}/acquisitions`)\n//       .then(r => r.json())\n//       .then(userAcquisitionsArray => {\n//           setStoredAcquisitions(userAcquisitionsArray);\n//       })\n// }, [])\n// useEffect(() => {\n//   fetch(`http://localhost:3000/users/${id}/artworks`)\n//       .then(r => r.json())\n//       .then(userArtworksArray => {\n//           setStoredUserArtworks(userArtworksArray);\n//       })\n// }, [])\n\nvar _c;\n\n$RefreshReg$(_c, \"StoragePage\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js"],"names":["React","useEffect","useState","StorageList","StoragePage","currentUser","acquisitions","artworks","setAcquisitions","userAcquisitions","map","acquisition","user","id","handleDeleteAcquisition","updatedAcquisitionsArray","filter","handleUpdateArtwork","updatedArtwork","updatedArtworksArray","artwork","setArtworks","handleDeleteArtwork"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA,QAA7B;AAAuCC,EAAAA;AAAvC,CAArB,EAA+E;AAE7EC,EAAAA,gBAAgB,GAAGH,YAAY,CAACI,GAAb,CAAkBC,WAAD,IAAiB;AACnD,QAAIA,WAAW,CAACC,IAAZ,CAAiBC,EAAjB,KAAwBR,WAAW,CAACQ,EAAxC,EAA4C;AAC1C,aAAOF,WAAP;AACD;AACF,GAJkB,CAAnB;;AAMA,WAASG,uBAAT,CAAiCD,EAAjC,EAAqC;AACnC,UAAME,wBAAwB,GAAGT,YAAY,CAACU,MAAb,CAAqBL,WAAD,IAAiBA,WAAW,CAACE,EAAZ,KAAmBA,EAAxD,CAAjC;AACAL,IAAAA,eAAe,CAACO,wBAAD,CAAf;AACD;;AAED,WAASE,mBAAT,CAA6BC,cAA7B,EAA6C;AAC3C,UAAMC,oBAAoB,GAAGZ,QAAQ,CAACG,GAAT,CAAcU,OAAD,IAAa;AACrD,UAAIA,OAAO,CAACP,EAAR,KAAeK,cAAc,CAACL,EAAlC,EAAsC;AAClC,eAAOK,cAAP;AACH,OAFD,MAEO;AACH,eAAOE,OAAP;AACH;AACF,KAN4B,CAA7B;AAOAC,IAAAA,WAAW,CAACF,oBAAD,CAAX;AACD;;AAED,WAASG,mBAAT,CAA6BT,EAA7B,EAAiC;AAC/B,UAAMM,oBAAoB,GAAGZ,QAAQ,CAACS,MAAT,CAAiBI,OAAD,IAAaA,OAAO,CAACP,EAAR,KAAeA,EAA5C,CAA7B;AACAQ,IAAAA,WAAW,CAACF,oBAAD,CAAX;AACD;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE,QAAC,WAAD;AACG,MAAA,WAAW,EAAEd,WADhB,CAEE;AACA;AAHF;AAIG,MAAA,mBAAmB,EAAES,uBAJxB;AAKG,MAAA,eAAe,EAAEQ,mBALpB;AAMG,MAAA,eAAe,EAAEL;AANpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAYD;;KAzCQb,W;AA2CT,eAAeA,WAAf,C,CAEC;AACC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport StorageList from './StorageList'\n\nfunction StoragePage({ currentUser, acquisitions, artworks, setAcquisitions }) {\n  \n  userAcquisitions = acquisitions.map((acquisition) => {\n    if (acquisition.user.id === currentUser.id) {\n      return acquisition\n    }\n  })\n\n  function handleDeleteAcquisition(id) {\n    const updatedAcquisitionsArray = acquisitions.filter((acquisition) => acquisition.id !== id);\n    setAcquisitions(updatedAcquisitionsArray);\n  } \n\n  function handleUpdateArtwork(updatedArtwork) {\n    const updatedArtworksArray = artworks.map((artwork) => {\n      if (artwork.id === updatedArtwork.id) {\n          return updatedArtwork;\n      } else {\n          return artwork;\n      }\n    })\n    setArtworks(updatedArtworksArray);\n  }\n\n  function handleDeleteArtwork(id) {\n    const updatedArtworksArray = artworks.filter((artwork) => artwork.id !== id);\n    setArtworks(updatedArtworksArray);\n  }  \n\n  return (\n      <div className=\"storage\" >\n        <StorageList\n           currentUser={currentUser}\n          //  UserArtworks={storedUserArtworks}\n          //  storedAcquisitions={storedAcquisitions}\n           onDeleteAcquisition={handleDeleteAcquisition}\n           onDeleteArtwork={handleDeleteArtwork}\n           onUpdateArtwork={handleUpdateArtwork}\n        />\n      </div>\n  );\n}\n\nexport default StoragePage;\n\n // const [storedAcquisitions, setStoredAcquisitions] = useState([])\n  // const [storedUserArtworks, setStoredUserArtworks] = useState([]) \n  // const { id } = currentUser;\n\n  // console.log(id)\n  // useEffect(() => {\n  //   fetch(`http://localhost:3000/users/${id}/acquisitions`)\n  //       .then(r => r.json())\n  //       .then(userAcquisitionsArray => {\n  //           setStoredAcquisitions(userAcquisitionsArray);\n  //       })\n  // }, [])\n\n  // useEffect(() => {\n  //   fetch(`http://localhost:3000/users/${id}/artworks`)\n  //       .then(r => r.json())\n  //       .then(userArtworksArray => {\n  //           setStoredUserArtworks(userArtworksArray);\n  //       })\n  // }, [])"]},"metadata":{},"sourceType":"module"}