{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Signup from './Signup';\nimport Login from './Login';\nimport Upload from './UploadArtForm';\nimport ArtPage from './ArtPage';\nimport UserPage from './UserPage';\nimport StoragePage from './StoragePage';\nimport Account from './Account';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [artworks, setArtworks] = useState([]);\n  const [acquisitions, setAcquisitions] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [eachUserCollection, setEachUserCollection] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/users').then(r => r.json()).then(usersArray => {\n      setUsers(usersArray);\n    });\n  }, []);\n  const eachUser = users.map(user => user);\n  const userCollection = eachUser.console.log(userCollection);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/me\").then(r => r.json()).then(user => {\n      setCurrentUser(user);\n    });\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3000/artworks').then(r => r.json()).then(artworksArray => {\n      setArtworks(artworksArray);\n    });\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3000/acquisitions').then(r => r.json()).then(acquisitionsArray => {\n      setAcquisitions(acquisitionsArray);\n    });\n  }, []);\n\n  function handleAddAcquisition(newUserAcq) {\n    const thisUser = users.filter(user => user.id === newUserAcq.user.id);\n    const userAcqs = thisUser.acquisitions;\n    setEachUserCollection(userAcqs, ...eachUserCollection);\n  }\n\n  console.log(eachUserCollection);\n\n  function handleAddArtwork(newArtwork) {\n    const updatedArtworksArray = [newArtwork, ...artworks];\n    setArtworks(updatedArtworksArray);\n  }\n\n  function handleDeleteAcquisition(acquisitionObject) {\n    // console.log(acquisitionObject)\n    const {\n      id\n    } = acquisitionObject;\n    const updatedAcqA = acquisitions.filter(acquisition => acquisition.id !== id);\n    setAcquisitions(updatedAcqA);\n  }\n\n  function handleUpdateArtwork(updatedArtwork) {\n    const updatedArtA = artworks.map(artwork => {\n      if (artwork.id === updatedArtwork.id) {\n        return updatedArtwork;\n      } else {\n        return artwork;\n      }\n    });\n    setArtworks(updatedArtA);\n  }\n\n  function handleDeleteArtwork(id) {\n    const updatedArtworksArray = artworks.filter(artwork => artwork.id !== id);\n    setArtworks(updatedArtworksArray);\n  }\n\n  console.log(currentUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      currentUser: currentUser,\n      setCurrentUser: setCurrentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          setCurrentUser: setCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(ArtPage, {\n          currentUser: currentUser,\n          artworks: artworks,\n          onAcquireArtwork: handleAddAcquisition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/users\",\n        children: /*#__PURE__*/_jsxDEV(UserPage, {\n          users: users,\n          currentUser: currentUser,\n          onAcquireArtwork: handleAddAcquisition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/upload\",\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          currentUser: currentUser,\n          onCreateArtwork: handleAddArtwork\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/storage\",\n        children: /*#__PURE__*/_jsxDEV(StoragePage, {\n          currentUser: currentUser,\n          onDeleteArtwork: handleDeleteArtwork,\n          onDeleteAcquisition: handleDeleteAcquisition,\n          onUpdateArtwork: handleUpdateArtwork\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/account\",\n        children: /*#__PURE__*/_jsxDEV(Account, {\n          setCurrentUser: setCurrentUser,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(Signup, {\n          setCurrentUser: setCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"xnqOYt3WSl3DboyAVpjvKEZiBK0=\");\n\n_c = App;\nexport default App; // const updatedUserAcqsA = [newUserAcq, ...acquisitions];\n// setAcquisitions(updatedUserAcqsA)\n// const [userArtworks, setUserArtworks] = useState([])\n// const [userAcquisitions, setUserAcquisitions] = useState([])\n// useEffect(() => {\n//   // fetch(`http://localhost:3000/users/${currentUser.id}/artworks`)\n//   fetch('http://localhost:3000/myArtworks')\n//   .then(r => r.json())\n//   .then(userArtworks => {\n//     setUserArtworks(userArtworks)\n//   })\n// }, [])\n// useEffect(() => {\n//   // fetch(`http://localhost:3000/users/${currentUser.id}/acquisitions`)\n//   fetch('http://localhost:3000/myAcquisitions')\n//   .then(r => r.json())\n//   .then(userAcquisitions => {\n//     setUserAcquisitions(userAcquisitions)\n//   })\n// }, [])\n// console.log(currentUser.acquisitions)\n// console.log(userArtworks)\n// console.log(userAcquisitions)\n// userArtworks={userArtworks}\n// setUserArtworks={setUserArtworks}\n// userAcquisitions={userAcquisitions}\n// setUserAcquisition={setUserAcquisitions}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/App.js"],"names":["React","useEffect","useState","Switch","Route","NavBar","Signup","Login","Upload","ArtPage","UserPage","StoragePage","Account","App","currentUser","setCurrentUser","artworks","setArtworks","acquisitions","setAcquisitions","users","setUsers","eachUserCollection","setEachUserCollection","fetch","then","r","json","usersArray","eachUser","map","user","userCollection","console","log","artworksArray","acquisitionsArray","handleAddAcquisition","newUserAcq","thisUser","filter","id","userAcqs","handleAddArtwork","newArtwork","updatedArtworksArray","handleDeleteAcquisition","acquisitionObject","updatedAcqA","acquisition","handleUpdateArtwork","updatedArtwork","updatedArtA","artwork","handleDeleteArtwork"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Signup from './Signup';\nimport Login from './Login';\nimport Upload from './UploadArtForm';\nimport ArtPage from './ArtPage';\nimport UserPage from './UserPage';\nimport StoragePage from './StoragePage';\nimport Account from './Account';\n\nfunction App() {\n    const [currentUser, setCurrentUser] = useState(null)\n    const [artworks, setArtworks] = useState([]);\n    const [acquisitions, setAcquisitions] = useState([])\n    const [users, setUsers] = useState([])\n    const [eachUserCollection, setEachUserCollection] = useState([])\n    \n    useEffect(() => {\n        fetch('http://localhost:3000/users')\n            .then(r => r.json())\n            .then(usersArray => {\n                setUsers(usersArray);\n            })\n      }, [])\n\n    const eachUser = users.map((user) => user)\n    const userCollection = eachUser.\n    console.log(userCollection)\n\n    useEffect(() => {\n      fetch(\"http://localhost:3000/me\")\n      .then(r => r.json())\n      .then(user => {\n        setCurrentUser(user)\n      })\n    }, [])\n   \n    useEffect(() => {\n        fetch('http://localhost:3000/artworks')\n          .then(r => r.json())\n          .then((artworksArray) => {\n              setArtworks(artworksArray);\n          });\n        }, []) \n\n    useEffect(() => {\n        fetch('http://localhost:3000/acquisitions')\n            .then(r => r.json())\n            .then(acquisitionsArray => {\n                setAcquisitions(acquisitionsArray);\n            })\n    }, [])\n\n    function handleAddAcquisition(newUserAcq) {\n        const thisUser = users.filter((user) => user.id === newUserAcq.user.id)    \n        const userAcqs = thisUser.acquisitions\n            setEachUserCollection(userAcqs, ...eachUserCollection)\n    }\n    console.log(eachUserCollection)\n    \n    function handleAddArtwork(newArtwork) {\n        const updatedArtworksArray = [newArtwork, ...artworks];\n        setArtworks(updatedArtworksArray)\n    } \n\n    function handleDeleteAcquisition(acquisitionObject) {\n        // console.log(acquisitionObject)\n        const { id } = acquisitionObject\n        const updatedAcqA = acquisitions.filter((acquisition) => acquisition.id !== id);\n        setAcquisitions(updatedAcqA);\n    } \n\n    function handleUpdateArtwork(updatedArtwork) {\n        const updatedArtA = artworks.map((artwork) => {\n            if (artwork.id === updatedArtwork.id) {\n                return updatedArtwork;\n            } else {\n                return artwork;\n            }\n        })\n        setArtworks(updatedArtA);\n    }\n\n    function handleDeleteArtwork(id) {\n        const updatedArtworksArray = artworks.filter((artwork) => artwork.id !== id);\n        setArtworks(updatedArtworksArray);\n    }  \n\n    console.log(currentUser)\n    return (\n      <div className=\"app\">\n          <NavBar currentUser={currentUser} setCurrentUser={setCurrentUser} />\n              <Switch>\n                <Route exact path=\"/login\">\n                  <Login setCurrentUser={setCurrentUser}/>\n                </Route>\n                <Route exact path=\"/\" >\n                  <ArtPage currentUser={currentUser} artworks={artworks} onAcquireArtwork={handleAddAcquisition}/>\n                </Route>\n                <Route exact path=\"/users\">\n                  <UserPage users={users} currentUser={currentUser} onAcquireArtwork={handleAddAcquisition}/>\n                </Route>\n                <Route exact path=\"/upload\">\n                  <Upload currentUser={currentUser} onCreateArtwork={handleAddArtwork}/>\n                </Route>\n                <Route exact path=\"/storage\">\n                  <StoragePage \n                      currentUser={currentUser}\n                      onDeleteArtwork={handleDeleteArtwork}\n                      onDeleteAcquisition={handleDeleteAcquisition}\n                      onUpdateArtwork={handleUpdateArtwork}\n                      />\n                </Route>\n                <Route exact path=\"/account\">\n                  <Account setCurrentUser={setCurrentUser} currentUser={currentUser}/>\n                </Route>\n                <Route exact path=\"/signup\">\n                  <Signup setCurrentUser={setCurrentUser}/>\n                </Route>\n              </Switch>\n      </div>\n    );\n}\nexport default App;\n\n\n          // const updatedUserAcqsA = [newUserAcq, ...acquisitions];\n           // setAcquisitions(updatedUserAcqsA)\n\n\n\n\n\n\n\n\n\n\n\n\n    // const [userArtworks, setUserArtworks] = useState([])\n    // const [userAcquisitions, setUserAcquisitions] = useState([])\n\n    // useEffect(() => {\n    //   // fetch(`http://localhost:3000/users/${currentUser.id}/artworks`)\n    //   fetch('http://localhost:3000/myArtworks')\n    //   .then(r => r.json())\n    //   .then(userArtworks => {\n    //     setUserArtworks(userArtworks)\n    //   })\n    // }, [])\n\n    // useEffect(() => {\n    //   // fetch(`http://localhost:3000/users/${currentUser.id}/acquisitions`)\n    //   fetch('http://localhost:3000/myAcquisitions')\n    //   .then(r => r.json())\n    //   .then(userAcquisitions => {\n    //     setUserAcquisitions(userAcquisitions)\n    //   })\n    // }, [])\n\n    // console.log(currentUser.acquisitions)\n    // console.log(userArtworks)\n    // console.log(userAcquisitions)\n\n\n\n                      // userArtworks={userArtworks}\n                      // setUserArtworks={setUserArtworks}\n                      // userAcquisitions={userAcquisitions}\n                      // setUserAcquisition={setUserAcquisitions}\n"]},"metadata":{},"sourceType":"module"}