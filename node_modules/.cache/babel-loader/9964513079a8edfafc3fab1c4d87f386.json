{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserPage.js\";\nimport React from 'react';\nimport UserList from './UserList';\nimport { Container, Grid } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPage({\n  currentUser,\n  onAcquireArtwork,\n  acquisitions,\n  users,\n  comments,\n  onAddComment,\n  onDeleteComment\n}) {\n  const aUser = users.map(eachUser => {\n    return /*#__PURE__*/_jsxDEV(UserList, {\n      onAddComment: onAddComment,\n      onDeleteComment: onDeleteComment,\n      comments: comments,\n      acquisitions: acquisitions,\n      eachUser: eachUser,\n      cUId: currentUser.id,\n      onAcquireArtwork: onAcquireArtwork\n    }, eachUser.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 20\n    }, this);\n  });\n  return (\n    /*#__PURE__*/\n    // <Container >\n    // <Grid> \n    _jsxDEV(\"div\", {\n      children: aUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this) //  </Grid>\n    // </Container>\n\n  );\n}\n\n_c = UserPage;\nexport default UserPage; // <div>\n// <br></br>\n// {tCollection.length > 0 ? (\n//     <>\n//     <h3>{eachUser.name}'s Collection</h3>\n//     <Grid>\n//         <Grid.Column>\n//             <Grid \n//                 columns={2} \n//                 doubling \n//                 stackable\n//                 width={20}\n//             >\n//                 <Grid.Column>\n//                     <Segment>{uAcquisitions}</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                     <Segment><CommentForm \n//                             eachUserID={eachUser.id} \n//                             cUId={cUId} \n//                             onAddComment={onAddComment}\n//                             />\n//                     </Segment>\n//                 </Grid.Column>\n//             </Grid>\n//         </Grid.Column>\n//     </Grid>\n//     </>\n//     ) : (\n//     <>\n//     </>\n// )}\n// <div>\n// {tComments.length > 0 ? (\n//     <>\n//     <br></br>\n//     <h3>Comments</h3>\n//     <Grid>\n//         <Grid.Column>\n//             <Grid columns={2} doubling stackable>\n//                 <Grid.Column>\n//                     <Segment>{uComments}</Segment>\n//                 </Grid.Column>\n//             </Grid>\n//         </Grid.Column>\n//     </Grid>\n//     </>\n// ) : (\n//     <>\n//     </>\n// )}\n// </div>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserPage.js"],"names":["React","UserList","Container","Grid","UserPage","currentUser","onAcquireArtwork","acquisitions","users","comments","onAddComment","onDeleteComment","aUser","map","eachUser","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;;;AAEA,SAASC,QAAT,CAAkB;AACNC,EAAAA,WADM;AAENC,EAAAA,gBAFM;AAGNC,EAAAA,YAHM;AAINC,EAAAA,KAJM;AAKNC,EAAAA,QALM;AAMNC,EAAAA,YANM;AAONC,EAAAA;AAPM,CAAlB,EAQU;AAEN,QAAMC,KAAK,GACPJ,KAAK,CAACK,GAAN,CAAWC,QAAD,IAAc;AACpB,wBAAO,QAAC,QAAD;AAEH,MAAA,YAAY,EAAEJ,YAFX;AAGH,MAAA,eAAe,EAAEC,eAHd;AAIH,MAAA,QAAQ,EAAEF,QAJP;AAKH,MAAA,YAAY,EAAEF,YALX;AAMH,MAAA,QAAQ,EAAEO,QANP;AAOH,MAAA,IAAI,EAAET,WAAW,CAACU,EAPf;AAQH,MAAA,gBAAgB,EAAET;AARf,OACEQ,QAAQ,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,YAAP;AAUH,GAXD,CADJ;AAeA;AAAA;AACI;AACA;AACC;AAAA,gBACIH;AADJ;AAAA;AAAA;AAAA;AAAA,YAHL,CAMI;AACA;;AAPJ;AASH;;KAlCQR,Q;AAmCT,eAAeA,QAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport UserList from './UserList'\nimport { Container, Grid } from 'semantic-ui-react'\n\nfunction UserPage({ \n            currentUser, \n            onAcquireArtwork, \n            acquisitions,\n            users,\n            comments,\n            onAddComment,\n            onDeleteComment\n        }){\n\n    const aUser =\n        users.map((eachUser) => {\n            return <UserList\n                key={eachUser.id}\n                onAddComment={onAddComment}\n                onDeleteComment={onDeleteComment}\n                comments={comments}\n                acquisitions={acquisitions}\n                eachUser={eachUser}\n                cUId={currentUser.id}\n                onAcquireArtwork={onAcquireArtwork}\n                />\n        }\n        )\n        \n    return (\n        // <Container >\n        // <Grid> \n         <div>\n            {aUser}\n         </div>\n        //  </Grid>\n        // </Container>\n    );\n}\nexport default UserPage;\n\n\n\n// <div>\n// <br></br>\n// {tCollection.length > 0 ? (\n//     <>\n//     <h3>{eachUser.name}'s Collection</h3>\n//     <Grid>\n//         <Grid.Column>\n//             <Grid \n//                 columns={2} \n//                 doubling \n//                 stackable\n//                 width={20}\n//             >\n//                 <Grid.Column>\n//                     <Segment>{uAcquisitions}</Segment>\n//                 </Grid.Column>\n//                 <Grid.Column>\n//                     <Segment><CommentForm \n//                             eachUserID={eachUser.id} \n//                             cUId={cUId} \n//                             onAddComment={onAddComment}\n//                             />\n//                     </Segment>\n//                 </Grid.Column>\n//             </Grid>\n//         </Grid.Column>\n//     </Grid>\n//     </>\n//     ) : (\n//     <>\n//     </>\n// )}\n// <div>\n// {tComments.length > 0 ? (\n//     <>\n//     <br></br>\n//     <h3>Comments</h3>\n//     <Grid>\n//         <Grid.Column>\n//             <Grid columns={2} doubling stackable>\n//                 <Grid.Column>\n//                     <Segment>{uComments}</Segment>\n//                 </Grid.Column>\n//             </Grid>\n//         </Grid.Column>\n//     </Grid>\n//     </>\n// ) : (\n//     <>\n//     </>\n// )}\n// </div>\n// </div>"]},"metadata":{},"sourceType":"module"}