{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UploadArtForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { useDropzone } from 'react-dropzone';\nimport { Image } from 'cloudinary-react';\nimport styles from \"./styles/Home.module.css\";\nimport { Form, Embed, Container } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadArtForm({\n  currentUser,\n  onCreateArtwork\n}) {\n  _s();\n\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const onDrop = useCallback(acceptedFiles => {\n    const url = `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}/upload`;\n    acceptedFiles.forEach(async acceptedFile => {\n      const {\n        signature,\n        timestamp\n      } = await getSignature();\n      const formData = new FormData();\n      formData.append(\"file\", acceptedFile); // formData.append(\"upload_preset\", process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET)\n\n      formData.append('signature', signature);\n      formData.append('timestamp');\n      const response = await fetch(url, {\n        method: \"post\",\n        body: formData\n      });\n      const data = await response.json();\n      setUploadedFiles(old => [...old, data]);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accepts: \"image/*\",\n    multiple: false\n  });\n\n  function handleSubmitNewArtwork(e) {\n    e.preventDefault();\n    axios.post(\"/artworks\", {\n      title: title,\n      image: image,\n      user_id: currentUser.id\n    }).then(response => {\n      onCreateArtwork(response.data);\n      history.push(\"/\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n        className: `${styles.dropzone} ${isDragActive ? styles.active : null}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), \"Drop Zone\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            cloudName: process.env.REACT_APP_CLOUDINARY_CLOUD_NAME,\n            publicId: file.public_id,\n            width: \"300\",\n            crop: \"scale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 22\n          }, this)\n        }, file.public_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmitNewArtwork,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"title\",\n          value: title,\n          placeholder: \"title\",\n          type: \"text\",\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"image-url\",\n          value: image,\n          placeholder: \"image-url\",\n          type: \"text\",\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Embed, {\n      icon: \"paint brush\",\n      url: \"https://kleki.com/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Embed, {\n      icon: \"file pdf\",\n      url: \"https://docs.google.com/presentation/d/1MXF9c1oGW3kR93imVzaFhlsm_-HYOzQZlsfwPv67BGs/edit#slide=id.p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Embed, {\n      style: {\n        height: 2800\n      },\n      icon: \"stack exchange\",\n      url: \"https://ezgif.com/pdf-to-gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadArtForm, \"4BUGIa4cvycSqRSC4m8t/Xn/bN0=\", false, function () {\n  return [useHistory, useDropzone];\n});\n\n_c = UploadArtForm;\n\nasync function getSignature() {\n  const response = await fetch('/api/sign');\n  const data = await response.json();\n  const {\n    signature,\n    timestamp\n  } = data;\n  return {\n    signature,\n    timestamp\n  };\n}\n\nexport default UploadArtForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadArtForm\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UploadArtForm.js"],"names":["React","useState","useCallback","axios","useDropzone","Image","styles","Form","Embed","Container","useHistory","UploadArtForm","currentUser","onCreateArtwork","uploadedFiles","setUploadedFiles","history","title","setTitle","image","setImage","onDrop","acceptedFiles","url","process","env","REACT_APP_CLOUDINARY_CLOUD_NAME","forEach","acceptedFile","signature","timestamp","getSignature","formData","FormData","append","response","fetch","method","body","data","json","old","getRootProps","getInputProps","isDragActive","accepts","multiple","handleSubmitNewArtwork","e","preventDefault","post","user_id","id","then","push","dropzone","active","map","file","public_id","target","value","height"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { useDropzone } from 'react-dropzone';\nimport { Image } from 'cloudinary-react';\nimport styles from \"./styles/Home.module.css\";\nimport { \n    Form, \n    Embed,\n    Container,\n} from 'semantic-ui-react'\nimport { useHistory } from 'react-router-dom';\n\nfunction UploadArtForm({ currentUser, onCreateArtwork }){\n\n    const [uploadedFiles, setUploadedFiles] = useState([])\n    \n    const history = useHistory() \n    const [title, setTitle] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n\n    const onDrop = useCallback((acceptedFiles) => {\n        const url = `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}/upload`;\n\n        acceptedFiles.forEach(async (acceptedFile) => {\n            const { signature, timestamp } = await getSignature();\n\n            const formData = new FormData();\n            formData.append(\"file\", acceptedFile);\n            // formData.append(\"upload_preset\", process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET)\n            formData.append('signature', signature);\n            formData.append('timestamp')\n\n            const response = await fetch(url, {\n                method: \"post\",\n                body: formData,\n            })\n            const data = await response.json();\n           setUploadedFiles(old => [...old, data]);\n        })\n    }, []);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ \n        onDrop, \n        accepts: \"image/*\",\n        multiple: false,\n    })\n\n    function handleSubmitNewArtwork(e) {\n        e.preventDefault();\n        axios.post(\"/artworks\", {\n                title: title,\n                image: image,\n                user_id: currentUser.id,\n            })\n            .then((response) => {\n                onCreateArtwork(response.data)\n                history.push(\"/\")\n            })\n    }   \n        \n    return ( \n        <Container>\n            <>\n            <div {...getRootProps()} className={`${styles.dropzone} ${isDragActive ? styles.active : null}`}>\n                <input {...getInputProps()}/>    \n                Drop Zone\n            </div>\n            <ul>\n                {uploadedFiles.map((file) => (\n                <li key={file.public_id}>\n                     <Image \n                     cloudName={process.env.REACT_APP_CLOUDINARY_CLOUD_NAME} \n                     publicId={file.public_id} \n                     width=\"300\" \n                     crop=\"scale\"\n                     />\n                    </li>\n                ))}\n            </ul>\n            </>\n            <br></br>\n        <Form onSubmit={handleSubmitNewArtwork}>\n            <br></br>\n            <Form.Group widths=\"equal\">\n                <Form.Input \n                    label='title'\n                    value={title}\n                    placeholder='title'\n                    type=\"text\"\n                    onChange={(e) => setTitle(e.target.value)}\n                    />\n                <Form.Input \n                    label='image-url'\n                    value={image}\n                    placeholder='image-url'\n                    type=\"text\"\n                    onChange={(e) => setImage(e.target.value)}\n                    />\n                </Form.Group>\n            <Form.Button>submit</Form.Button>\n        </Form>\n        <br></br>\n        <Embed\n            icon='paint brush'\n            url='https://kleki.com/'\n        />\n        <br></br>\n        <Embed\n            icon='file pdf'\n            url='https://docs.google.com/presentation/d/1MXF9c1oGW3kR93imVzaFhlsm_-HYOzQZlsfwPv67BGs/edit#slide=id.p'\n        />\n        <br></br>\n        <Embed\n            style={{height: 2800}}\n            icon='stack exchange'\n            url='https://ezgif.com/pdf-to-gif'\n        /> \n        <br></br>\n        </Container>\n    );\n}\n\nasync function getSignature() {\n    const response = await fetch('/api/sign');\n    const data = await response.json();\n    const { signature, timestamp } = data;\n    return { signature, timestamp };\n}\nexport default UploadArtForm;"]},"metadata":{},"sourceType":"module"}