{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/ArtCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Image, Button, Header, Modal } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ArtCard({\n  artwork,\n  currentUser,\n  onAcquireArtwork\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const {\n    title,\n    image,\n    user\n  } = artwork;\n\n  function handleAcquireArtworkClick(e) {\n    e.preventDefault();\n    fetch('http://localhost:3000/acquisitions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: currentUser.id,\n        artwork_id: artwork.id\n      })\n    }).then(r => r.json()).then(newAcquisition => onAcquireArtwork(newAcquisition));\n  }\n\n  function onAcquireClick(e) {\n    e.preventDefault();\n    handleAcquireArtworkClick(e);\n    setOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    stackable: true,\n    centered: true,\n    style: {\n      margin: 10,\n      padding: 40\n    },\n    children: /*#__PURE__*/_jsxDEV(Modal // onSuccess={() => setOpen(false)}\n    , {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      trigger: /*#__PURE__*/_jsxDEV(Image, {\n        size: \"large\",\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 26\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          wrapped: true,\n          size: \"large\",\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"delete-btn\",\n          color: \"black\",\n          onClick: () => setOpen(false),\n          children: \"Nope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"acquire-btn\",\n          content: \"Add it to the collection\",\n          labelPosition: \"right\",\n          icon: \"checkmark\" // onClick={handleAcquireArtworkClick}\n          ,\n          onClick: onAcquireClick,\n          positive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ArtCard, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = ArtCard;\nexport default ArtCard;\n\n/*#__PURE__*/\n_jsxDEV(Grid //     relaxed columns={3}\n//     // centered columns={2}\n, {\n  style: {\n    margin: 10,\n    padding: 40 // width: 300,\n\n  },\n  children: /*#__PURE__*/_jsxDEV(Container, {\n    itemsPerRow: 4,\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      style: {\n        // height: '50px',\n        width: '150px'\n      },\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      trigger: /*#__PURE__*/_jsxDEV(Image, {\n        size: \"small\",\n        src: aArtwork.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 22\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: aArtwork.image,\n          alt: aArtwork.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            style: {\n              // position: 'relative',\n              // width: '90px',\n              // textAlign: 'left',\n              // display: 'block',\n              fontSize: 'small' // color: 'red',\n\n            },\n            children: aArtwork.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Meta, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"artist-name\",\n            children: aArtwork.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), cUId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: handleAcquireArtworkClick,\n          children: \"acquire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 1\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 92,\n  columnNumber: 1\n}, this); // <div className=\"storage-card\">\n// <div>\n//     <img src={image} alt={title} />\n//     <h3>{title}</h3>\n//     <form onSubmit={handleUpdateArtworkSubmit}>\n//         <input\n//             type=\"text\"\n//             name=\"title\"\n//             autoComplete=\"off\"\n//             value={updatedTitle}\n//             onChange={(e) => setUpdatedTitle(e.target.value)}\n//         /><input type=\"submit\" value=\"update title\"/>\n//     </form>\n//     <button onClick={handleDeleteClick}>delete</button>\n//     <div>\n//         {artwork.acquiring_users.length > 0? (\n//             <>\n//                 <h4>collected by:{aUsers}</h4>\n//             </>\n//         ) : (\n//             <>\n//             </>\n//         )}\n//     </div>\n// </div>\n// </div>\n// function wrapperFunction(handleAcquireArtworkClick) {\n//      setOpen(false);\n// }\n// <Segment basic padded='very' vertical className=\"art-card\">\n// <Image src={image} alt={title} size=\"large\"/>\n// <h3>{title}</h3>\n// <h3>{user.name}</h3>\n// <Button \n//   className=\"button\" \n//   onClick={handleAcquireArtworkClick}>\n//     acquire image\n// </Button>\n// </Segment>\n\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtCard\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/ArtCard.js"],"names":["React","Grid","Image","Button","Header","Modal","ArtCard","artwork","currentUser","onAcquireArtwork","open","setOpen","useState","title","image","user","handleAcquireArtworkClick","e","preventDefault","fetch","method","headers","body","JSON","stringify","user_id","id","artwork_id","then","r","json","newAcquisition","onAcquireClick","margin","padding","name","width","aArtwork","fontSize","user_name","cUId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  Grid,\n  Image,\n  Button,\n  Header,\n  Modal,\n} from 'semantic-ui-react'\n\nfunction ArtCard(\n      { \n          artwork, \n          currentUser, \n          onAcquireArtwork, \n      }\n) {\n\n    const [open, setOpen] = React.useState(false)\n    const { title, image, user } = artwork\n\n    function handleAcquireArtworkClick(e) {\n        e.preventDefault();\n        fetch('http://localhost:3000/acquisitions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            user_id: currentUser.id,\n            artwork_id: artwork.id,\n          }),\n        })\n        .then(r => r.json())\n        .then((newAcquisition) => onAcquireArtwork(newAcquisition))\n      }\n\n      function onAcquireClick(e) {\n        e.preventDefault();\n        handleAcquireArtworkClick(e)\n        setOpen(false)\n      }\n\n      return (\n        <Grid \n          stackable centered \n          style={{ \n            margin: 10,\n            padding: 40,\n          }}\n          >\n            <Modal\n                // onSuccess={() => setOpen(false)}\n                onClose={() => setOpen(false)}\n                onOpen={() => setOpen(true)}\n                open={open}\n                trigger={<Image size=\"large\" src={image} />}\n            >\n                  <Modal.Content image>\n                  <Image wrapped size=\"large\" src={image} />\n                  <Modal.Description>\n                    <Header>{title}</Header>\n                    <p>{user.name}</p>\n                  </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button \n                    className='delete-btn'\n                    color='black' \n                    onClick={() => setOpen(false)} \n                    >\n                    Nope\n                  </Button>\n                  <Button\n                    className='acquire-btn'\n                    content=\"Add it to the collection\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    // onClick={handleAcquireArtworkClick}\n                    onClick={onAcquireClick}\n                    positive\n                  />\n                </Modal.Actions>\n            </Modal>\n          </Grid>\n       );\n  }\n\nexport default ArtCard;\n\n\n\n<Grid \n//     relaxed columns={3}\n//     // centered columns={2}\n    style={{ \n    margin: 10,\n    padding: 40,\n    // width: 300,\n    }}\n>\n     {/* width={3} */}\n{/* //     <Grid.Column> */}\n<Container itemsPerRow={4}>\n        <Modal \n            style={{\n                // height: '50px',\n                width: '150px',\n            }}\n            onClose={() => setOpen(false)}\n            onOpen={() => setOpen(true)}\n            open={open}\n            trigger={<Image size=\"small\" src={aArtwork.image} />}\n        >\n            <Modal.Content image>\n                <Image src={aArtwork.image} alt={aArtwork.title} />\n            <Modal.Description>\n                <Header\n                    style={{\n                        // position: 'relative',\n                        // width: '90px',\n                        // textAlign: 'left',\n                        // display: 'block',\n                        fontSize: 'small',\n                        // color: 'red',\n                    }}\n                >\n                    {aArtwork.title}\n                </Header>\n            </Modal.Description>\n                <Modal.Meta>\n                    <span className='artist-name'>{aArtwork.user_name}</span>\n                </Modal.Meta>\n            </Modal.Content>\n            {cUId ? (\n                <>\n                <Button size='small' onClick={handleAcquireArtworkClick}>\n                    acquire\n                </Button>\n                </>\n            ) : (\n                <>\n                </>\n            )}\n        <br></br>\n        </Modal>\n    </Container>\n     {/* </Grid.Column> */}\n</Grid>\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // <div className=\"storage-card\">\n  // <div>\n  //     <img src={image} alt={title} />\n  //     <h3>{title}</h3>\n  //     <form onSubmit={handleUpdateArtworkSubmit}>\n  //         <input\n  //             type=\"text\"\n  //             name=\"title\"\n  //             autoComplete=\"off\"\n  //             value={updatedTitle}\n  //             onChange={(e) => setUpdatedTitle(e.target.value)}\n  //         /><input type=\"submit\" value=\"update title\"/>\n  //     </form>\n  //     <button onClick={handleDeleteClick}>delete</button>\n  //     <div>\n  //         {artwork.acquiring_users.length > 0? (\n  //             <>\n  //                 <h4>collected by:{aUsers}</h4>\n  //             </>\n  //         ) : (\n  //             <>\n  //             </>\n  //         )}\n  //     </div>\n  // </div>\n  // </div>\n\n\n\n\n\n\n\n\n\n\n\n // function wrapperFunction(handleAcquireArtworkClick) {\n      //      setOpen(false);\n      // }\n\n\n\n  // <Segment basic padded='very' vertical className=\"art-card\">\n  // <Image src={image} alt={title} size=\"large\"/>\n  // <h3>{title}</h3>\n  // <h3>{user.name}</h3>\n  // <Button \n  //   className=\"button\" \n  //   onClick={handleAcquireArtworkClick}>\n  //     acquire image\n  // </Button>\n  // </Segment>"]},"metadata":{},"sourceType":"module"}