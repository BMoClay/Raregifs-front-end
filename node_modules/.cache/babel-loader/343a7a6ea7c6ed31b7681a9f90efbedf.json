{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPage({\n  currentUser,\n  onAcquireArtwork,\n  acquisitions\n}) {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/users').then(r => r.json()).then(usersArray => {\n      setUsers(usersArray);\n    });\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3000/comments').then(r => r.json()).then(commentsArray => {\n      setComments(commentsArray);\n    });\n  }, []);\n\n  function handleAddComment(newComment) {\n    const updatedCommentsArray = [newComment, ...comments];\n    setComments(updatedCommentsArray);\n  }\n\n  function handleDeleteComment(id) {\n    const updatedCommentsArray = comments.filter(comment => comment.id !== id);\n    setComments(updatedCommentsArray);\n  }\n\n  const aUser = users.map(eachUser => {\n    return /*#__PURE__*/_jsxDEV(UserList, {\n      onAddComment: handleAddComment,\n      onDeleteComment: handleDeleteComment,\n      comments: comments,\n      acquisitions: acquisitions,\n      eachUser: eachUser,\n      cUId: currentUser.id,\n      onAcquireArtwork: onAcquireArtwork\n    }, eachUser.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: aUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPage, \"ATpf2WmMWTGB4jx6Lwun/mSAjuA=\");\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserPage.js"],"names":["React","useState","useEffect","UserList","UserPage","currentUser","onAcquireArtwork","acquisitions","users","setUsers","comments","setComments","fetch","then","r","json","usersArray","commentsArray","handleAddComment","newComment","updatedCommentsArray","handleDeleteComment","id","filter","comment","aUser","map","eachUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,CAAkB;AACNC,EAAAA,WADM;AAENC,EAAAA,gBAFM;AAGNC,EAAAA;AAHM,CAAlB,EAIU;AAAA;;AAEN,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUG,UAAU,IAAI;AAChBP,MAAAA,QAAQ,CAACO,UAAD,CAAR;AACH,KAJL;AAKD,GANM,EAMJ,EANI,CAAT;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACKC,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUI,aAAa,IAAI;AACnBN,MAAAA,WAAW,CAACM,aAAD,CAAX;AACH,KAJL;AAKH,GANQ,EAMN,EANM,CAAT;;AAQA,WAASC,gBAAT,CAA0BC,UAA1B,EAAsC;AAElC,UAAMC,oBAAoB,GAAG,CAACD,UAAD,EAAa,GAAGT,QAAhB,CAA7B;AACAC,IAAAA,WAAW,CAACS,oBAAD,CAAX;AACH;;AAED,WAASC,mBAAT,CAA6BC,EAA7B,EAAiC;AAC7B,UAAMF,oBAAoB,GAAGV,QAAQ,CAACa,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACF,EAAR,KAAeA,EAA5C,CAA7B;AACAX,IAAAA,WAAW,CAACS,oBAAD,CAAX;AACH;;AAED,QAAMK,KAAK,GACPjB,KAAK,CAACkB,GAAN,CAAWC,QAAD,IAAc;AACpB,wBAAO,QAAC,QAAD;AAEH,MAAA,YAAY,EAAET,gBAFX;AAGH,MAAA,eAAe,EAAEG,mBAHd;AAIH,MAAA,QAAQ,EAAEX,QAJP;AAKH,MAAA,YAAY,EAAEH,YALX;AAMH,MAAA,QAAQ,EAAEoB,QANP;AAOH,MAAA,IAAI,EAAEtB,WAAW,CAACiB,EAPf;AAQH,MAAA,gBAAgB,EAAEhB;AARf,OACEqB,QAAQ,CAACL,EADX;AAAA;AAAA;AAAA;AAAA,YAAP;AAUH,GAXD,CADJ;AAeA,sBACI;AAAA,cACKG;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAxDQrB,Q;;KAAAA,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport UserList from './UserList'\n\nfunction UserPage({ \n            currentUser, \n            onAcquireArtwork, \n            acquisitions,\n        }){\n    \n    const [users, setUsers] = useState([])\n    const [comments, setComments] = useState([])\n\n    useEffect(() => {\n        fetch('http://localhost:3000/users')\n            .then(r => r.json())\n            .then(usersArray => {\n                setUsers(usersArray);\n            })\n      }, [])\n\n    useEffect(() => {\n        fetch('http://localhost:3000/comments')\n            .then(r => r.json())\n            .then(commentsArray => {\n                setComments(commentsArray);\n            })\n    }, [])\n\n    function handleAddComment(newComment) {\n        \n        const updatedCommentsArray = [newComment, ...comments];\n        setComments(updatedCommentsArray)\n    } \n\n    function handleDeleteComment(id) {\n        const updatedCommentsArray = comments.filter((comment) => comment.id !== id);\n        setComments(updatedCommentsArray);\n    } \n\n    const aUser =\n        users.map((eachUser) => {\n            return <UserList\n                key={eachUser.id}\n                onAddComment={handleAddComment}\n                onDeleteComment={handleDeleteComment}\n                comments={comments}\n                acquisitions={acquisitions}\n                eachUser={eachUser}\n                cUId={currentUser.id}\n                onAcquireArtwork={onAcquireArtwork}\n                />\n        }\n        )\n        \n    return (\n        <div >\n            {aUser}\n        </div>\n    );\n}\nexport default UserPage;\n\n\n"]},"metadata":{},"sourceType":"module"}