{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport StorageList from './StorageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StoragePage({\n  currentUser\n}) {\n  _s();\n\n  const [storedAcquisitions, setStoredAcquisitions] = useState([]);\n  const [storedUserArtworks, setStoredUserArtworks] = useState([]);\n  const {\n    id\n  } = currentUser;\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${id}/acquisitions`).then(r => r.json()) //       .then(userAcquisitionsArray => {\n    //           setStoredAcquisitions(userAcquisitionsArray);\n    //       })\n    // }, [])\n    .then(console.log);\n  });\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${id}/artworks`).then(r => r.json()).then(userArtworksArray => {\n      setStoredUserArtworks(userArtworksArray);\n    });\n  }, []);\n\n  function handleDeleteAcquisition(id) {\n    const updatedAcquisitionsArray = storedAcquisitions.filter(acquisition => acquisition.id !== id);\n    setStoredAcquisitions(updatedAcquisitionsArray);\n  }\n\n  function handleUpdateArtwork(updatedArtwork) {\n    const updatedArtworksArray = storedUserArtworks.map(artwork => {\n      if (artwork.id === updatedArtwork.id) {\n        return updatedArtwork;\n      } else {\n        return artwork;\n      }\n    });\n    setStoredUserArtworks(updatedArtworksArray);\n  }\n\n  function handleDeleteArtwork(id) {\n    const updatedArtworksArray = storedUserArtworks.filter(artwork => artwork.id !== id);\n    setStoredUserArtworks(updatedArtworksArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage\",\n    children: /*#__PURE__*/_jsxDEV(StorageList, {\n      currentUser: currentUser,\n      storedUserArtworks: storedUserArtworks,\n      storedUserAcquisitions: stored,\n      onDeleteAcquisition: handleDeleteAcquisition,\n      onDeleteArtwork: handleDeleteArtwork,\n      onUpdateArtwork: handleUpdateArtwork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_s(StoragePage, \"orGHJX3nfnCpR1ZzrEh0ssTJz30=\");\n\n_c = StoragePage;\nexport default StoragePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoragePage\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js"],"names":["React","useEffect","useState","StorageList","StoragePage","currentUser","storedAcquisitions","setStoredAcquisitions","storedUserArtworks","setStoredUserArtworks","id","fetch","then","r","json","console","log","userArtworksArray","handleDeleteAcquisition","updatedAcquisitionsArray","filter","acquisition","handleUpdateArtwork","updatedArtwork","updatedArtworksArray","map","artwork","handleDeleteArtwork","stored"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAsC;AAAA;;AAEpC,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASL,WAAf;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAE,+BAA8BD,EAAG,eAAnC,CAAL,CACKE,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEF;AACA;AACA;AACA;AALE,KAMKF,IANL,CAMUG,OAAO,CAACC,GANlB;AAMuB,GAPhB,CAAT;AASAf,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAE,+BAA8BD,EAAG,WAAnC,CAAL,CACKE,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUK,iBAAiB,IAAI;AACvBR,MAAAA,qBAAqB,CAACQ,iBAAD,CAArB;AACH,KAJL;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,WAASC,uBAAT,CAAiCR,EAAjC,EAAqC;AACnC,UAAMS,wBAAwB,GAAGb,kBAAkB,CAACc,MAAnB,CAA2BC,WAAD,IAAiBA,WAAW,CAACX,EAAZ,KAAmBA,EAA9D,CAAjC;AACAH,IAAAA,qBAAqB,CAACY,wBAAD,CAArB;AACD;;AAED,WAASG,mBAAT,CAA6BC,cAA7B,EAA6C;AAC3C,UAAMC,oBAAoB,GAAGhB,kBAAkB,CAACiB,GAAnB,CAAwBC,OAAD,IAAa;AAC/D,UAAIA,OAAO,CAAChB,EAAR,KAAea,cAAc,CAACb,EAAlC,EAAsC;AAClC,eAAOa,cAAP;AACH,OAFD,MAEO;AACH,eAAOG,OAAP;AACH;AACF,KAN4B,CAA7B;AAOAjB,IAAAA,qBAAqB,CAACe,oBAAD,CAArB;AACD;;AAED,WAASG,mBAAT,CAA6BjB,EAA7B,EAAiC;AAC/B,UAAMc,oBAAoB,GAAGhB,kBAAkB,CAACY,MAAnB,CAA2BM,OAAD,IAAaA,OAAO,CAAChB,EAAR,KAAeA,EAAtD,CAA7B;AACAD,IAAAA,qBAAqB,CAACe,oBAAD,CAArB;AACD;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE,QAAC,WAAD;AACG,MAAA,WAAW,EAAEnB,WADhB;AAEG,MAAA,kBAAkB,EAAEG,kBAFvB;AAGG,MAAA,sBAAsB,EAAEoB,MAH3B;AAIG,MAAA,mBAAmB,EAAEV,uBAJxB;AAKG,MAAA,eAAe,EAAES,mBALpB;AAMG,MAAA,eAAe,EAAEL;AANpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAYD;;GAxDQlB,W;;KAAAA,W;AA0DT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport StorageList from './StorageList'\n\nfunction StoragePage({ currentUser }) {\n  \n  const [storedAcquisitions, setStoredAcquisitions] = useState([])\n  const [storedUserArtworks, setStoredUserArtworks] = useState([]) \n  const { id } = currentUser;\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${id}/acquisitions`)\n        .then(r => r.json())\n  //       .then(userAcquisitionsArray => {\n  //           setStoredAcquisitions(userAcquisitionsArray);\n  //       })\n  // }, [])\n        .then(console.log)})\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/users/${id}/artworks`)\n        .then(r => r.json())\n        .then(userArtworksArray => {\n            setStoredUserArtworks(userArtworksArray);\n        })\n  }, [])\n\n  function handleDeleteAcquisition(id) {\n    const updatedAcquisitionsArray = storedAcquisitions.filter((acquisition) => acquisition.id !== id);\n    setStoredAcquisitions(updatedAcquisitionsArray);\n  } \n\n  function handleUpdateArtwork(updatedArtwork) {\n    const updatedArtworksArray = storedUserArtworks.map((artwork) => {\n      if (artwork.id === updatedArtwork.id) {\n          return updatedArtwork;\n      } else {\n          return artwork;\n      }\n    })\n    setStoredUserArtworks(updatedArtworksArray);\n  }\n\n  function handleDeleteArtwork(id) {\n    const updatedArtworksArray = storedUserArtworks.filter((artwork) => artwork.id !== id);\n    setStoredUserArtworks(updatedArtworksArray);\n  }  \n\n  return (\n      <div className=\"storage\" >\n        <StorageList\n           currentUser={currentUser}\n           storedUserArtworks={storedUserArtworks}\n           storedUserAcquisitions={stored}\n           onDeleteAcquisition={handleDeleteAcquisition}\n           onDeleteArtwork={handleDeleteArtwork}\n           onUpdateArtwork={handleUpdateArtwork}\n        />\n      </div>\n  );\n}\n\nexport default StoragePage;"]},"metadata":{},"sourceType":"module"}