{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport StorageCardArt from './StorageCardArt';\nimport StorageCardAcquisition from './StorageCardAcquisition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StoragePage({\n  currentUser,\n  // userArtworks,\n  // setUserArtworks,\n  // userAcquisitions,\n  // setUserAcquisitions, \n  onDeleteArtwork,\n  onUpdateArtwork,\n  onDeleteAcquisition\n}) {\n  _s();\n\n  const [userArtworks, setUserArtworks] = useState(currentUser.artworks);\n  const [userAcquisitions, setUserAcquisitions] = useState(currentUser.acquisitions);\n\n  function handleDeleteUserAcquisition(id) {\n    const updatedAcquisitionsArray = currentUser.acquisitions.filter(acquisition => acquisition.id !== id);\n    setUserAcquisitions(updatedAcquisitionsArray);\n  }\n\n  function handleUpdateUserArtwork(updatedArtwork) {\n    const updatedArtworksArray = currentUser.artworks.map(artwork => {\n      if (artwork.id === updatedArtwork.id) {\n        return updatedArtwork;\n      } else {\n        return artwork;\n      }\n    });\n    setUserArtworks(updatedArtworksArray);\n  }\n\n  function handleDeleteUserArtwork(id) {\n    const updatedArtworksArray = currentUser.artworks.filter(artwork => artwork.id !== id);\n    setUserArtworks(updatedArtworksArray);\n  }\n\n  const uArtworkCard = userArtworks.map(artwork => {\n    return /*#__PURE__*/_jsxDEV(StorageCardArt, {\n      artwork: artwork,\n      onUpdateArtwork: onUpdateArtwork,\n      onDeleteArtwork: onDeleteArtwork // setUserArtworks={setUserArtworks}\n\n    }, artwork.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this);\n  });\n  const uAcquisitionCard = userAcquisitions.map(acquisition => {\n    return /*#__PURE__*/_jsxDEV(StorageCardAcquisition, {\n      acquisition: acquisition,\n      artwork: acquisition.artwork,\n      onDeleteAcquisition: onDeleteAcquisition // onDeleteUserAcquisition={onDeleteUserAcquisition}\n      // setUserAcquisitions={setUserAcquisitions}\n\n    }, acquisition.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"My Work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), uArtworkCard, /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), uAcquisitionCard]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StoragePage, \"m4+feQ6NCPJ8tMtqFQd4Xec59uQ=\");\n\n_c = StoragePage;\nexport default StoragePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoragePage\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/StoragePage.js"],"names":["React","useState","StorageCardArt","StorageCardAcquisition","StoragePage","currentUser","onDeleteArtwork","onUpdateArtwork","onDeleteAcquisition","userArtworks","setUserArtworks","artworks","userAcquisitions","setUserAcquisitions","acquisitions","handleDeleteUserAcquisition","id","updatedAcquisitionsArray","filter","acquisition","handleUpdateUserArtwork","updatedArtwork","updatedArtworksArray","map","artwork","handleDeleteUserArtwork","uArtworkCard","uAcquisitionCard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;;;AAEA,SAASC,WAAT,CAAqB;AACjBC,EAAAA,WADiB;AAEjB;AACA;AACA;AACA;AACAC,EAAAA,eANiB;AAOjBC,EAAAA,eAPiB;AAQjBC,EAAAA;AARiB,CAArB,EAQ2B;AAAA;;AAErB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAACI,WAAW,CAACM,QAAb,CAAhD;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAACI,WAAW,CAACS,YAAb,CAAxD;;AAEA,WAASC,2BAAT,CAAqCC,EAArC,EAAyC;AACrC,UAAMC,wBAAwB,GAAGZ,WAAW,CAACS,YAAZ,CAAyBI,MAAzB,CAAiCC,WAAD,IAAiBA,WAAW,CAACH,EAAZ,KAAmBA,EAApE,CAAjC;AACAH,IAAAA,mBAAmB,CAACI,wBAAD,CAAnB;AACH;;AAED,WAASG,uBAAT,CAAiCC,cAAjC,EAAiD;AAC7C,UAAMC,oBAAoB,GAAGjB,WAAW,CAACM,QAAZ,CAAqBY,GAArB,CAA0BC,OAAD,IAAa;AAC/D,UAAIA,OAAO,CAACR,EAAR,KAAeK,cAAc,CAACL,EAAlC,EAAsC;AAClC,eAAOK,cAAP;AACH,OAFD,MAEO;AACH,eAAOG,OAAP;AACH;AACJ,KAN4B,CAA7B;AAOAd,IAAAA,eAAe,CAACY,oBAAD,CAAf;AACH;;AAED,WAASG,uBAAT,CAAiCT,EAAjC,EAAqC;AACjC,UAAMM,oBAAoB,GAAGjB,WAAW,CAACM,QAAZ,CAAqBO,MAArB,CAA6BM,OAAD,IAAaA,OAAO,CAACR,EAAR,KAAeA,EAAxD,CAA7B;AACAN,IAAAA,eAAe,CAACY,oBAAD,CAAf;AACH;;AAED,QAAMI,YAAY,GACdjB,YAAY,CAACc,GAAb,CAAkBC,OAAD,IAAa;AAC1B,wBAAO,QAAC,cAAD;AAEL,MAAA,OAAO,EAAEA,OAFJ;AAGL,MAAA,eAAe,EAAEjB,eAHZ;AAIL,MAAA,eAAe,EAAED,eAJZ,CAKL;;AALK,OACAkB,OAAO,CAACR,EADR;AAAA;AAAA;AAAA;AAAA,YAAP;AAOH,GARD,CADJ;AAWA,QAAMW,gBAAgB,GAClBf,gBAAgB,CAACW,GAAjB,CAAsBJ,WAAD,IAAiB;AAClC,wBAAO,QAAC,sBAAD;AAEL,MAAA,WAAW,EAAEA,WAFR;AAGL,MAAA,OAAO,EAAEA,WAAW,CAACK,OAHhB;AAIL,MAAA,mBAAmB,EAAEhB,mBAJhB,CAKL;AACA;;AANK,OACAW,WAAW,CAACH,EADZ;AAAA;AAAA;AAAA;AAAA,YAAP;AAQH,GATD,CADJ;AAYF,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEOU,YAFP,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIOC,gBAJP;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAjEQvB,W;;KAAAA,W;AAmET,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport StorageCardArt from './StorageCardArt';\nimport StorageCardAcquisition from './StorageCardAcquisition'\n\nfunction StoragePage({ \n    currentUser,\n    // userArtworks,\n    // setUserArtworks,\n    // userAcquisitions,\n    // setUserAcquisitions, \n    onDeleteArtwork, \n    onUpdateArtwork, \n    onDeleteAcquisition }) {\n\n      const [userArtworks, setUserArtworks] = useState(currentUser.artworks)\n      const [userAcquisitions, setUserAcquisitions] = useState(currentUser.acquisitions)\n\n      function handleDeleteUserAcquisition(id) {\n          const updatedAcquisitionsArray = currentUser.acquisitions.filter((acquisition) => acquisition.id !== id);\n          setUserAcquisitions(updatedAcquisitionsArray);\n      } \n    \n      function handleUpdateUserArtwork(updatedArtwork) {\n          const updatedArtworksArray = currentUser.artworks.map((artwork) => {\n              if (artwork.id === updatedArtwork.id) {\n                  return updatedArtwork;\n              } else {\n                  return artwork;\n              }\n          })\n          setUserArtworks(updatedArtworksArray);\n      }\n    \n      function handleDeleteUserArtwork(id) {\n          const updatedArtworksArray = currentUser.artworks.filter((artwork) => artwork.id !== id);\n          setUserArtworks(updatedArtworksArray);\n      }  \n\n      const uArtworkCard =\n          userArtworks.map((artwork) => { \n              return <StorageCardArt \n                key={artwork.id}\n                artwork={artwork}\n                onUpdateArtwork={onUpdateArtwork}\n                onDeleteArtwork={onDeleteArtwork}\n                // setUserArtworks={setUserArtworks}\n              />\n          })\n      \n      const uAcquisitionCard = \n          userAcquisitions.map((acquisition) => {\n              return <StorageCardAcquisition\n                key={acquisition.id}\n                acquisition={acquisition}\n                artwork={acquisition.artwork}\n                onDeleteAcquisition={onDeleteAcquisition}\n                // onDeleteUserAcquisition={onDeleteUserAcquisition}\n                // setUserAcquisitions={setUserAcquisitions}\n              />\n          })    \n\n    return (\n        <div className=\"storage\" >\n          <h4>My Work</h4>\n              {uArtworkCard}\n          <h4>Collection</h4>\n              {uAcquisitionCard}\n        </div>\n    );\n}\n\nexport default StoragePage;"]},"metadata":{},"sourceType":"module"}