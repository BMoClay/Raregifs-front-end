{"ast":null,"code":"var _jsxFileName = \"/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport UserAcquisitionCard from './UserAcquisitionCard';\nimport CommentForm from './CommentForm';\nimport CommentCard from './CommentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserList({\n  eachUser,\n  id,\n  onAcquireArtwork\n}) {\n  _s();\n\n  console.log(eachUser);\n  const [comments, setComments] = useState([eachUser.comments_received]);\n\n  function handleAddComment(newComment) {\n    const updatedCommentsArray = [newComment, ...comments];\n    setComments(updatedCommentsArray);\n  }\n\n  function handleDeleteComment(id) {\n    const updatedCommentsArray = comments.filter(comment => comment.id !== id);\n    setComments(updatedCommentsArray);\n  }\n\n  const uAcquisitions = eachUser.acquisitions ? eachUser.acquisitions.map(acquisition => {\n    return /*#__PURE__*/_jsxDEV(UserAcquisitionCard, {\n      acquisition: acquisition,\n      currentUserID: currentUser.id,\n      onAcquireArtwork: onAcquireArtwork\n    }, acquisition.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this);\n  }) : null;\n  let uComments = eachUser.comments_received ? eachUser.comments_received.map(comment => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CommentCard, {\n        currentUserID: currentUser.id,\n        commentID: comment.id,\n        content: comment.content,\n        author: comment.author,\n        commenter_id: comment.commenter_id,\n        onDeleteComment: handleDeleteComment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"The \", eachUser.name, \" Collection\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), uAcquisitions, /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Comments on \", eachUser.name, \"'s collection\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), uComments, /*#__PURE__*/_jsxDEV(CommentForm, {\n      eachUserID: eachUser.id,\n      currentUserID: currentUser.id,\n      onAddComment: handleAddComment,\n      onDeleteComment: handleDeleteComment\n    }, currentUser.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserList, \"FIDXvk+gYsolPX3oa90S3GQjyzk=\");\n\n_c = UserList;\nexport default UserList; // const userAcquisitions =\n// users.map((user) => {\n//         return <AcquisitionCard\n//         // acquisition={acquisition}\n//         key={user.id}\n//         userCollection={user.acquisitions}\n//         user={user}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         // userAcquisition={userAcquisition}\n//         />\n//         user.acquisitions.map((userAcquisition) => {\n//             return console.log(userAcquisition)\n//         })\n// })\n// let userCard =\n// users.map((user) => {\n//     return (\n//         <div>\n//             <h4>{user.name}</h4>\n//             <AcquisitionCard\n//         key={user.id}\n//         user={user}\n//         userAcquisition={user.acquisitions.map((acquisition) => \n//             acquisition={acquisition}\n//             )}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         />\n//         </div>\n//     )\n// }) \n// const [eachUser, setEachUser] = useState([])\n// const [users, setUsers] = useState([])\n// // need to run a loop on users to get each user\n// // need to run a loop on each user to get each acquisition\n// useEffect(() => {\n//     fetch('http://localhost:3000/users')\n//         .then(r => r.json())\n//         .then(usersArray => {\n//             setUsers(usersArray);\n//         })\n//   }, [])\n// const userAcquisitionCard =\n//     users.map((userAcquisition) => {\n//     return <AcquisitionCard\n//         key={eachUser.id}\n//         userAcquisition={userAcquisition}\n//         eachUser={eachUser}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         />\n// })\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/benmorgan-cleveland/Development/code/Mod5/Raregifs-front-end/raregifs/src/Components/UserList.js"],"names":["React","useState","UserAcquisitionCard","CommentForm","CommentCard","UserList","eachUser","id","onAcquireArtwork","console","log","comments","setComments","comments_received","handleAddComment","newComment","updatedCommentsArray","handleDeleteComment","filter","comment","uAcquisitions","acquisitions","map","acquisition","currentUser","uComments","content","author","commenter_id","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport UserAcquisitionCard from './UserAcquisitionCard'\nimport CommentForm from './CommentForm'\nimport CommentCard from './CommentCard'\n\nfunction UserList({ eachUser, id, onAcquireArtwork }){\n    console.log(eachUser)\n    const [comments, setComments] = useState([eachUser.comments_received])\n\n    function handleAddComment(newComment) {\n        const updatedCommentsArray = [newComment, ...comments];\n        setComments(updatedCommentsArray)\n    } \n\n    function handleDeleteComment(id) {\n        const updatedCommentsArray = comments.filter((comment) => comment.id !== id);\n        setComments(updatedCommentsArray);\n    } \n\n    const uAcquisitions =\n        eachUser.acquisitions ? (eachUser.acquisitions.map((acquisition) => {\n            return <UserAcquisitionCard\n                        key={acquisition.id}\n                        acquisition={acquisition}\n                        currentUserID={currentUser.id} \n                        onAcquireArtwork={onAcquireArtwork}\n                    />\n        })\n        ) : (null)\n\n    let uComments =\n        eachUser.comments_received ? (eachUser.comments_received.map((comment) => {\n            return( \n                <div>\n                    <CommentCard\n                        key={comment.id}\n                        currentUserID={currentUser.id}\n                        commentID={comment.id}\n                        content={comment.content}\n                        author={comment.author}\n                        commenter_id={comment.commenter_id}\n                        onDeleteComment={handleDeleteComment}\n                    />\n                </div>\n            )\n        }\n        )) : (null)\n\n    return(\n        <div>\n            <h2>The {eachUser.name} Collection</h2>\n                {uAcquisitions}\n            <h3>Comments on {eachUser.name}'s collection</h3>    \n                {uComments}\n                <CommentForm \n                    key={currentUser.id}\n                    eachUserID={eachUser.id} \n                    currentUserID={currentUser.id} \n                    onAddComment={handleAddComment}\n                    onDeleteComment={handleDeleteComment}\n                    />\n                <br></br>\n        </div>\n    );\n}\n\nexport default UserList;\n\n\n\n// const userAcquisitions =\n// users.map((user) => {\n//         return <AcquisitionCard\n//         // acquisition={acquisition}\n//         key={user.id}\n//         userCollection={user.acquisitions}\n//         user={user}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         // userAcquisition={userAcquisition}\n//         />\n//         user.acquisitions.map((userAcquisition) => {\n//             return console.log(userAcquisition)\n//         })\n// })\n\n\n// let userCard =\n// users.map((user) => {\n//     return (\n//         <div>\n//             <h4>{user.name}</h4>\n//             <AcquisitionCard\n//         key={user.id}\n//         user={user}\n//         userAcquisition={user.acquisitions.map((acquisition) => \n//             acquisition={acquisition}\n//             )}\n//         currentUser={currentUser} \n//         onAcquireArtwork={onAcquireArtwork}\n//         />\n//         </div>\n//     )\n// }) \n\n\n\n\n\n\n\n\n\n // const [eachUser, setEachUser] = useState([])\n    // const [users, setUsers] = useState([])\n    // // need to run a loop on users to get each user\n    // // need to run a loop on each user to get each acquisition\n    // useEffect(() => {\n    //     fetch('http://localhost:3000/users')\n    //         .then(r => r.json())\n    //         .then(usersArray => {\n    //             setUsers(usersArray);\n    //         })\n    //   }, [])\n\n    // const userAcquisitionCard =\n   \n    //     users.map((userAcquisition) => {\n    //     return <AcquisitionCard\n    //         key={eachUser.id}\n    //         userAcquisition={userAcquisition}\n    //         eachUser={eachUser}\n    //         currentUser={currentUser} \n    //         onAcquireArtwork={onAcquireArtwork}\n    //         />\n    // })"]},"metadata":{},"sourceType":"module"}